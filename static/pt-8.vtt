WEBVTT

00:00:01.996 --> 00:00:04.990
[MÚSICA, TOCANDO]

00:01:12.355 --> 00:01:14.850
[REPRODUÇÃO DE VÍDEO]

00:01:42.340 --> 00:01:45.760
- Todo o caminho até o topo e depois você passa para baixo.

00:01:45.760 --> 00:01:47.230
- Isto é para você, Yale.

00:01:47.230 --> 00:01:48.460
Nós amamos você, Yale.

00:01:48.460 --> 00:01:50.096
- Estamos aqui para torcer por Harvard.

00:01:50.096 --> 00:01:51.042
- Sim.

00:01:51.042 --> 00:01:51.988
Vá para Harvard.

00:01:54.678 --> 00:01:55.845
- Pegue um e passe para baixo.

00:01:55.845 --> 00:01:56.620
- Passe-os para baixo.

00:01:56.620 --> 00:01:59.945
- Não vai dizer algo como Yale é uma merda, não é?

00:01:59.945 --> 00:02:02.330
- Diz para ir para Harvard.

00:02:02.330 --> 00:02:03.710
- Nós somos legais.

00:02:03.710 --> 00:02:05.033
- Você vê isso [BLEEP]?

00:02:05.033 --> 00:02:05.575
Olhe para eles.

00:02:05.575 --> 00:02:07.060
Eles passaram o papel.

00:02:07.060 --> 00:02:09.800
Vai acontecer.

00:02:09.800 --> 00:02:12.460
Isso realmente vai acontecer.

00:02:12.460 --> 00:02:13.680
Eu não posso [BLEEP] acreditar.

00:02:13.680 --> 00:02:15.810
- O que você acha de Yale?

00:02:15.810 --> 00:02:18.666
- Eles não pensam bem.

00:02:18.666 --> 00:02:20.560
- Pode ser uma bagunça completa, não sei.

00:02:20.560 --> 00:02:21.075
- Você realmente não pode corrigi-lo agora.

00:02:21.075 --> 00:02:21.880
- Todo mundo tem?

00:02:21.880 --> 00:02:23.093
Alguém tem as coisas deles?

00:02:23.093 --> 00:02:24.385
Todo mundo tem suas coisas?

00:02:24.385 --> 00:02:26.968
- A probabilidade de ser legível é muito pequena.

00:02:26.968 --> 00:02:27.790
- Concordo.

00:02:27.790 --> 00:02:29.140
- É muito complicado.

00:02:29.140 --> 00:02:30.490
- Observe todos os sinais.

00:02:30.490 --> 00:02:32.320
- Eu sei, mas é muito complicado.

00:02:32.320 --> 00:02:34.396
- Em que casas vocês estão?

00:02:34.396 --> 00:02:35.860
Isso não é uma casa de verdade.

00:02:35.860 --> 00:02:37.170
- Quantos extras há?

00:02:37.170 --> 00:02:37.450
- Ho-fo?

00:02:37.450 --> 00:02:37.950
- Sim.

00:02:41.425 --> 00:02:43.050
- Vocês não são de Harvard, são?

00:02:43.050 --> 00:02:43.670
- Não, Fofo.

00:02:43.670 --> 00:02:44.210
Pforzheimer.

00:02:44.210 --> 00:02:46.050
- Sim, mas ela disse ho-fo.

00:02:46.050 --> 00:02:48.295
- Bem, ela provavelmente está bêbada.

00:02:48.295 --> 00:02:49.670
- Todo mundo tem suas coisas?

00:02:49.670 --> 00:02:51.003
- Todos os cartões são distribuídos?

00:02:51.003 --> 00:02:53.120
- Tudo bem, vamos fazer isso agora.

00:02:53.120 --> 00:02:55.565
[TORCENDO]

00:02:55.565 --> 00:02:58.499
- Sim, olhe.

00:02:58.499 --> 00:02:59.477
- Oh meu Deus.

00:02:59.477 --> 00:03:02.411
Vai funcionar.

00:03:02.411 --> 00:03:03.878
[TORCENDO]

00:03:06.323 --> 00:03:08.279
- Segure seus sinais.

00:03:08.279 --> 00:03:09.280
[BLEEP]

00:03:09.280 --> 00:03:14.870
- Você chupa, você chupa, você chupa, você chupa, você chupa, você chupa.

00:03:14.870 --> 00:03:15.985
- Nós [BLEEP] fizemos isso.

00:03:15.985 --> 00:03:17.095
[BLEEP]

00:03:17.095 --> 00:03:22.916
- Você chupa, você chupa, você chupa, você chupa, você chupa, você chupa.

00:03:22.916 --> 00:03:25.760
- O que acha de Yale, senhor?

00:03:25.760 --> 00:03:26.540
- Eles sugam.

00:03:26.540 --> 00:03:27.235
[RISOS]

00:03:27.235 --> 00:03:28.205
- Eles sugam?

00:03:28.205 --> 00:03:29.175
- Mais uma vez.

00:03:29.175 --> 00:03:31.115
Mais uma vez.

00:03:31.115 --> 00:03:34.025
[TORCENDO]

00:03:35.937 --> 00:03:37.020
- Ah, lá vai de novo.

00:03:40.182 --> 00:03:47.702
- Harvard é uma merda, Harvard é uma merda, Harvard é uma merda, Harvard é uma merda, Harvard é uma merda,

00:03:47.702 --> 00:03:50.142
Harvard é uma merda, Harvard é uma merda.

00:03:53.558 --> 00:03:55.330
[TERMINAR REPRODUÇÃO]

00:03:55.330 --> 00:03:56.950
ADÃO: Tudo bem.

00:03:56.950 --> 00:03:59.020
Este é CS50.

00:03:59.020 --> 00:04:00.490
Bem-vindo à oitava semana.

00:04:00.490 --> 00:04:06.160
Na semana passada, aprendemos como criar, ler, atualizar e excluir bancos de dados

00:04:06.160 --> 00:04:07.180
usando SQL.

00:04:07.180 --> 00:04:09.250
Mas esta semana--

00:04:09.250 --> 00:04:10.330
- Adão, pessoal.

00:04:10.330 --> 00:04:11.560
Feliz Dia das Bruxas.

00:04:11.560 --> 00:04:13.488
[RISOS]

00:04:13.488 --> 00:04:15.416
[APLAUSOS]

00:04:18.790 --> 00:04:19.779
DAVID MALAN: Tudo bem.

00:04:19.779 --> 00:04:23.320
Portanto, este é o CS50 e já é a oitava semana.

00:04:23.320 --> 00:04:27.160
Meus agradecimentos a Adam por hoje, neste Feliz Dia das Bruxas.

00:04:27.160 --> 00:04:29.770
Nos próximos momentos, vamos aprender

00:04:29.770 --> 00:04:32.210
tudo sobre como a própria internet funciona, o que é claro,

00:04:32.210 --> 00:04:36.250
é uma tecnologia que todos nós usamos todos os dias, provavelmente usando de alguma forma

00:04:36.250 --> 00:04:37.000
agora mesmo.

00:04:37.000 --> 00:04:39.833
Mas veremos que se você começar a entender alguns dos fundamentos

00:04:39.833 --> 00:04:42.140
blocos de construção que alimentam a própria internet,

00:04:42.140 --> 00:04:44.860
podemos realmente começar a construir coisas interessantes em cima dele.

00:04:44.860 --> 00:04:46.860
E muitos dos aplicativos, os sites que todos vocês

00:04:46.860 --> 00:04:50.290
usam todos os dias devem se tornar cada vez mais familiares, coisas que vocês mesmos

00:04:50.290 --> 00:04:50.800
pode criar.

00:04:50.800 --> 00:04:52.508
E honestamente, quando as coisas derem errado, você

00:04:52.508 --> 00:04:56.410
têm ainda mais um modelo mental de como as coisas funcionam ou não são, de fato,

00:04:56.410 --> 00:04:59.530
trabalhando para que você possa finalmente diagnosticar

00:04:59.530 --> 00:05:00.910
tanto mais questões vocês mesmos.

00:05:00.910 --> 00:05:03.550
Então, se dermos uma olhada na internet nos primeiros dias,

00:05:03.550 --> 00:05:04.820
foi basicamente isso.

00:05:04.820 --> 00:05:07.570
Isso acontece, é claro, a geografia dos Estados Unidos.

00:05:07.570 --> 00:05:12.110
E só alguns dos primeiros pontos da internet foram esses aqui.

00:05:12.110 --> 00:05:14.740
Isso foi chamado de ARPANET em 1969.

00:05:14.740 --> 00:05:17.770
E de fato, a internet teve sua origem aqui nos Estados Unidos

00:05:17.770 --> 00:05:21.490
com apenas alguns computadores interconectados de alguma forma inicialmente.

00:05:21.490 --> 00:05:24.290
Que, claro, começou a crescer com o tempo tal

00:05:24.290 --> 00:05:27.040
que finalmente tivemos a Costa Oeste conectada à Costa Leste.

00:05:27.040 --> 00:05:30.010
E hoje em dia o que você pode pensar desses pontos na tela

00:05:30.010 --> 00:05:32.650
como representação são essas coisas chamadas roteadores, classificar

00:05:32.650 --> 00:05:36.250
de computadores ou realmente servidores que de alguma forma têm fios ou talvez

00:05:36.250 --> 00:05:40.090
conexões sem fio entre eles que permitem que os dados fluam do ponto A

00:05:40.090 --> 00:05:43.060
para B para C. E então isso, é claro, agora foi ampliado

00:05:43.060 --> 00:05:46.000
em todo o globo e até mesmo acima do solo

00:05:46.000 --> 00:05:51.070
bem como para que possamos nos conectar com mais facilidade a sistemas em qualquer lugar.

00:05:51.070 --> 00:05:55.400
Agora, para rotear os dados de um roteador para outro,

00:05:55.400 --> 00:05:57.500
precisamos de alguma forma tomar decisões de roteamento.

00:05:57.500 --> 00:06:01.137
E esse é o tipo de coisa que os provedores de internet, os ISPs

00:06:01.137 --> 00:06:02.470
do mundo apenas lidar para nós.

00:06:02.470 --> 00:06:05.890
Você e eu conectamos nossos Macs, nossos PCs na rede aqui em Harvard

00:06:05.890 --> 00:06:08.290
ou equivalente em Yale ou de alguma forma ficamos online

00:06:08.290 --> 00:06:10.630
via Wi-Fi ou tecnologia celular.

00:06:10.630 --> 00:06:14.200
E então algumas dessas entidades maiores, essas empresas ou países maiores,

00:06:14.200 --> 00:06:16.930
lidar com a maioria dos dados obtidos do ponto A

00:06:16.930 --> 00:06:20.410
para o ponto B. E se você pensar sobre o que esses roteadores representam,

00:06:20.410 --> 00:06:22.630
eles são apenas servidores de alguma forma interconectados,

00:06:22.630 --> 00:06:26.900
não muito diferente desta grade de blocos aqui, por exemplo, na época do Zoom.

00:06:26.900 --> 00:06:29.782
E de fato aqui temos, afirmo, uma grade de roteadores

00:06:29.782 --> 00:06:32.740
implementadas aqui pelos professores bolsistas e assistentes do curso

00:06:32.740 --> 00:06:33.430
e TAs.

00:06:33.430 --> 00:06:36.820
E se o objetivo em questão, por exemplo, for para Phyllis

00:06:36.820 --> 00:06:39.447
para encaminhar alguma informação, talvez seja um e-mail,

00:06:39.447 --> 00:06:42.280
talvez seja uma solicitação para uma página da web no canto inferior direito,

00:06:42.280 --> 00:06:45.460
até, digamos, Brian aqui no canto superior esquerdo.

00:06:45.460 --> 00:06:49.930
Basta dizer se cada um desses tiles representa um roteador, um servidor que

00:06:49.930 --> 00:06:52.090
pode mover os dados para frente, para trás, para a esquerda e para a direita,

00:06:52.090 --> 00:06:55.300
aquele pacote de informações, por assim dizer, de Phyllis para Brian

00:06:55.300 --> 00:06:58.390
poderia tomar qualquer número de diferentes rotas possíveis.

00:06:58.390 --> 00:07:01.670
Cima, baixo, esquerda, direita para ir de um canto a outro.

00:07:01.670 --> 00:07:03.820
Então deixe-me ir em frente e clicar em Play neste vídeo

00:07:03.820 --> 00:07:06.820
aqui em que os bolsistas de ensino desempenham esse mesmo papel.

00:07:06.820 --> 00:07:08.284
[REPRODUÇÃO DE VÍDEO]

00:07:08.284 --> 00:07:10.236
[MÚSICA, TOCANDO]

00:07:21.460 --> 00:07:22.043
[TERMINAR REPRODUÇÃO]

00:07:22.043 --> 00:07:24.168
DAVID MALAN: Tudo bem, então neste caso particular,

00:07:24.168 --> 00:07:26.280
os dados foram encaminhados de forma bastante direta

00:07:26.280 --> 00:07:27.390
para cima e depois para a esquerda.

00:07:27.390 --> 00:07:30.030
Mas suponha que um ou mais funcionários estivessem um pouco ocupados.

00:07:30.030 --> 00:07:32.310
Talvez um dos roteadores esteja congestionado.

00:07:32.310 --> 00:07:34.440
Ou seja, pegue muito mais envelopes

00:07:34.440 --> 00:07:36.240
em um momento no tempo que ele pode lidar.

00:07:36.240 --> 00:07:38.490
Felizmente, o design da internet é tão

00:07:38.490 --> 00:07:41.340
que muitas vezes há várias maneiras pelas quais os dados podem chegar do ponto A

00:07:41.340 --> 00:07:45.100
para o ponto B, talvez passando pelo ponto C ou pelo ponto D.

00:07:45.100 --> 00:07:48.720
E então há uma resiliência lá, mesmo quando alguns dos próprios servidores

00:07:48.720 --> 00:07:49.410
pode cair.

00:07:49.410 --> 00:07:52.140
Permita-me propor que usemos a mesma grade de roteadores

00:07:52.140 --> 00:07:56.742
agora para rotear os dados de uma maneira um pouco diferente desta vez.

00:07:56.742 --> 00:07:58.710
[REPRODUÇÃO DE VÍDEO]

00:07:58.710 --> 00:08:00.678
[MÚSICA, TOCANDO]

00:08:23.310 --> 00:08:24.130
[TERMINAR REPRODUÇÃO]

00:08:24.130 --> 00:08:25.130
DAVID MALAN: Então, sucesso.

00:08:25.130 --> 00:08:27.380
Você verá talvez mais tarde quantas tomadas foram necessárias

00:08:27.380 --> 00:08:29.060
para realmente obtermos esse roteamento correto.

00:08:29.060 --> 00:08:33.140
Mas, de fato, manifesta que você pode percorrer caminhos diferentes para

00:08:33.140 --> 00:08:36.502
para obter os dados do ponto A para o ponto B. Enquanto falamos sobre roteadores,

00:08:36.502 --> 00:08:38.960
quando você pensa na internet, quero dizer, pense naqueles humanos

00:08:38.960 --> 00:08:40.520
apenas representando esses roteadores.

00:08:40.520 --> 00:08:43.159
Pontos de A a P e em todos os lugares entre eles.

00:08:43.159 --> 00:08:47.780
Agora, como a equipe de ensino sabe como encaminhar esse pacote e depois

00:08:47.780 --> 00:08:50.810
para baixo ou esquerda e direita para chegar ao destino?

00:08:50.810 --> 00:08:54.410
Bem, todos eles foram programados, por assim dizer, para entender protocolos.

00:08:54.410 --> 00:08:59.480
É chamado de TCP e IP, também conhecidos juntos normalmente como TCP/IP.

00:08:59.480 --> 00:09:01.970
E você provavelmente já viu essas siglas em algum momento

00:09:01.970 --> 00:09:05.238
no mundo real, na internet, em algum tipo de documentação, um texto

00:09:05.238 --> 00:09:07.280
mesmo que você não tenha pensado muito sobre isso.

00:09:07.280 --> 00:09:11.040
Mas o IP é certamente o mais comum dos dois, talvez na cultura comum.

00:09:11.040 --> 00:09:13.230
Então, o que o TCP e o IP fazem por nós?

00:09:13.230 --> 00:09:15.200
Bem, realmente duas coisas principais.

00:09:15.200 --> 00:09:19.220
Qualquer computador ou qualquer membro da equipe de ensino que entenda TCP/IP

00:09:19.220 --> 00:09:22.280
sabe como obter dados do ponto A ao ponto B. Mas como?

00:09:22.280 --> 00:09:25.070
Bem, vamos detalhar qual é esse problema a ser resolvido.

00:09:25.070 --> 00:09:27.500
IP, também conhecido como Protocolo de Internet,

00:09:27.500 --> 00:09:31.370
é um protocolo que os computadores falam que lhes permite saber como

00:09:31.370 --> 00:09:33.560
para endereçar computadores na internet.

00:09:33.560 --> 00:09:37.560
E um protocolo é apenas um conjunto de convenções às quais os computadores aderem.

00:09:37.560 --> 00:09:40.610
Alguém escreveu um código que provavelmente tem muitos condicionais

00:09:40.610 --> 00:09:43.160
que diz ao computador o que fazer se algo acontecer.

00:09:43.160 --> 00:09:46.610
Como se eu recebesse um pacote e o enviasse para o próximo servidor

00:09:46.610 --> 00:09:47.600
ou algo assim.

00:09:47.600 --> 00:09:49.850
No mundo humano, também temos protocolos.

00:09:49.850 --> 00:09:54.260
Em tempos mais saudáveis, era bastante comum estender a mão para outro ser humano

00:09:54.260 --> 00:09:55.340
para cumprimentá-los.

00:09:55.340 --> 00:09:59.300
E se eles estão seguindo o protocolo humano, eles provavelmente pegariam sua mão

00:09:59.300 --> 00:10:02.690
e agitá-lo, pelo menos em uma cultura como esta aqui no campus.

00:10:02.690 --> 00:10:06.260
E agora esse é um protocolo humano em que alguém o inicia,

00:10:06.260 --> 00:10:08.822
alguém responde a isso e vocês dois meio que sabem o que fazer.

00:10:08.822 --> 00:10:10.280
Você está programado para saber o que fazer.

00:10:10.280 --> 00:10:12.410
Então, a mesma ideia com protocolo de internet.

00:10:12.410 --> 00:10:15.530
Os computadores só sabem o que fazer quando foram programados para isso.

00:10:15.530 --> 00:10:16.640
Então o que isso quer dizer?

00:10:16.640 --> 00:10:22.340
Se o IP decidir que todos os computadores do mundo terão um endereço único,

00:10:22.340 --> 00:10:27.830
assim como o Centro de Ciências na esquina pode ter um endereço exclusivo de 1

00:10:27.830 --> 00:10:32.090
Oxford Street, Cambridge, Massachusetts, 02138, EUA.

00:10:32.090 --> 00:10:34.550
O IP determina que todos os computadores na Internet

00:10:34.550 --> 00:10:36.233
tem um endereço exclusivo deste formulário.

00:10:36.233 --> 00:10:38.900
E isso também é provavelmente algo que você já viu no mundo real

00:10:38.900 --> 00:10:40.817
mesmo que você não tenha pensado muito sobre isso.

00:10:40.817 --> 00:10:44.270
É um número e o que é chamado de notação decimal pontuada, que

00:10:44.270 --> 00:10:47.450
significa que é um número decimal ponto algo ponto algo ponto algo.

00:10:47.450 --> 00:10:51.140
Então, quatro dígitos separados por convenção por ponto decimal,

00:10:51.140 --> 00:10:53.910
embora existam versões mais novas e maiores do mesmo.

00:10:53.910 --> 00:10:56.570
E esses chamados endereços IP que podem

00:10:56.570 --> 00:11:02.570
ser tão simples quanto 1.2.3.4 identificar exclusivamente um computador na Internet.

00:11:02.570 --> 00:11:07.160
Os números devem variar de 0 a 255 cada.

00:11:07.160 --> 00:11:10.340
E isso é uma dica quando você começa a pensar mais computacionalmente.

00:11:10.340 --> 00:11:13.100
Se cada um deles for um número de 0 a 255,

00:11:13.100 --> 00:11:17.180
quantos bits isso sugere que cada número está usando?

00:11:17.180 --> 00:11:19.800
Sinta-se à vontade para gritar.

00:11:19.800 --> 00:11:21.900
Quantos bits nos dá 255?

00:11:21.900 --> 00:11:23.770
256 possibilidades totais.

00:11:23.770 --> 00:11:24.570
Então oito bits.

00:11:24.570 --> 00:11:26.778
Isso deve ser apenas uma espécie de heurística em sua mente.

00:11:26.778 --> 00:11:31.650
Sempre que você ouvir algo na faixa de 0 a 255 ou 256 valores no total,

00:11:31.650 --> 00:11:35.070
pense na semana 0, que nos dá oito bits mais outros oito bits

00:11:35.070 --> 00:11:36.820
outros oito bits e outros oito bits,

00:11:36.820 --> 00:11:40.720
ou seja, um endereço IP normalmente tem 32 bits no total.

00:11:40.720 --> 00:11:43.680
Agora, se fizermos outro cálculo mental rápido ou pensarmos na semana 0,

00:11:43.680 --> 00:11:49.170
se cada endereço IP é de 32 bits, quantos computadores podemos ter na internet

00:11:49.170 --> 00:11:50.730
de uma vez só?

00:11:50.730 --> 00:11:52.410
Dar ou pegar.

00:11:52.410 --> 00:11:56.510
Cerca de 4 bilhões é o estádio.

00:11:56.510 --> 00:11:59.010
E não precisamos ser super precisos para fins de discussão.

00:11:59.010 --> 00:12:01.450
Mas cerca de 4 bilhões é o quão alto você pode

00:12:01.450 --> 00:12:04.930
count, assumindo que não há números negativos, se você tiver 32 bits no total.

00:12:04.930 --> 00:12:09.155
Agora, isso não é um número tão grande de endereços,

00:12:09.155 --> 00:12:11.530
especialmente considerando o número de humanos no mundo,

00:12:11.530 --> 00:12:15.210
o número de nós que tem laptops ou desktops ou dispositivos em geral,

00:12:15.210 --> 00:12:16.990
telefones em nossos bolsos e coisas do gênero.

00:12:16.990 --> 00:12:19.260
Então deixe-me estipular para os propósitos de hoje

00:12:19.260 --> 00:12:22.860
que existe até uma versão mais nova e aprimorada do IP, também conhecida

00:12:22.860 --> 00:12:24.000
como versão 6.

00:12:24.000 --> 00:12:26.610
Esta é a versão 4, mas ainda super popular.

00:12:26.610 --> 00:12:32.250
A versão 6 usa 128 bits, que é um grande número de permutações possíveis.

00:12:32.250 --> 00:12:34.650
Atrevo-me a dizer que nem consigo pronunciar esse número de tão grande.

00:12:34.650 --> 00:12:38.100
Portanto, já existem maneiras de contornar essa limitação.

00:12:38.100 --> 00:12:41.290
Portanto, todo computador tem um endereço como este.

00:12:41.290 --> 00:12:42.670
O que isso realmente significa?

00:12:42.670 --> 00:12:45.870
Bem, suponha que eu fosse Phyllis na história contada visualmente antes

00:12:45.870 --> 00:12:47.610
e quero enviar uma mensagem para Brian.

00:12:47.610 --> 00:12:50.220
Bem, Phyllis e Brian têm endereços IP.

00:12:50.220 --> 00:12:52.560
E suponha que o endereço IP de Brian aconteça

00:12:52.560 --> 00:12:56.010
para ser 1.2.3.4 naquele canto superior esquerdo.

00:12:56.010 --> 00:12:59.610
Bem, o Mac, PC ou telefone de Phyllis basicamente

00:12:59.610 --> 00:13:03.480
faça o equivalente neste envelope humano escrevendo os dois

00:13:03.480 --> 00:13:07.270
endereço no meio do envelope, como é nossa convenção humana, assim.

00:13:07.270 --> 00:13:09.630
Portanto, este é um envelope, um pedaço de informação,

00:13:09.630 --> 00:13:12.090
um e-mail, uma mensagem de texto, qualquer coisa destinada a Brian.

00:13:12.090 --> 00:13:15.660
E então ela faria seu computador colocar o endereço IP de Brian no meio.

00:13:15.660 --> 00:13:19.320
O endereço IP dela é talvez 5.6.7.8.

00:13:19.320 --> 00:13:23.400
Assim como nossa convenção humana, posso escrever 5.6.7.8

00:13:23.400 --> 00:13:24.750
no topo do envelope.

00:13:24.750 --> 00:13:27.030
Cinco, seis, sete, oito.

00:13:27.030 --> 00:13:29.700
Indicando assim qual é o endereço de retorno.

00:13:29.700 --> 00:13:33.120
E isso é útil, porque se o computador de Brian precisar confirmar o recebimento,

00:13:33.120 --> 00:13:36.570
se ele precisa responder de alguma forma, desta forma o envelope tem

00:13:36.570 --> 00:13:38.050
todas as informações de que precisamos.

00:13:38.050 --> 00:13:40.980
Mas no mundo real, os servidores fazem muitas coisas hoje em dia.

00:13:40.980 --> 00:13:44.670
Não apenas e-mail, mas talvez bate-papo, talvez videoconferência, talvez

00:13:44.670 --> 00:13:46.810
qualquer número de outros serviços também.

00:13:46.810 --> 00:13:50.430
Acontece que apenas um endereço pode não ser suficiente,

00:13:50.430 --> 00:13:54.010
porque como o computador de Brian sabe quando ele abre o envelope,

00:13:54.010 --> 00:13:56.790
por assim dizer, que isso deve ser interpretado como um e-mail

00:13:56.790 --> 00:14:00.630
ou interpretado como uma mensagem de bate-papo ou interpretado como um anexo de vídeo

00:14:00.630 --> 00:14:01.680
que Phyllis enviou?

00:14:01.680 --> 00:14:05.220
Bem, precisamos de algum outro mecanismo, alguma outra dica neste envelope

00:14:05.220 --> 00:14:08.860
para distinguir um tipo de serviço de internet de outro.

00:14:08.860 --> 00:14:14.130
E é aí que entra o outro acrônimo em TCP/IP, que é TCP.

00:14:14.130 --> 00:14:16.980
Isso significa Protocolo de Controle de Transmissão,

00:14:16.980 --> 00:14:19.560
que é apenas um conjunto diferente de convenções

00:14:19.560 --> 00:14:23.320
que os computadores aderem para resolver alguns problemas diferentes.

00:14:23.320 --> 00:14:27.780
Uma delas é o problema de distinguir um tipo de serviço de outro.

00:14:27.780 --> 00:14:29.230
Agora, o que isso significa?

00:14:29.230 --> 00:14:32.070
Bem, os humanos décadas atrás decidiram quando começaram

00:14:32.070 --> 00:14:35.250
inventando todos esses vários serviços de internet, sendo a web

00:14:35.250 --> 00:14:39.240
o primeiro, como eles podem - ou a web agora é o mais popular.

00:14:39.240 --> 00:14:42.780
Eles decidiram atribuir diferentes serviços que podem

00:14:42.780 --> 00:14:44.850
ser usado na internet números únicos.

00:14:44.850 --> 00:14:46.920
E então dois dos mais comuns são estes.

00:14:46.920 --> 00:14:50.250
80 é o número que um bando de humanos decidiu anos atrás

00:14:50.250 --> 00:14:52.770
representam o que você e eu conhecemos como HTTP.

00:14:52.770 --> 00:14:55.710
E falaremos mais tecnicamente daqui a pouco sobre o que é HTTP.

00:14:55.710 --> 00:14:59.430
Mas obviamente é o que está no início de cada URL hoje em dia.

00:14:59.430 --> 00:15:03.130
Ou HTTPS, que, claro, tem o S adicionado a ele.

00:15:03.130 --> 00:15:04.590
E isso tem seu próprio número exclusivo.

00:15:04.590 --> 00:15:06.660
E por enquanto, o S significa apenas Seguro.

00:15:06.660 --> 00:15:09.900
Um é criptografado ou embaralhado de alguma forma por questões de privacidade

00:15:09.900 --> 00:15:11.340
e o outro não é criptografado.

00:15:11.340 --> 00:15:13.410
É um pouco mais vulnerável à interceptação.

00:15:13.410 --> 00:15:18.570
Portanto, esses dois números são o que o mundo decidiu ao implementar o TCP.

00:15:18.570 --> 00:15:20.290
identificar exclusivamente esses serviços.

00:15:20.290 --> 00:15:21.340
Então o que isso quer dizer?

00:15:21.340 --> 00:15:24.430
Bem, isso significa que se o computador de Brian na história anterior

00:15:24.430 --> 00:15:27.240
está hospedando não como um servidor de e-mail, mas talvez ele tenha um site

00:15:27.240 --> 00:15:30.670
e Phyllis está solicitando a página inicial de Brian ou algo assim.

00:15:30.670 --> 00:15:34.350
Ela teria seu Mac ou PC ou telefone não apenas

00:15:34.350 --> 00:15:39.420
escreva o endereço IP de Brian no meio do envelope, mas também o número,

00:15:39.420 --> 00:15:41.760
também conhecido como um número de porta que ela

00:15:41.760 --> 00:15:44.610
deseja que este envelope seja roteado.

00:15:44.610 --> 00:15:46.950
Agora, 80 seria inseguro hoje em dia.

00:15:46.950 --> 00:15:53.520
HTTP:// é meio que ultrapassado e quase sempre vemos HTTPS:// agora.

00:15:53.520 --> 00:15:55.500
Vou usar as melhores práticas

00:15:55.500 --> 00:15:57.520
e vou adicionar dois pontos e depois o número

00:15:57.520 --> 00:16:01.570
443 no final do endereço IP de Brian.

00:16:01.570 --> 00:16:05.032
Então agora eu tenho um endereço IP para Brian, o número da porta para o serviço

00:16:05.032 --> 00:16:07.740
que isso é relevante, e não vou me incomodar em escrevê-lo,

00:16:07.740 --> 00:16:09.865
mas acontece que o computador de Phyllis também

00:16:09.865 --> 00:16:12.370
escolha um número de porta, talvez um número de porta aleatório,

00:16:12.370 --> 00:16:14.610
para que Brian possa responder inversamente.

00:16:14.610 --> 00:16:17.670
E então o computador pode saber qual resposta

00:16:17.670 --> 00:16:20.700
está voltando para qual pedido.

00:16:20.700 --> 00:16:23.160
Mas o mais importante é este no campo dois

00:16:23.160 --> 00:16:25.890
pelo que isso o distingue de um e-mail, um bate-papo

00:16:25.890 --> 00:16:28.380
mensagem, uma sessão de videoconferência ou um Zoom ou algo assim

00:16:28.380 --> 00:16:31.450
de qualquer outra coisa acontecendo no computador de Brian ao mesmo tempo.

00:16:31.450 --> 00:16:34.830
Então, todo esse tempo, se você viu esses termos TCP e IP,

00:16:34.830 --> 00:16:38.250
essas são realmente duas das coisas mais importantes que eles fazem.

00:16:38.250 --> 00:16:41.400
Mas o TCP faz outra coisa que é super útil também.

00:16:41.400 --> 00:16:47.100
Acontece que é super comum hoje em dia, especialmente

00:16:47.100 --> 00:16:50.340
transmitir muita mídia na internet, seja uma imagem

00:16:50.340 --> 00:16:53.280
ou talvez seja um arquivo de filme, e seria um pouco desagradável,

00:16:53.280 --> 00:16:56.510
para dizer o mínimo, se você está baixando um arquivo muito grande

00:16:56.510 --> 00:16:59.030
significava que ninguém mais em seu dormitório ou em sua casa

00:16:59.030 --> 00:17:01.670
poderia realmente baixar qualquer coisa até que você esteja realmente pronto.

00:17:01.670 --> 00:17:04.339
Então, é claro, várias pessoas hoje em dia podem estar na internet

00:17:04.339 --> 00:17:07.069
de uma só vez, mesmo que todas as conexões sejam um pouco mais lentas.

00:17:07.069 --> 00:17:09.920
Mas o uso de uma pessoa não bloqueia o de outra.

00:17:09.920 --> 00:17:11.480
Agora, como isso funciona?

00:17:11.480 --> 00:17:14.210
Bem, o TCP/IP em conjunto com o IP também pode

00:17:14.210 --> 00:17:17.520
permitem que você tire uma foto realmente grande de um gato, que a internet, é claro,

00:17:17.520 --> 00:17:19.940
está preenchido e tire uma grande imagem de um gato

00:17:19.940 --> 00:17:24.510
ou um grande arquivo de vídeo de um gato e fragmentá-lo em vários pedaços.

00:17:24.510 --> 00:17:27.195
Então, vou apenas rasgá-lo no meio

00:17:27.195 --> 00:17:29.070
e então talvez rasgá-lo ao meio novamente.

00:17:29.070 --> 00:17:31.010
Agora são quatro fragmentos diferentes.

00:17:31.010 --> 00:17:34.610
E sinto muito, mas o computador irá remontá-los para nós.

00:17:34.610 --> 00:17:38.570
E o que o computador de Phyllis pode fazer agora se ela estiver

00:17:38.570 --> 00:17:41.480
enviando esta foto de um gato para o servidor web de Brian,

00:17:41.480 --> 00:17:44.630
bem, ela poderia colocar um fragmento neste envelope

00:17:44.630 --> 00:17:48.950
e então ter três envelopes separados para os outros três fragmentos.

00:17:48.950 --> 00:17:51.860
E o que ela poderia fazer do lado de fora deste envelope

00:17:51.860 --> 00:17:53.480
é apenas numerar de alguma forma.

00:17:53.480 --> 00:17:57.530
E, de fato, isso é outra coisa que o TCP e o IP juntos fariam por nós.

00:17:57.530 --> 00:18:02.060
Este primeiro envelope agora pode dizer algo como um em quatro

00:18:02.060 --> 00:18:06.950
no campo memorando, por assim dizer, do envelope metafórico aqui.

00:18:06.950 --> 00:18:08.630
Agora, isso deve ser informação suficiente.

00:18:08.630 --> 00:18:11.330
Porque agora, se Brian receber todos os quatro envelopes,

00:18:11.330 --> 00:18:14.450
ele presumivelmente sabe como remontar a imagem do gato para cima

00:18:14.450 --> 00:18:15.530
para baixo, da esquerda para a direita.

00:18:15.530 --> 00:18:19.010
Mas o mais importante, suponha que um dos roteadores, um

00:18:19.010 --> 00:18:21.710
dos TFs no vídeo é meio distraído

00:18:21.710 --> 00:18:24.120
e eles meio que largam um dos pacotes.

00:18:24.120 --> 00:18:25.880
E isso é uma metáfora na prática

00:18:25.880 --> 00:18:27.470
para quando um roteador fica muito ocupado.

00:18:27.470 --> 00:18:29.300
Tem muitos dados entrando.

00:18:29.300 --> 00:18:31.177
Pode metaforicamente descartar pacotes.

00:18:31.177 --> 00:18:32.510
O que isso significa na prática?

00:18:32.510 --> 00:18:34.820
Quero dizer, literalmente apenas ignora os zeros e uns.

00:18:34.820 --> 00:18:37.970
Ele não os salva em sua memória, porque simplesmente não há mais espaço.

00:18:37.970 --> 00:18:40.160
Portanto, é equivalente a descartar o pacote.

00:18:40.160 --> 00:18:45.380
Então suponha agora que Brian recebe um de quatro, três de quatro e quatro de quatro.

00:18:45.380 --> 00:18:51.270
O que seu computador pode inferir agora depois de receber esses três pacotes?

00:18:51.270 --> 00:18:54.330
Um de quatro, três de quatro e quatro de quatro.

00:18:54.330 --> 00:18:55.330
Qual é a utilidade disso?

00:18:55.330 --> 00:18:59.340
Sim, acho que você está sinalizando com os dedos qual...

00:18:59.340 --> 00:19:00.280
posso te ligar?

00:19:00.280 --> 00:19:03.310
Sim, então ele está perdendo dois dos quatro, o segundo dos pacotes.

00:19:03.310 --> 00:19:05.310
E isso é útil agora porque você pode imaginar

00:19:05.310 --> 00:19:07.690
ele pode enviar uma mensagem de volta para Phyllis dizendo, ei,

00:19:07.690 --> 00:19:10.920
por favor, retransmita o número dois de quatro sem ter

00:19:10.920 --> 00:19:13.380
para baixar novamente o arquivo cat.

00:19:13.380 --> 00:19:16.680
Portanto, há uma eficiência lá também.

00:19:16.680 --> 00:19:20.040
Portanto, o TCP/IP permite que os dados realmente saiam do ponto A

00:19:20.040 --> 00:19:24.100
para o ponto B enquanto resolve vários desses problemas ao longo do caminho.

00:19:24.100 --> 00:19:28.050
Portanto, hoje em dia, se você já viu mencionado no seu Mac ou PC o seu chamado IP

00:19:28.050 --> 00:19:32.280
endereço, esse é o tipo de problema que está sendo resolvido.

00:19:32.280 --> 00:19:39.405
Perguntas agora sobre esses protocolos, essas convenções chamadas TCP e IP?

00:19:39.405 --> 00:19:41.780
Essa é a extensão em que precisaremos entendê-los.

00:19:41.780 --> 00:19:43.322
Não terá que implementá-los, por si só.

00:19:43.322 --> 00:19:46.510
Daqui em diante, vamos tomá-los como garantidos.

00:19:46.510 --> 00:19:50.380
Alguma dúvida que você já se perguntou sobre sua rede doméstica?

00:19:50.380 --> 00:19:51.202
Sim.

00:19:51.202 --> 00:19:55.138
AUDIÊNCIA: O que acontece quando o TCP-- tipo, quando você tenta enviar uma mensagem?

00:19:55.138 --> 00:19:57.550
Ele sabe se esse usuário recebeu a mensagem ou não?

00:19:57.550 --> 00:19:59.050
DAVID MALAN: Uma pergunta muito boa.

00:19:59.050 --> 00:20:02.100
Como o TCP sabe que um usuário recebeu uma mensagem?

00:20:02.100 --> 00:20:05.340
Outro aspecto, outra característica do TCP é

00:20:05.340 --> 00:20:08.160
que o computador de Brian por design deste protocolo

00:20:08.160 --> 00:20:10.660
também reconhecerá os pacotes recebidos.

00:20:10.660 --> 00:20:11.910
E o fará com eficiência.

00:20:11.910 --> 00:20:15.510
Se Brian receber todos os quatro pacotes em uma janela de tempo bastante estreita,

00:20:15.510 --> 00:20:18.510
seu computador enviará ao computador de Phyllis uma mensagem rápida dizendo

00:20:18.510 --> 00:20:20.255
essencialmente recebeu todos os quatro.

00:20:20.255 --> 00:20:22.380
Caso contrário, ele dirá o contrário, que é que eu sou

00:20:22.380 --> 00:20:24.990
faltando, por exemplo, dois de quatro.

00:20:24.990 --> 00:20:27.300
E isso apenas garante, em última análise, que todos os dados

00:20:27.300 --> 00:20:29.970
é de fato chegou para que você não esteja perdendo

00:20:29.970 --> 00:20:34.530
como um quadrante do gato em questão.

00:20:34.530 --> 00:20:36.630
Tudo bem, mas esse não é o único problema

00:20:36.630 --> 00:20:38.430
isso precisa ser resolvido em última instância.

00:20:38.430 --> 00:20:43.380
Também precisamos tornar a Internet amigável, se preferir.

00:20:43.380 --> 00:20:47.940
E seria muito tedioso se você tivesse que visitar sites, por exemplo,

00:20:47.940 --> 00:20:50.520
por meio de seus endereços IP.

00:20:50.520 --> 00:20:56.130
1.2.3.4 é bastante memorável, mas há cerca de 4 bilhões de outros endereços possíveis

00:20:56.130 --> 00:20:56.640
disponível.

00:20:56.640 --> 00:20:59.130
E seria super tedioso lembrar disso.

00:20:59.130 --> 00:21:02.370
Seria um péssimo marketing anunciar isso.

00:21:02.370 --> 00:21:05.992
Na verdade, a maioria de vocês provavelmente nem sabe os números de telefone das pessoas mais próximas

00:21:05.992 --> 00:21:08.700
amigos e familiares porque você os armazena

00:21:08.700 --> 00:21:11.340
nos seus contactos ou no seu livro de endereços associando

00:21:11.340 --> 00:21:15.630
com números completamente opacos com nomes ou strings reais,

00:21:15.630 --> 00:21:16.480
Se você for.

00:21:16.480 --> 00:21:19.530
O mesmo vale para a internet também, embora cada computador

00:21:19.530 --> 00:21:22.830
tem e deve ter um endereço IP único numericamente.

00:21:22.830 --> 00:21:23.370
Por que?

00:21:23.370 --> 00:21:27.030
Não vão roteadores ou computadores, os computadores apenas processam números com muita facilidade,

00:21:27.030 --> 00:21:29.490
mas nós humanos trabalhamos melhor com strings de texto.

00:21:29.490 --> 00:21:32.880
Precisamos de algum sistema para converter strings amigáveis

00:21:32.880 --> 00:21:38.340
como harvard.edu ou yale.edu ou google.com para o IP subjacente

00:21:38.340 --> 00:21:38.850
endereços.

00:21:38.850 --> 00:21:41.620
E é aí que entra o próximo acrônimo hoje,

00:21:41.620 --> 00:21:44.710
que é DNS, Domain Name System.

00:21:44.710 --> 00:21:48.250
Portanto, esta é apenas mais uma tecnologia que está em uso há algum tempo.

00:21:48.250 --> 00:21:52.560
E é uma coleção de servidores na internet cujo propósito na vida

00:21:52.560 --> 00:21:57.520
é converter nomes de domínio em endereços IP e talvez vice-versa também.

00:21:57.520 --> 00:21:59.680
Então, deixe-me estipular para os propósitos de hoje,

00:21:59.680 --> 00:22:03.810
existem alguns servidores DNS raiz no mundo que, resumindo, sabem

00:22:03.810 --> 00:22:07.570
sobre todas as ponto com, todas as ponto edus, todas as ponto,

00:22:07.570 --> 00:22:11.170
dot, dot, todos os outros domínios de nível superior em todo o mundo,

00:22:11.170 --> 00:22:12.240
assim como nos EUA.

00:22:12.240 --> 00:22:15.360
E depois há alguns servidores DNS menores

00:22:15.360 --> 00:22:18.720
propriedade de empresas, propriedade de universidades e até

00:22:18.720 --> 00:22:21.030
em seus apartamentos ou casas provavelmente.

00:22:21.030 --> 00:22:24.000
De fato, se você tiver um roteador doméstico conectado à parede em algum lugar,

00:22:24.000 --> 00:22:26.250
isso não é apenas rotear seus dados para dentro e para fora

00:22:26.250 --> 00:22:28.230
do seu apartamento ou casa ou dormitório.

00:22:28.230 --> 00:22:35.140
Ele também costuma servir como um servidor DNS local, portanto, mais rápido, um cache

00:22:35.140 --> 00:22:35.640
Se você for.

00:22:35.640 --> 00:22:39.000
É uma espécie de salvar localmente seus sites acessados ​​com mais frequência

00:22:39.000 --> 00:22:41.970
em seus endereços IP apenas para evitar incomodar os maiores e mais

00:22:41.970 --> 00:22:44.350
servidores caros e mais ocupados durante todo o dia.

00:22:44.350 --> 00:22:46.110
Portanto, há servidores DNS por toda parte.

00:22:46.110 --> 00:22:50.460
Se você examinar suas configurações no Windows ou Mac OS ou Android ou iOS,

00:22:50.460 --> 00:22:53.340
você verá uma menção ao DNS e provavelmente

00:22:53.340 --> 00:22:56.430
veja os endereços IP dos servidores cujo propósito na vida

00:22:56.430 --> 00:22:58.000
é fazer essa conversão para você.

00:22:58.000 --> 00:22:59.970
Mas este é um recurso necessário se apenas

00:22:59.970 --> 00:23:02.730
queremos que a internet seja amigável e nos permita

00:23:02.730 --> 00:23:05.700
usar palavras em vez de números sozinhos.

00:23:05.700 --> 00:23:07.860
O que há dentro desses servidores DNS?

00:23:07.860 --> 00:23:09.510
É essencialmente uma planilha.

00:23:09.510 --> 00:23:11.880
Ou, se pudermos dizer de forma mais nerd, é essencialmente

00:23:11.880 --> 00:23:15.720
como uma tabela de hash de algum tipo, que possui chaves e valores.

00:23:15.720 --> 00:23:17.100
A chave é o nome de domínio.

00:23:17.100 --> 00:23:19.530
Harvard.edu, yale.edu, google.com.

00:23:19.530 --> 00:23:23.490
E o valor é o endereço IP correspondente, ou em muitos casos

00:23:23.490 --> 00:23:27.640
Endereços IP no plural, dos servidores correspondentes.

00:23:27.640 --> 00:23:30.210
Então aqui já, embora eu tenha desenhado de forma bastante abstrata

00:23:30.210 --> 00:23:33.060
como você faria em um quadro-negro, é realmente provavelmente implementado

00:23:33.060 --> 00:23:34.200
como uma espécie de mesa.

00:23:34.200 --> 00:23:36.570
Talvez uma tabela hash, talvez uma tabela de banco de dados,

00:23:36.570 --> 00:23:38.470
talvez SQL ou algo assim.

00:23:38.470 --> 00:23:41.100
Ou talvez seja apenas uma lista encadeada ou um array.

00:23:41.100 --> 00:23:46.600
Nós apenas temos que, de alguma forma, permitir que este computador converta um para o outro.

00:23:46.600 --> 00:23:50.040
Agora, só para ser super preciso, os servidores DNS realmente

00:23:50.040 --> 00:23:53.470
converter os chamados nomes de domínio totalmente qualificados, que geralmente são

00:23:53.470 --> 00:23:59.760
não apenas harvard.edu, mas www.harvard.edu e www.google.com mais detalhados.

00:23:59.760 --> 00:24:03.630
Portanto, tudo o que você veria como uma substring do URL.

00:24:03.630 --> 00:24:05.460
Então é isso que o DNS faz.

00:24:05.460 --> 00:24:08.790
E é isso que sua universidade, sua empresa, seu roteador doméstico

00:24:08.790 --> 00:24:09.960
estão fazendo por você.

00:24:09.960 --> 00:24:15.310
Deixe-me fazer uma pausa aqui para ver se há alguma dúvida.

00:24:15.310 --> 00:24:18.100
Isso também é apenas uma tecnologia agora que daremos por certo.

00:24:18.100 --> 00:24:20.520
Simplesmente funciona.

00:24:20.520 --> 00:24:22.930
Perguntas?

00:24:22.930 --> 00:24:23.430
Não?

00:24:23.430 --> 00:24:24.070
Tudo bem.

00:24:24.070 --> 00:24:26.937
Então vamos agora fazer a transição entre nossos protocolos

00:24:26.937 --> 00:24:28.770
realmente para o último dia de hoje, que definirá

00:24:28.770 --> 00:24:31.270
o estágio para realmente resolver problemas com esses

00:24:31.270 --> 00:24:33.390
e escrever algum código em última instância.

00:24:33.390 --> 00:24:34.290
HTTP.

00:24:34.290 --> 00:24:36.570
Isso é algo que você vê ou ouve o dia todo

00:24:36.570 --> 00:24:39.210
long mesmo que você raramente precise mais se preocupar em digitá-lo.

00:24:39.210 --> 00:24:42.810
As probabilidades são se você for para harvard.edu, yale.edu, google.com,

00:24:42.810 --> 00:24:46.870
você não se incomoda em digitar HTTP, muito menos HTTPS, manualmente.

00:24:46.870 --> 00:24:47.370
Por que?

00:24:47.370 --> 00:24:50.703
Porque o seu navegador completa automaticamente esse tipo de coisa apenas para tornar a vida mais fácil.

00:24:50.703 --> 00:24:53.610
Mas está oficialmente no início de cada URL

00:24:53.610 --> 00:24:57.510
você visita, HTTP ou o HTTPS mais seguro,

00:24:57.510 --> 00:25:01.260
sempre que estiver usando seu navegador para acessar algum site.

00:25:01.260 --> 00:25:06.780
Portanto, HTTP significa Hypertext Transfer Protocol.

00:25:06.780 --> 00:25:10.830
E é facilmente um dos mais populares, ouso dizer um dos mais poderosos

00:25:10.830 --> 00:25:12.480
características da internet hoje em dia.

00:25:12.480 --> 00:25:16.170
Mas o modelo mental a ter aqui é que o HTTP ou a web mais

00:25:16.170 --> 00:25:19.710
geralmente é um tipo de serviço executado na Internet.

00:25:19.710 --> 00:25:23.160
E talvez Zoom ou Microsoft Teams seja outro serviço

00:25:23.160 --> 00:25:25.200
que roda em cima da internet.

00:25:25.200 --> 00:25:27.930
E o iMessage e tecnologias semelhantes são outro serviço que

00:25:27.930 --> 00:25:29.160
roda em cima da internet.

00:25:29.160 --> 00:25:32.880
Então a internet é realmente o encanamento de nível inferior, o material TCP/IP,

00:25:32.880 --> 00:25:35.580
o material DNS, que apenas obtém dados do ponto A ao ponto B.

00:25:35.580 --> 00:25:39.000
Mas agora, e estamos em uma aula de desenvolvimento de software

00:25:39.000 --> 00:25:43.980
em última análise, aqui no CS50, HTTP é o protocolo de nível de aplicativo.

00:25:43.980 --> 00:25:47.490
É mais ou menos o que os programadores usam, o que as empresas usam,

00:25:47.490 --> 00:25:52.140
o que os desenvolvedores usam para usar o encanamento subjacente para construir

00:25:52.140 --> 00:25:54.100
coisas interessantes e poderosas.

00:25:54.100 --> 00:25:58.890
Então, o que isso significa quando se trata de acessar serviços via HTTP

00:25:58.890 --> 00:26:01.110
ou o HTTPS mais seguro?

00:26:01.110 --> 00:26:03.862
Bem, aqui está um URL representativo.

00:26:03.862 --> 00:26:05.820
Mesmo que você não digite tudo,

00:26:05.820 --> 00:26:08.410
se você vasculhar sua barra de endereço, é isso que está lá.

00:26:08.410 --> 00:26:10.380
Com isso dito, muitos navegadores hoje em dia

00:26:10.380 --> 00:26:14.970
estão simplificando, se não emburrecendo, o que você vê com seus olhos humanos

00:26:14.970 --> 00:26:17.760
apenas para encurtar as cordas, especialmente em dispositivos móveis.

00:26:17.760 --> 00:26:20.460
Mas quase sempre, se você clicar no URL ou destacá-lo,

00:26:20.460 --> 00:26:21.780
então você vê a coisa toda.

00:26:21.780 --> 00:26:25.530
Mas em muitos navegadores, você pode ver apenas example.com.

00:26:25.530 --> 00:26:27.310
Mas todas essas informações estão lá.

00:26:27.310 --> 00:26:31.290
Está ficando cada vez mais oculto apenas por causa das interfaces do usuário.

00:26:31.290 --> 00:26:34.510
Bem, quando você visita um URL, por padrão,

00:26:34.510 --> 00:26:37.630
especialmente se você não digitar nada após o ponto com neste caso,

00:26:37.630 --> 00:26:40.680
você está tecnicamente adicionando implicitamente uma única barra.

00:26:40.680 --> 00:26:44.310
Portanto, um único denota a raiz do servidor.

00:26:44.310 --> 00:26:47.670
Essa é a página ou pasta padrão no servidor.

00:26:47.670 --> 00:26:49.950
E a barra, digitando ou não,

00:26:49.950 --> 00:26:51.840
implicitamente vai estar lá.

00:26:51.840 --> 00:26:55.380
E isso significa apenas me dar o padrão. O que quer que esteja em www.example.com,

00:26:55.380 --> 00:26:57.750
dê-me aquela página ou aquela pasta.

00:26:57.750 --> 00:27:00.120
Mas os URLs podem ser mais longos do que isso.

00:27:00.120 --> 00:27:03.057
E, de maneira mais geral, pode haver um caminho, por assim dizer.

00:27:03.057 --> 00:27:04.140
E este é um termo de arte.

00:27:04.140 --> 00:27:09.910
Um caminho é uma sequência de nomes de pastas e/ou arquivos após uma URL como esta.

00:27:09.910 --> 00:27:12.930
E então você pode ver mais especificamente que um URL contém

00:27:12.930 --> 00:27:14.190
um arquivo muito específico.

00:27:14.190 --> 00:27:18.300
Isso não é mais tão comum hoje em dia, embora comecemos hoje

00:27:18.300 --> 00:27:19.530
usando esta técnica.

00:27:19.530 --> 00:27:24.030
Mas se houver um arquivo chamado literalmente file.html ou outra coisa

00:27:24.030 --> 00:27:29.250
no servidor, esse arquivo será o que esta URL extrai no computador.

00:27:29.250 --> 00:27:32.880
Enquanto isso, você pode ter /folder/, o que significa apenas mostre-me

00:27:32.880 --> 00:27:34.380
o que estiver dentro desta pasta.

00:27:34.380 --> 00:27:38.190
Ou você pode ter mais detalhadamente /folder/file.html,

00:27:38.190 --> 00:27:41.280
que mostrará esse arquivo nessa pasta.

00:27:41.280 --> 00:27:43.920
E enquanto isso, apenas para dar alguns outros termos de arte,

00:27:43.920 --> 00:27:46.717
este é o chamado nome de domínio totalmente qualificado.

00:27:46.717 --> 00:27:49.050
E, novamente, essas palavras do vocabulário não importam tanto assim,

00:27:49.050 --> 00:27:50.970
mas você vai ouvi-los ou vê-los ao longo do tempo.

00:27:50.970 --> 00:27:53.790
Geralmente, coloquialmente, apenas nos referimos a isso

00:27:53.790 --> 00:27:57.120
como o nome de domínio, que é um pouco menos preciso

00:27:57.120 --> 00:27:59.340
mas faz o trabalho certamente na conversa.

00:27:59.340 --> 00:28:03.270
E esta parte aqui eu descrevi brevemente antes.

00:28:03.270 --> 00:28:07.800
Qual é o nome desse sufixo no final do domínio totalmente qualificado

00:28:07.800 --> 00:28:09.330
nome?

00:28:09.330 --> 00:28:10.110
O?

00:28:10.110 --> 00:28:10.630
Sim.

00:28:10.630 --> 00:28:11.450
AUDIÊNCIA: Domínio de primeiro nível.

00:28:11.450 --> 00:28:12.200
DAVID MALAN: Sim.

00:28:12.200 --> 00:28:13.670
Domínio de primeiro nível ou TLD.

00:28:13.670 --> 00:28:16.520
E esta é apenas uma forma de categorização dos URLs.

00:28:16.520 --> 00:28:19.498
Agora, a internet começou nos Estados Unidos

00:28:19.498 --> 00:28:22.040
e muitos dos primeiros sites, é claro, vieram dos Estados Unidos.

00:28:22.040 --> 00:28:25.207
E assim, para o bem ou para o mal, o tipo de estaca foi plantado no chão.

00:28:25.207 --> 00:28:29.150
Geralmente, o .com indicava, pelo menos desde o início, que era algum tipo

00:28:29.150 --> 00:28:32.390
de empresa comercial, uma empresa que possuía um nome de domínio.

00:28:32.390 --> 00:28:36.760
.edu é uma instituição educacional. .net era algum tipo de rede.

00:28:36.760 --> 00:28:38.660
.gov era o governo dos Estados Unidos.

00:28:38.660 --> 00:28:41.810
Agora, também existem TLDs de código de país.

00:28:41.810 --> 00:28:45.380
CCTLDs como .uk ou .jp.

00:28:45.380 --> 00:28:49.160
Cada país do mundo tem suas próprias duas letras

00:28:49.160 --> 00:28:54.290
TLD que pode muito bem ser restrito apenas a servidores, empresas ou pessoas

00:28:54.290 --> 00:28:56.030
naquele país.

00:28:56.030 --> 00:28:58.130
Muitos deles podem ser usados ​​por qualquer pessoa.

00:28:58.130 --> 00:29:02.420
Você usou muitos URLs nesta classe que terminam em cs50.io.

00:29:02.420 --> 00:29:04.940
Isso não significa saída de entrada.

00:29:04.940 --> 00:29:07.910
Na verdade, é um TLD de outro país

00:29:07.910 --> 00:29:11.930
que permite que qualquer pessoa na Internet pague anualmente

00:29:11.930 --> 00:29:12.950
usando esse domínio.

00:29:12.950 --> 00:29:17.780
.tv, por exemplo, você pode ver em alguns casos, como twitch.tv e similares.

00:29:17.780 --> 00:29:20.367
Isso também é propriedade de outro país que

00:29:20.367 --> 00:29:22.700
permite que outras pessoas no mundo de língua inglesa neste caso

00:29:22.700 --> 00:29:24.530
para usá-lo como se conota TV.

00:29:24.530 --> 00:29:26.330
Mas esses são apenas tipos diferentes de TLDs

00:29:26.330 --> 00:29:29.510
que categorizam aproximadamente onde o domínio reside.

00:29:29.510 --> 00:29:31.910
Mas isso não significa necessariamente que seja mais comercial.

00:29:31.910 --> 00:29:35.030
Isso não significa necessariamente que é mais uma rede.

00:29:35.030 --> 00:29:38.180
Na maior parte, existem centenas de TLDs

00:29:38.180 --> 00:29:40.190
agora, para o bem ou para o mal, a maioria dos quais

00:29:40.190 --> 00:29:42.770
são menos comuns do que esses grandes.

00:29:42.770 --> 00:29:46.400
Mas quase todo mundo pode comprar a maioria deles com apenas algumas restrições nas coisas

00:29:46.400 --> 00:29:50.480
como .edu e .gov que ainda são muito regulamentados.

00:29:50.480 --> 00:29:54.950
Isso, entretanto, é o que podemos chamar de nome do host. www, obviamente

00:29:54.950 --> 00:29:56.990
uma convenção super comum.

00:29:56.990 --> 00:30:00.200
Quase todos os sites usam www como nome de host.

00:30:00.200 --> 00:30:01.580
Mas isso é uma convenção humana.

00:30:01.580 --> 00:30:02.870
Não é um requisito.

00:30:02.870 --> 00:30:05.630
E, de fato, alguns sites nem se preocupam em ter um nome de host.

00:30:05.630 --> 00:30:09.710
Eles apenas usam seu domínio para anunciar seus sites.

00:30:09.710 --> 00:30:13.040
Isso agora vai ser o esquema ou o protocolo

00:30:13.040 --> 00:30:18.540
e isso apenas indicará por meio de qual protocolo o computador, seu Mac,

00:30:18.540 --> 00:30:23.120
seu PC, seu telefone deve usar ao acessar conteúdo nesse endereço.

00:30:23.120 --> 00:30:25.800
Porque, de fato, existem outros protocolos que você pode usar.

00:30:25.800 --> 00:30:32.090
Mas, na maioria das vezes, focaremos apenas em HTTP ou HTTPS equivalente.

00:30:32.090 --> 00:30:32.600
Tudo bem.

00:30:32.600 --> 00:30:36.410
Qualquer dúvida agora sobre essas definições, blocos de construção de URLs,

00:30:36.410 --> 00:30:40.770
apenas para que todos compartilhemos um vocabulário comum?

00:30:40.770 --> 00:30:42.210
Alguma pergunta?

00:30:42.210 --> 00:30:43.165
Sim.

00:30:43.165 --> 00:30:45.720
AUDIÊNCIA: Qual é o IP do posto local?

00:30:45.720 --> 00:30:46.470
DAVID MALAN: Claro.

00:30:46.470 --> 00:30:48.345
Voltaremos a isso mais tarde hoje.

00:30:48.345 --> 00:30:50.910
Existe um termo técnico conhecido como host local, que

00:30:50.910 --> 00:30:54.317
é um nome genérico para seu computador, seu Mac, seu PC, seu telefone,

00:30:54.317 --> 00:30:56.400
especialmente quando você está fazendo desenvolvimento de software.

00:30:56.400 --> 00:30:59.250
E por convenção, seu próprio computador não só

00:30:59.250 --> 00:31:02.850
qualquer endereço IP que você obtenha de sua universidade ou serviço de internet

00:31:02.850 --> 00:31:03.390
fornecedor.

00:31:03.390 --> 00:31:06.810
Ele também possui um endereço IP reflexivo, que sempre se refere

00:31:06.810 --> 00:31:10.332
para si mesmo, que é 127.0.0.1.

00:31:10.332 --> 00:31:11.790
E isso é apenas uma convenção humana.

00:31:11.790 --> 00:31:14.390
Os humanos decidiram que devem se referir sempre ao seu computador.

00:31:14.390 --> 00:31:16.140
E na verdade vai ser útil hoje

00:31:16.140 --> 00:31:19.770
e adiante, porque podemos usar isso ao desenvolver em nossos próprios computadores

00:31:19.770 --> 00:31:20.610
em última análise.

00:31:20.610 --> 00:31:27.690
Outras perguntas sobre URLs, IP, DNS ou qualquer um desses blocos de construção?

00:31:27.690 --> 00:31:28.380
Tudo bem.

00:31:28.380 --> 00:31:32.310
Então, o que queremos dizer com HTTP sendo um protocolo?

00:31:32.310 --> 00:31:34.950
Quando estendi minha mão antes como um aperto de mão humano,

00:31:34.950 --> 00:31:38.640
um ser humano típico em tempos saudáveis ​​saberia responder por sua vez.

00:31:38.640 --> 00:31:43.590
Bem, como o computador de Brian responde ao envelope de Phyllis, qualquer que seja

00:31:43.590 --> 00:31:44.610
mensagem está nele?

00:31:44.610 --> 00:31:47.880
Bem, assumindo que Brian ainda é um servidor web na história

00:31:47.880 --> 00:31:50.190
e Phyllis estava tentando enviar um gato ou talvez

00:31:50.190 --> 00:31:55.020
baixe um gato do servidor web de Brian, dentro do envelope de Phyllis

00:31:55.020 --> 00:31:57.930
teria sido uma mensagem literalmente em texto.

00:31:57.930 --> 00:32:00.000
E é inglês na maior parte.

00:32:00.000 --> 00:32:03.030
E conteria no início dessa mensagem literalmente um

00:32:03.030 --> 00:32:04.110
desses verbos ingleses.

00:32:04.110 --> 00:32:05.970
Ou pegue, o que significa exatamente isso.

00:32:05.970 --> 00:32:07.080
Traga-me a página inicial.

00:32:07.080 --> 00:32:08.190
Traga-me uma foto de um gato.

00:32:08.190 --> 00:32:11.010
Traga-me uma foto de um cachorro ou um vídeo ou qualquer outra coisa.

00:32:11.010 --> 00:32:14.700
Ou post, que geralmente significa post.

00:32:14.700 --> 00:32:19.050
Ou seja, carregue uma foto de um gato ou cachorro

00:32:19.050 --> 00:32:21.030
ou outra coisa para o servidor.

00:32:21.030 --> 00:32:23.728
Esses não são estritamente os únicos casos de uso para eles,

00:32:23.728 --> 00:32:26.520
mas geralmente você pode pensar que eles estão apenas obtendo informações

00:32:26.520 --> 00:32:30.360
e o outro está postando do cliente, de Phyllis para o servidor,

00:32:30.360 --> 00:32:31.350
neste caso, Brian.

00:32:31.350 --> 00:32:33.510
Essas são as duas palavras-chave que podemos ver.

00:32:33.510 --> 00:32:34.870
E por que isso é útil?

00:32:34.870 --> 00:32:38.250
Bem, podemos começar a ver em nosso próprio Mac ou PC

00:32:38.250 --> 00:32:39.990
algumas dessas mesmas mensagens.

00:32:39.990 --> 00:32:46.290
Por exemplo, se Phyllis não estivesse visitando Brian, mas example.com, esse site

00:32:46.290 --> 00:32:49.080
servidor, dentro de seu envelope metafórico,

00:32:49.080 --> 00:32:51.210
haveria uma mensagem de texto que literalmente

00:32:51.210 --> 00:32:56.670
começa com get slash, em seguida, a palavra HTTP e a versão que ela está usando.

00:32:56.670 --> 00:32:58.140
1.1 é muito comum.

00:32:58.140 --> 00:33:00.120
Dois e três estão se tornando mais comuns.

00:33:00.120 --> 00:33:02.220
Mas o HTTP geralmente se parece com isso.

00:33:02.220 --> 00:33:07.650
A próxima linha de texto em seu envelope provavelmente diria anfitrião:

00:33:07.650 --> 00:33:10.830
então, literalmente, o nome de domínio totalmente qualificado do servidor

00:33:10.830 --> 00:33:12.430
ela está acessando, apenas no caso.

00:33:12.430 --> 00:33:15.030
E isso acontece com muita frequência, principalmente em sites pequenos.

00:33:15.030 --> 00:33:19.470
Se um servidor estiver hospedando vários nomes de domínio, vários sites,

00:33:19.470 --> 00:33:22.080
isso apenas distingue qual ela realmente deseja.

00:33:22.080 --> 00:33:25.450
E geralmente há um monte de outras linhas de texto também.

00:33:25.450 --> 00:33:28.600
Então, onde você pode realmente ver isso?

00:33:28.600 --> 00:33:31.830
Bem, deixe-me realmente ir em frente e fazer isso.

00:33:31.830 --> 00:33:35.550
Dê-me apenas um momento, e eu vou abrir no meu computador aqui

00:33:35.550 --> 00:33:38.010
uma janela vazia do Chrome no modo de navegação anônima.

00:33:38.010 --> 00:33:40.287
De um modo geral, modo anônimo ou modo privado

00:33:40.287 --> 00:33:42.120
é usado quando você não quer que fique

00:33:42.120 --> 00:33:43.800
restos de quais sites você visitou.

00:33:43.800 --> 00:33:46.020
E tem o efeito para desenvolvedores de software

00:33:46.020 --> 00:33:50.010
de simplesmente esquecer qualquer coisa que você já tenha tentado em seu navegador,

00:33:50.010 --> 00:33:51.480
incluindo coisas chamadas cookies.

00:33:51.480 --> 00:33:53.130
Mais sobre isso outra hora.

00:33:53.130 --> 00:33:54.880
Seu histórico de preenchimento automático e afins.

00:33:54.880 --> 00:33:56.820
Portanto, para fins de desenvolvimento, o modo de navegação anônima

00:33:56.820 --> 00:34:00.120
é especialmente útil porque é como começar do zero

00:34:00.120 --> 00:34:02.730
toda vez que você abrir um novo modo privado ou anônimo.

00:34:02.730 --> 00:34:06.400
Portanto, não haverá resquícios de testes ou códigos anteriores

00:34:06.400 --> 00:34:07.650
com quem você tem brincado.

00:34:07.650 --> 00:34:09.233
E eu vou seguir em frente e fazer isso.

00:34:09.233 --> 00:34:13.500
Vou prosseguir e clicar com o botão direito do mouse ou clicar com a tecla Control no Chrome.

00:34:13.500 --> 00:34:15.030
Vou escolher Inspecionar.

00:34:15.030 --> 00:34:18.050
E vai puxar esta janela, às vezes do lado

00:34:18.050 --> 00:34:19.050
às vezes no fundo.

00:34:19.050 --> 00:34:21.960
Vou movê-lo para o fundo apenas para que possamos vê-lo um pouco mais facilmente.

00:34:21.960 --> 00:34:23.219
E eu vou aumentar o zoom.

00:34:23.219 --> 00:34:26.080
E vai parecer um pouco misterioso no começo.

00:34:26.080 --> 00:34:28.380
Vou destacar apenas algumas dessas guias.

00:34:28.380 --> 00:34:32.685
Veremos aqui no topo que há elementos, console, fontes,

00:34:32.685 --> 00:34:34.810
rede e um monte de outras coisas também.

00:34:34.810 --> 00:34:36.870
Este é o modo avançado no Chrome.

00:34:36.870 --> 00:34:39.780
E Safari, Firefox e Edge têm seus próprios equivalentes

00:34:39.780 --> 00:34:40.590
dessas características.

00:34:40.590 --> 00:34:43.620
Eles sempre estiveram lá, mesmo que você nunca tenha clicado no botão certo

00:34:43.620 --> 00:34:44.909
para habilitar esses recursos.

00:34:44.909 --> 00:34:47.625
E vou me concentrar por um momento em redes como esta.

00:34:47.625 --> 00:34:50.500
Este é um recurso do navegador que vai me permitir,

00:34:50.500 --> 00:34:52.800
o programador neste caso, então o engenheiro,

00:34:52.800 --> 00:34:56.040
apenas para ver quais mensagens meu navegador está realmente

00:34:56.040 --> 00:34:57.390
enviando para um servidor.

00:34:57.390 --> 00:35:00.280
Então deixe-me ir em frente e fazer algo assim.

00:35:00.280 --> 00:35:05.400
Deixe-me ir em frente e visitar, por exemplo, no meu navegador aqui,

00:35:05.400 --> 00:35:08.700
e vou encolher um pouco a janela para que possamos vê-la exatamente,

00:35:08.700 --> 00:35:15.660
Vou visitar https://www.harvard.edu.

00:35:15.660 --> 00:35:17.700
E agora vou apertar Enter.

00:35:17.700 --> 00:35:21.750
E um monte de coisas aconteceu na parte inferior da minha tela.

00:35:21.750 --> 00:35:24.250
E eu vou tentar abrir minha janela só um pouquinho.

00:35:24.250 --> 00:35:26.560
Portanto, podemos nos concentrar em um subconjunto disso.

00:35:26.560 --> 00:35:29.280
Deixe-me puxar para cima, cobrindo realmente o conteúdo da página,

00:35:29.280 --> 00:35:33.040
focando nesses detalhes de nível inferior aqui.

00:35:33.040 --> 00:35:37.100
E o que eu quero ver primeiro é--

00:35:37.100 --> 00:35:39.590
deixe-me-- oh, desculpe.

00:35:39.590 --> 00:35:42.230
Deixe-me ir em frente e recarregar esta página aqui

00:35:42.230 --> 00:35:44.060
depois de reter o log para que possamos ver

00:35:44.060 --> 00:35:45.860
absolutamente tudo na tela.

00:35:45.860 --> 00:35:49.400
E para ser claro, acabei de verificar porque esqueci o log de preservação anterior

00:35:49.400 --> 00:35:51.750
porque eu queria preservar tudo na tela.

00:35:51.750 --> 00:35:53.340
Eu quero ver tudo de uma vez.

00:35:53.340 --> 00:35:54.410
E veremos isso.

00:35:54.410 --> 00:35:58.070
A primeira linha de saída é completamente impressionante com detalhes

00:35:58.070 --> 00:35:59.150
à primeira vista.

00:35:59.150 --> 00:36:04.280
Mas o que você verá aqui, se eu começar a rolar para baixo e para baixo e para baixo e para baixo,

00:36:04.280 --> 00:36:06.380
são os chamados cabeçalhos de solicitação.

00:36:06.380 --> 00:36:07.890
E deixe-me ampliar aqui.

00:36:07.890 --> 00:36:12.530
E o que você está vendo dentro do Chrome, dentro de sua guia Rede em seu modo

00:36:12.530 --> 00:36:13.880
chamadas de ferramentas do desenvolvedor.

00:36:13.880 --> 00:36:15.860
Novamente, isso é apenas para tipos de engenharia.

00:36:15.860 --> 00:36:19.130
Você verá todos os cabeçalhos, todas as linhas de texto

00:36:19.130 --> 00:36:24.710
que magicamente foram enviados pelo meu Mac para harvard.edu, muito parecido com Phyllis

00:36:24.710 --> 00:36:26.570
para o servidor de Brian nessa história.

00:36:26.570 --> 00:36:29.673
Assim, posso ver exatamente quais mensagens estão sendo enviadas.

00:36:29.673 --> 00:36:31.590
E muito disso ainda não falamos,

00:36:31.590 --> 00:36:35.255
mas vemos alguma menção de get e vemos alguma menção de barra

00:36:35.255 --> 00:36:37.520
e um monte de outros detalhes misteriosos.

00:36:37.520 --> 00:36:41.990
Mas observe que eles são todos pares de valores-chave com os dois pontos aqui indicando

00:36:41.990 --> 00:36:43.368
qual é o valor correspondente.

00:36:43.368 --> 00:36:45.410
Agora, a maior parte disso não vai ser interessante,

00:36:45.410 --> 00:36:48.160
e não vamos nos concentrar muito nas ervas daninhas de tudo isso.

00:36:48.160 --> 00:36:52.880
Mas, de fato, nos dá uma noção do que está dentro desse envelope virtual.

00:36:52.880 --> 00:36:54.830
Agora, harvard.edu é uma coisa.

00:36:54.830 --> 00:36:58.800
Mas há outros sites que podemos visitar também.

00:36:58.800 --> 00:37:03.450
E não importa quais sejam, esperaremos, em última análise, uma resposta HTTP.

00:37:03.450 --> 00:37:06.770
Então, além de um computador, como meu Mac ou o computador de Phyllis,

00:37:06.770 --> 00:37:11.360
enviando uma solicitação contendo gets e host e esses detalhes também,

00:37:11.360 --> 00:37:15.560
você verá aqui no meu formulário de slide apenas uma resposta representativa

00:37:15.560 --> 00:37:16.490
do servidor.

00:37:16.490 --> 00:37:18.920
E observe que a chave aqui é que o servidor é

00:37:18.920 --> 00:37:21.710
respondendo na mesma versão do HTTP neste exemplo.

00:37:21.710 --> 00:37:23.990
Ele está enviando de volta o chamado código de status.

00:37:23.990 --> 00:37:27.560
Apenas um código numérico que indica, neste caso, que está tudo bem.

00:37:27.560 --> 00:37:30.800
E inclui este cabeçalho, este cabeçalho HTTP,

00:37:30.800 --> 00:37:32.870
que, novamente, é apenas um par de valor-chave dizendo

00:37:32.870 --> 00:37:35.780
que o tipo desse conteúdo que está voltando do servidor

00:37:35.780 --> 00:37:37.730
é texto/html.

00:37:37.730 --> 00:37:39.720
Mais sobre HTML daqui a pouco.

00:37:39.720 --> 00:37:43.010
Mas para nossos propósitos agora, isso significa apenas que harvard.edu

00:37:43.010 --> 00:37:44.750
está me enviando de volta uma página da web.

00:37:44.750 --> 00:37:47.810
E, de fato, se escondermos todo esse material técnico,

00:37:47.810 --> 00:37:50.300
essa é a página da web que vimos aqui com todos

00:37:50.300 --> 00:37:52.070
das imagens usuais e afins.

00:37:52.070 --> 00:37:56.210
E, de fato, posso ver isso se rolar para cima para não solicitar

00:37:56.210 --> 00:37:59.030
cabeçalhos, mas cabeçalhos de resposta.

00:37:59.030 --> 00:38:02.400
Você verá aqui que recebemos respostas,

00:38:02.400 --> 00:38:04.940
incluindo a data em que o servidor respondeu

00:38:04.940 --> 00:38:07.407
e um monte de outros detalhes também.

00:38:07.407 --> 00:38:09.740
E honestamente, isso sempre esteve ao seu alcance

00:38:09.740 --> 00:38:13.100
e em breve será útil quando começarmos a criar aplicativos baseados na web

00:38:13.100 --> 00:38:13.730
em última análise.

00:38:13.730 --> 00:38:16.190
Mas isso rapidamente se torna opressor rapidamente.

00:38:16.190 --> 00:38:18.680
E então melhor do que isso pode realmente ser uma ferramenta

00:38:18.680 --> 00:38:21.570
que podemos usar dentro do nosso próprio espaço de código.

00:38:21.570 --> 00:38:23.540
Então, deixe-me voltar ao VS Code aqui.

00:38:23.540 --> 00:38:24.800
Não abri nenhuma guia de código.

00:38:24.800 --> 00:38:27.050
Vou usar minha janela de terminal por um momento.

00:38:27.050 --> 00:38:28.758
E vou executar alguns comandos

00:38:28.758 --> 00:38:31.670
que vão me permitir realmente ver o que

00:38:31.670 --> 00:38:34.160
está acontecendo quando eu solicito um site.

00:38:34.160 --> 00:38:38.210
Deixe-me prosseguir e usar um comando chamado curl para conectar URL.

00:38:38.210 --> 00:38:41.360
E isso é como um programa preto e branco de linha de comando que é

00:38:41.360 --> 00:38:42.920
vai fingir ser um navegador.

00:38:42.920 --> 00:38:45.560
E vai se conectar ao URL, mostrar-me os cabeçalhos,

00:38:45.560 --> 00:38:47.870
mas não vai me mostrar as imagens dos gráficos, que

00:38:47.870 --> 00:38:50.078
pode muito bem ser útil para os humanos, mas não para mim

00:38:50.078 --> 00:38:51.330
agora como o desenvolvedor.

00:38:51.330 --> 00:38:52.520
Então eu vou fazer curl.

00:38:52.520 --> 00:38:54.260
Eu vou fazer -i.

00:38:54.260 --> 00:38:58.910
E então eu vou fazer https://www.harvard.edu/

00:38:58.910 --> 00:39:03.470
como se eu estivesse fingindo ser um navegador solicitando a página inicial.

00:39:03.470 --> 00:39:07.340
E o que é bom sobre o curl é, embora esmagador também,

00:39:07.340 --> 00:39:12.050
você receberá uma resposta completa do servidor contendo apenas os cabeçalhos

00:39:12.050 --> 00:39:14.990
valores, os pares de valor-chave dentro do envelope.

00:39:14.990 --> 00:39:16.790
E vamos ignorar quase tudo isso.

00:39:16.790 --> 00:39:18.620
Mas aqui está a resposta do servidor.

00:39:18.620 --> 00:39:21.470
Ele respondeu usando uma versão nova e aprimorada do HTTP.

00:39:21.470 --> 00:39:25.010
Neste caso, a versão dois, e me devolveu 200.

00:39:25.010 --> 00:39:27.800
Aqui está o meu tipo de conteúdo, text/html.

00:39:27.800 --> 00:39:30.440
E então esse conjunto de caracteres tem a ver com a codificação,

00:39:30.440 --> 00:39:33.060
se for Unicode ou ASCII ou qualquer outra coisa.

00:39:33.060 --> 00:39:35.720
E então há todos esses outros detalhes esmagadores por enquanto.

00:39:35.720 --> 00:39:39.200
Mas este é o começo da minha capacidade de apenas bisbilhotar e ver

00:39:39.200 --> 00:39:40.610
como o servidor funciona.

00:39:40.610 --> 00:39:46.330
E acontece que também poderemos ver outras respostas potenciais como

00:39:46.330 --> 00:39:46.830
bem.

00:39:46.830 --> 00:39:52.070
Assim, por exemplo, o HTTP pode não retornar apenas 100.

00:39:52.070 --> 00:39:53.720
E se eu fizer isso em vez disso?

00:39:53.720 --> 00:40:01.880
Deixe-me ir em frente e visitar curl -i http://www.harvard.edu.

00:40:01.880 --> 00:40:04.250
Observe que usei deliberadamente a versão insegura

00:40:04.250 --> 00:40:09.440
da URL, que talvez a administração do sistema de Harvard não goste mais.

00:40:09.440 --> 00:40:13.280
Bem, como eles podem garantir que eu, o usuário final, o aluno,

00:40:13.280 --> 00:40:17.810
ainda assim usar HTTPS mesmo que eu não tenha digitado?

00:40:17.810 --> 00:40:22.160
Bem, deixe-me executar apenas esse comando com apenas HTTP, não HTTPS,

00:40:22.160 --> 00:40:24.320
e você verá que não está tudo bem.

00:40:24.320 --> 00:40:26.300
Não voltou com 200.

00:40:26.300 --> 00:40:30.230
Ele voltou com 301 e esta mensagem dizendo que Harvard se mudou permanentemente.

00:40:30.230 --> 00:40:32.990
Mas aqui é onde você pode procurar outra pista.

00:40:32.990 --> 00:40:35.510
Entre todas essas linhas, a maioria das quais eu não me importo,

00:40:35.510 --> 00:40:38.670
há uma localização de dois pontos no cabeçalho do paciente que é

00:40:38.670 --> 00:40:41.760
uma pequena dica para mim que diz onde a Universidade de Harvard aparentemente

00:40:41.760 --> 00:40:43.260
movido para a web.

00:40:43.260 --> 00:40:47.090
E o que há de diferente nessa URL, só para deixar claro?

00:40:47.090 --> 00:40:48.760
Tem o S incluído.

00:40:48.760 --> 00:40:50.830
E o que seu navegador fará por padrão,

00:40:50.830 --> 00:40:54.430
porque Google, Microsoft e Mozilla programaram dessa forma,

00:40:54.430 --> 00:40:59.770
sempre que vir uma resposta 301 em vez de 200, não mostrará nenhuma página da web.

00:40:59.770 --> 00:41:03.070
Ele procurará um cabeçalho de localização, encontrará esse URL,

00:41:03.070 --> 00:41:06.250
e, em seguida, citar automaticamente sem aspas "redirecionar" você lá também.

00:41:06.250 --> 00:41:09.310
Portanto, é por isso que não importa o que digitamos no navegador.

00:41:09.310 --> 00:41:13.450
Harvard pode fazer com que seus servidores enviem essas mensagens semi-secretas para nossos navegadores,

00:41:13.450 --> 00:41:16.810
e então ele visitará um segundo URL automaticamente.

00:41:16.810 --> 00:41:19.580
E você também pode fazer isso com nomes de host.

00:41:19.580 --> 00:41:24.230
Suponha que Harvard não queira padronizar em harvard.edu.

00:41:24.230 --> 00:41:24.730
Por que?

00:41:24.730 --> 00:41:26.680
Eles só querem que seja sempre www.

00:41:26.680 --> 00:41:27.860
Talvez seja uma coisa de marca.

00:41:27.860 --> 00:41:29.068
Talvez seja uma coisa técnica.

00:41:29.068 --> 00:41:32.020
Podemos ver exatamente a mesma resposta aqui.

00:41:32.020 --> 00:41:37.830
Isso primeiro me diz quando visito HTTP harvard.edu sem www,

00:41:37.830 --> 00:41:41.140
Harvard quer minimamente que eu use uma conexão segura.

00:41:41.140 --> 00:41:45.710
Se eu, então, tudo bem, cooperar, deixe-me ir em frente e limpar minha tela.

00:41:45.710 --> 00:41:48.190
Deixe-me adicionar o S, mas não o www.

00:41:48.190 --> 00:41:52.480
Você pode ver aqui que ele respondeu novamente com 301 aqui em cima.

00:41:52.480 --> 00:41:55.510
E o local agora adiciona o www.

00:41:55.510 --> 00:41:59.180
Portanto, é apenas uma maneira de levar os usuários de um lugar para outro.

00:41:59.180 --> 00:42:04.330
E tudo isso graças ao HTTP resumindo-se a mensagens relativamente simples

00:42:04.330 --> 00:42:09.700
dentro do envelope que diz ao computador, neste caso o navegador, como

00:42:09.700 --> 00:42:10.790
responder.

00:42:10.790 --> 00:42:14.182
Agora, é provável que você tenha visto outros além do 301

00:42:14.182 --> 00:42:17.140
mesmo que você provavelmente nunca tenha visto esse número real, a menos que tenha

00:42:17.140 --> 00:42:18.520
feito esse tipo de coisa antes.

00:42:18.520 --> 00:42:21.100
Mas provavelmente há um número que todos nesta sala

00:42:21.100 --> 00:42:24.520
viu, mesmo que você nunca tenha realmente se perguntado por que esse número é esse.

00:42:24.520 --> 00:42:25.490
Acho que você está sorrindo.

00:42:25.490 --> 00:42:27.530
Em que número você está pensando?

00:42:27.530 --> 00:42:29.240
Sim, então 404.

00:42:29.240 --> 00:42:30.380
Por que é 404?

00:42:30.380 --> 00:42:33.620
Bem, 404 indica por convenção não encontrado.

00:42:33.620 --> 00:42:36.770
E agora porque o mundo decidiu há anos nos mostrar

00:42:36.770 --> 00:42:41.810
humanos normais na internet 404 é algo significativo não está claro.

00:42:41.810 --> 00:42:43.100
Isso é um design ruim.

00:42:43.100 --> 00:42:45.830
O que me importa se o código de status for 404?

00:42:45.830 --> 00:42:49.190
Mas é tão comum na internet que provavelmente todos nós já vimos.

00:42:49.190 --> 00:42:53.870
Mas isso significa apenas que algum servidor, quando você visita um URL incorreto,

00:42:53.870 --> 00:42:58.310
talvez esteja desatualizado, o URL foi alterado, se você vir um 404,

00:42:58.310 --> 00:43:01.100
significa apenas que o envelope virtual que veio do servidor

00:43:01.100 --> 00:43:04.730
de volta ao seu Mac ou PC ou telefone não contém 200 OK,

00:43:04.730 --> 00:43:09.030
não 301 movido permanentemente, mas 404 não encontrado.

00:43:09.030 --> 00:43:12.020
E geralmente vem acompanhado de uma mensagem técnica, talvez uma gracinha

00:43:12.020 --> 00:43:14.632
foto de um gato meio que se escondendo porque significa não encontrado

00:43:14.632 --> 00:43:15.590
ou algo assim.

00:43:15.590 --> 00:43:18.050
A estética depende inteiramente do servidor.

00:43:18.050 --> 00:43:19.910
Mas é isso que o 404 significa.

00:43:19.910 --> 00:43:23.300
E há outros códigos também, alguns dos quais você usará nas próximas semanas

00:43:23.300 --> 00:43:25.910
à medida que fazemos a transição de programas de linha de comando em C

00:43:25.910 --> 00:43:28.100
em Python para os baseados na web.

00:43:28.100 --> 00:43:29.640
Já vimos alguns deles.

00:43:29.640 --> 00:43:33.800
E vários deles são variantes da mesma coisa, como esses 300

00:43:33.800 --> 00:43:34.490
aqui.

00:43:34.490 --> 00:43:35.480
Mas veremos outros.

00:43:35.480 --> 00:43:39.770
Como 403 proibido significa que você provavelmente esqueceu de fazer login

00:43:39.770 --> 00:43:42.740
ou você precisa fazer login ou algo assim.

00:43:42.740 --> 00:43:44.120
Erro do Servidor Interno.

00:43:44.120 --> 00:43:48.410
Agora saiba que nas próximas semanas você certamente encontrará 500 erros

00:43:48.410 --> 00:43:50.420
e eles são sempre sua culpa. Esta indo

00:43:50.420 --> 00:43:53.345
para ser o equivalente a uma falha de segmentação em C.

00:43:53.345 --> 00:43:56.975
Um erro 500 significa que você ou eu erramos ao escrever algum código.

00:43:56.975 --> 00:43:58.100
Então vamos ver isso.

00:43:58.100 --> 00:44:00.517
Mas será apenas uma oportunidade para consertarmos isso.

00:44:00.517 --> 00:44:03.560
Se um servidor estiver sobrecarregado, você frequentemente verá 503,

00:44:03.560 --> 00:44:07.470
como algo indisponível porque algo é muito popular ou é,

00:44:07.470 --> 00:44:08.930
talvez pior, ser atacado.

00:44:08.930 --> 00:44:12.170
Esta é uma velha piada do Dia da Mentira.

00:44:12.170 --> 00:44:15.170
418 não é realmente usado na prática, mas alguém se deu ao trabalho

00:44:15.170 --> 00:44:18.470
redigir toda uma proposta técnica formal para que os servidores

00:44:18.470 --> 00:44:19.910
pode responder dizendo que sou um bule.

00:44:19.910 --> 00:44:21.530
Então é meio que parte do folclore da internet.

00:44:21.530 --> 00:44:24.660
E há outros desses códigos de status também.

00:44:24.660 --> 00:44:26.660
Mas isso é útil, porque eventualmente iremos

00:44:26.660 --> 00:44:30.290
veja no código que você pode usar esse entendimento,

00:44:30.290 --> 00:44:35.160
Por mais alto que seja, de HTTP para fazer algumas coisas interessantes e poderosas.

00:44:35.160 --> 00:44:40.040
Por exemplo, podemos até enviar URLs mais sofisticados para servidores.

00:44:40.040 --> 00:44:43.850
Acontece que, como veremos em breve, se você enviar uma mensagem como esta,

00:44:43.850 --> 00:44:52.070
get/search?q=cats e então HTTP 1.1 ou qualquer outra versão e você envia isso

00:44:52.070 --> 00:44:55.490
mensagem para o servidor do Google, www.google.com,

00:44:55.490 --> 00:45:00.350
é assim que você pode especificar não apenas o caminho de uma página da web que deseja,

00:45:00.350 --> 00:45:02.010
/search neste caso.

00:45:02.010 --> 00:45:06.050
Acontece que o ponto de interrogação vai ser uma convenção na internet,

00:45:06.050 --> 00:45:12.210
na web especificamente, para passar a entrada do usuário humano para o servidor também.

00:45:12.210 --> 00:45:15.050
Na verdade, você provavelmente nunca prestou muita atenção em URLs,

00:45:15.050 --> 00:45:17.060
mas muitas vezes eles têm pontos de interrogação.

00:45:17.060 --> 00:45:18.950
Eles muitas vezes têm sinais iguais.

00:45:18.950 --> 00:45:24.230
E de fato, até o google.com suporta uma determinada chave, q neste caso para consulta,

00:45:24.230 --> 00:45:26.780
e você pode colocar o que quiser depois disso em ordem

00:45:26.780 --> 00:45:28.740
para procurar gatos reais.

00:45:28.740 --> 00:45:34.430
Então, se eu realmente voltar ao próprio Chrome aqui por um momento, deixe-me

00:45:34.430 --> 00:45:37.880
abra meu navegador Chrome aqui, anteriormente

00:45:37.880 --> 00:45:40.552
Eu estava usando o modo de navegação anônima para harvard.edu.

00:45:40.552 --> 00:45:43.010
Eu fui em frente e fechei aquela janela e abri uma nova

00:45:43.010 --> 00:45:45.050
para que possamos começar de novo visitando o Google.

00:45:45.050 --> 00:45:47.540
Normalmente, você e eu temos o hábito de acessar google.com

00:45:47.540 --> 00:45:48.950
e pesquisa através do formulário.

00:45:48.950 --> 00:45:51.080
Ou hoje em dia você apenas digita sua consulta de pesquisa

00:45:51.080 --> 00:45:53.900
no próprio navegador e traz automaticamente

00:45:53.900 --> 00:45:55.850
para o Google ou Bing ou qualquer outra coisa.

00:45:55.850 --> 00:45:57.570
Mas eu posso realmente ser pedante aqui.

00:45:57.570 --> 00:45:59.600
Deixe-me ir em frente e ampliar e eu vou manualmente

00:45:59.600 --> 00:46:07.938
vá para https://www.google.com/search?q= talvez gatos.

00:46:07.938 --> 00:46:10.730
Agora, esta não seria uma experiência muito amigável se todos nós

00:46:10.730 --> 00:46:13.140
tive que digitar manualmente algo maluco assim.

00:46:13.140 --> 00:46:16.220
Mas é isso que o formulário está te redirecionando

00:46:16.220 --> 00:46:20.430
para quando você digita gatos mais amigáveis ​​em uma caixa de texto.

00:46:20.430 --> 00:46:24.500
Se eu pressionar Enter aqui, receberemos de fato um monte de resultados de pesquisa

00:46:24.500 --> 00:46:25.430
sobre gatos.

00:46:25.430 --> 00:46:29.150
Se eu aumentar novamente o zoom e talvez mudar de gatos para cachorros,

00:46:29.150 --> 00:46:30.500
isso também vai mudar.

00:46:30.500 --> 00:46:33.920
E observe que está pré-preenchendo a caixa de texto porque o Google escreveu

00:46:33.920 --> 00:46:37.200
seu código para fazer isso também.

00:46:37.200 --> 00:46:41.390
Agora, a propósito do vídeo com o qual começamos hoje

00:46:41.390 --> 00:46:45.680
do passado, uma das melhores pegadinhas de Yale ao longo dos anos,

00:46:45.680 --> 00:46:51.350
alguém realmente já esteve em safetyschool.org?

00:46:51.350 --> 00:46:54.020
E para nossos amigos de Yale assistindo ao vivo, oi.

00:46:54.020 --> 00:46:55.520
Safetyschool.org.

00:46:55.520 --> 00:47:00.720
Portanto, é divertido se você realmente o visitar, dependendo de quem você é.

00:47:00.720 --> 00:47:02.700
Então, se eu abrir uma nova janela aqui.

00:47:02.700 --> 00:47:12.680
E eu vou para http://safetyschool.org, ampliando, Enter, meu oh meu.

00:47:12.680 --> 00:47:14.330
Olhe para onde vai.

00:47:14.330 --> 00:47:15.950
Agora, como isso--

00:47:15.950 --> 00:47:18.345
[APLAUSOS]

00:47:20.740 --> 00:47:22.180
Isso não é coisa do CS50.

00:47:22.180 --> 00:47:25.780
Alguém aí que eu não sei quem é há 20 anos

00:47:25.780 --> 00:47:29.290
tem pago anualmente por esse domínio, safetyschool.org,

00:47:29.290 --> 00:47:31.090
por apenas esta piada.

00:47:31.090 --> 00:47:36.580
Mas se eu agora voltar ao VS Code aqui na janela do meu terminal e um pouco mais

00:47:36.580 --> 00:47:42.640
sofisticadamente deixe-me fazer curl -i http://safetyschool.org,

00:47:42.640 --> 00:47:45.413
o navegador, é claro, imediatamente me redirecionou para o site.

00:47:45.413 --> 00:47:47.080
Mas o que está acontecendo debaixo do capô?

00:47:47.080 --> 00:47:50.410
Bem, há 20 anos, alguém comprou o domínio, configurou o servidor

00:47:50.410 --> 00:47:53.020
simplesmente para cuspir isso.

00:47:53.020 --> 00:47:59.980
Safetyschool.org por anos mudou permanentemente para www.yale.edu.

00:47:59.980 --> 00:48:01.990
Então, apenas uma pequena demonstração do que você pode

00:48:01.990 --> 00:48:04.720
fazer com apenas um pouco de compreensão do HTTP.

00:48:04.720 --> 00:48:05.830
Isso já foi muito.

00:48:05.830 --> 00:48:08.622
Nós estabelecemos as bases para entender como a internet funciona.

00:48:08.622 --> 00:48:11.740
Agora vamos usá-lo com uma linguagem chamada HTML, marcação de hipertexto

00:48:11.740 --> 00:48:16.390
Linguagem, CSS, Cascading Style Sheets e JavaScript, uma programação adequada

00:48:16.390 --> 00:48:16.900
linguagem.

00:48:16.900 --> 00:48:19.228
Mas primeiro parece oportuno fazer uma pausa de 10 minutos.

00:48:19.228 --> 00:48:21.520
Temos alguns doces maravilhosos de Halloween no transepto,

00:48:21.520 --> 00:48:24.444
e estaremos de volta e 10 com esses idiomas.

00:48:24.444 --> 00:48:25.770
[REPRODUÇÃO DE VÍDEO]

00:48:25.770 --> 00:48:30.900
- Estamos indo para Boston, verificando o estádio para a pegadinha.

00:48:33.780 --> 00:48:36.150
Alguns anos atrás, eu estava em uma conferência de matemática

00:48:36.150 --> 00:48:40.800
e eu estava sentado à mesa jantando com alguns outros matemáticos.

00:48:40.800 --> 00:48:44.580
E um deles foi para Harvard e começou

00:48:44.580 --> 00:48:49.500
contando a história dessa pegadinha incrível que foi contra Harvard.

00:48:49.500 --> 00:48:52.050
E nesse ponto, senti que tinha que interromper

00:48:52.050 --> 00:48:56.670
e disse, bem, na verdade posso contar muito mais sobre isso.

00:48:56.670 --> 00:48:57.450
OK.

00:48:57.450 --> 00:48:59.800
- A ideia foi aperfeiçoada em um dormitório.

00:48:59.800 --> 00:49:02.160
- Tivemos a ideia de pregar uma peça neles

00:49:02.160 --> 00:49:03.880
com sinais do jogo de futebol.

00:49:03.880 --> 00:49:07.470
Lançamos algumas ideias sobre o que os sinais diriam.

00:49:07.470 --> 00:49:09.990
Acabamos decidindo que somos péssimos.

00:49:09.990 --> 00:49:13.270
- E minha reação imediata foi, não, isso nunca vai funcionar.

00:49:13.270 --> 00:49:17.370
No entanto, o solucionador de problemas em mim começou a pensar, bem, talvez nós

00:49:17.370 --> 00:49:20.000
pode fazer este trabalho.

00:49:20.000 --> 00:49:21.400
- O problema?

00:49:21.400 --> 00:49:24.490
Eles tiveram que se infiltrar no estádio de Harvard sem serem pegos,

00:49:24.490 --> 00:49:29.320
roubar 1.800 cartazes, distribuí-los para fãs desavisados ​​de Harvard,

00:49:29.320 --> 00:49:32.860
e depois convencer esses fãs a fazerem uma pegadinha.

00:49:32.860 --> 00:49:33.640
- É ótimo.

00:49:33.640 --> 00:49:38.290
Pensamos basicamente em todas as coisas possíveis que poderiam dar errado

00:49:38.290 --> 00:49:40.730
e tentou encontrar uma solução para isso.

00:49:40.730 --> 00:49:43.490
- E então você coloca dois vermelhos em cima dele.

00:49:43.490 --> 00:49:49.210
- Eles fizeram identidades falsas de Harvard e histórias de fundo falsas, designs de cartazes falsos,

00:49:49.210 --> 00:49:52.870
e um esquadrão falso de 28 membros.

00:49:52.870 --> 00:49:56.470
Em 20 de novembro de 2004, os falsos alunos de Harvard

00:49:56.470 --> 00:49:59.320
contrabandearam os cartazes para o jogo.

00:49:59.320 --> 00:50:01.265
- O que acha de Yale, senhor?

00:50:01.265 --> 00:50:01.840
- Eles sugam.

00:50:05.450 --> 00:50:08.820
- Não vai dizer algo como Yale é uma merda, vai?

00:50:08.820 --> 00:50:12.170
- Diz para ir para Harvard.

00:50:12.170 --> 00:50:14.560
- Mas então problemas.

00:50:14.560 --> 00:50:16.870
- Em que casas vocês estão?

00:50:16.870 --> 00:50:18.220
Isso não é uma casa de verdade.

00:50:18.220 --> 00:50:19.592
- Ho-fo?

00:50:19.592 --> 00:50:20.930
- Sim.

00:50:20.930 --> 00:50:23.408
Vocês não são de Harvard, são?

00:50:23.408 --> 00:50:26.450
Posso ver sua identidade de Harvard, porque realmente acho que vocês são de Yale.

00:50:26.450 --> 00:50:30.230
- Acabei de mostrar a frente desta identidade e, de repente, ele fugiu

00:50:30.230 --> 00:50:32.960
e ele se sentiu tão envergonhado.

00:50:32.960 --> 00:50:37.040
- Tendo escapado de um confronto, não podiam arriscar outro.

00:50:37.040 --> 00:50:39.080
Já era tempo.

00:50:39.080 --> 00:50:41.400
- Isso parece uma bagunça total.

00:50:41.400 --> 00:50:44.225
Não temos absolutamente nenhuma ideia se isso vai funcionar.

00:50:44.225 --> 00:50:44.850
- Olhe para eles.

00:50:44.850 --> 00:50:45.812
Eles têm o papel.

00:50:45.812 --> 00:50:46.774
Vai acontecer.

00:50:46.774 --> 00:50:49.660
Isso realmente vai acontecer.

00:50:49.660 --> 00:50:51.700
Eu não posso [BLEEP] acreditar nisso.

00:50:51.700 --> 00:50:56.704
- O que antes era uma pegadinha virou lenda.

00:50:56.704 --> 00:50:58.636
- Nós [BLEEP] fizemos isso.

00:50:58.636 --> 00:51:02.030
[BLEEP]

00:51:02.030 --> 00:51:05.470
- E imediatamente começamos a ouvir cânticos do outro lado.

00:51:05.470 --> 00:51:06.110
Você é um merda.

00:51:06.110 --> 00:51:09.210
- Você chupa, você chupa, você chupa.

00:51:09.210 --> 00:51:12.938
- E acho que foi naquele momento que sabíamos que tínhamos conseguido.

00:51:12.938 --> 00:51:14.402
- Mais uma vez.

00:51:14.402 --> 00:51:16.354
Vamos, Harvard.

00:51:16.354 --> 00:51:19.282
- Aí vem de novo.

00:51:19.282 --> 00:51:21.730
[TORCENDO]

00:51:21.730 --> 00:51:25.690
- Eu realmente acho que não importava que Harvard ganhasse por causa da pegadinha.

00:51:25.690 --> 00:51:29.845
Para muitos alunos e ex-alunos de Yale, definitivamente vencemos naquele ano.

00:51:35.944 --> 00:51:38.379
[TERMINAR REPRODUÇÃO]

00:51:44.240 --> 00:51:45.730
TODOS: Tudo bem.

00:51:45.730 --> 00:51:48.370
Este é CS50.

00:51:48.370 --> 00:51:49.610
Feliz Dia das Bruxas.

00:51:49.610 --> 00:51:50.870
[RISOS]

00:51:50.870 --> 00:51:52.655
[APLAUSOS]

00:51:52.655 --> 00:51:53.780
DAVID MALAN: Obrigado a todos.

00:51:53.780 --> 00:51:55.330
OK, obrigado.

00:51:55.330 --> 00:51:56.380
Ah, aqui.

00:51:56.380 --> 00:51:57.540
Oh tudo bem.

00:51:57.540 --> 00:51:58.780
Um doce de Halloween.

00:51:58.780 --> 00:51:59.620
Tudo bem.

00:51:59.620 --> 00:52:00.980
Obrigado a todos.

00:52:00.980 --> 00:52:04.370
Tão feliz que eu usava a mesma coisa hoje.

00:52:04.370 --> 00:52:09.940
Então, em apenas um momento--

00:52:09.940 --> 00:52:10.610
obrigado.

00:52:10.610 --> 00:52:11.110
OK.

00:52:11.110 --> 00:52:15.430
Em um momento, faremos a transição para a compreensão

00:52:15.430 --> 00:52:18.620
ainda mais agora o que podemos fazer com essa infraestrutura subjacente.

00:52:18.620 --> 00:52:22.450
Então, novamente, HTTP e abaixo dele TCP/IP são apenas

00:52:22.450 --> 00:52:25.810
obter os dados do ponto A ao ponto B de alguma forma padronizada.

00:52:25.810 --> 00:52:27.370
Mas agora vamos falar sobre HTML.

00:52:27.370 --> 00:52:30.910
Esta é a linguagem na qual as próprias páginas da web são escritas.

00:52:30.910 --> 00:52:32.468
Linguagem de marcação de hipertexto.

00:52:32.468 --> 00:52:35.510
Agora, alguns de vocês podem ter usado isso antes para fazer home pages pessoais.

00:52:35.510 --> 00:52:37.990
Alguns de vocês podem ter se interessado mesmo usando algum site

00:52:37.990 --> 00:52:39.310
para criar sua própria página inicial.

00:52:39.310 --> 00:52:42.640
Mas entender essa linguagem é útil certamente

00:52:42.640 --> 00:52:46.660
para criar a estética de uma página da web, transmitindo dados que são

00:52:46.660 --> 00:52:47.270
de interesse.

00:52:47.270 --> 00:52:51.970
Mas, no final das contas, ele e a linguagem que veremos a seguir, CSS,

00:52:51.970 --> 00:52:53.470
não são linguagens de programação.

00:52:53.470 --> 00:52:57.640
Não haverá funções, loops ou lógica de programação.

00:52:57.640 --> 00:53:00.820
Mas terminaremos hoje com um teaser de uma linguagem de programação adequada chamada

00:53:00.820 --> 00:53:05.770
JavaScript através do qual você pode manipular todos esses vários outros idiomas

00:53:05.770 --> 00:53:06.440
também.

00:53:06.440 --> 00:53:09.110
Então, em última análise, o HTML tem dois recursos.

00:53:09.110 --> 00:53:12.070
E esta é uma linguagem que gastamos muito pouco tempo

00:53:12.070 --> 00:53:15.280
porque realmente se resume a apenas algumas ideias básicas

00:53:15.280 --> 00:53:17.770
e o vocabulário que você desenvolverá com o tempo

00:53:17.770 --> 00:53:21.040
apenas pesquisando no Google, procurando referências, olhando o código-fonte de outras páginas.

00:53:21.040 --> 00:53:24.220
Mas tags e atributos são o que caracterizam o HTML.

00:53:24.220 --> 00:53:25.490
Agora, o que quero dizer com isso?

00:53:25.490 --> 00:53:28.750
Aqui, por exemplo, está o código HTML através do qual

00:53:28.750 --> 00:53:31.450
você pode fazer provavelmente a mais simples de todas as páginas da web, uma

00:53:31.450 --> 00:53:36.760
que simplesmente diz na janela do navegador, olá título e olá corpo,

00:53:36.760 --> 00:53:37.570
por exemplo.

00:53:37.570 --> 00:53:39.170
Agora, o que isso realmente significa?

00:53:39.170 --> 00:53:44.800
Se você imaginar abrir este código em um navegador, seja em um Mac ou PC ou telefone,

00:53:44.800 --> 00:53:47.140
você verá normalmente algum tipo de janela retangular.

00:53:47.140 --> 00:53:49.810
E geralmente há uma guia com o título dessa página.

00:53:49.810 --> 00:53:52.933
E a maior parte da região retangular é a própria página da web.

00:53:52.933 --> 00:53:54.850
O que você está vendo é o código que é

00:53:54.850 --> 00:53:58.600
vai colocar hello title na barra de título, na aba bem no topo.

00:53:58.600 --> 00:54:00.760
E lá embaixo, olá corpo vai

00:54:00.760 --> 00:54:04.330
ser tudo o que há na grande caixa preta e branca que compõe

00:54:04.330 --> 00:54:06.223
o resto da própria janela do navegador.

00:54:06.223 --> 00:54:08.140
Agora, quais são as características salientes aqui

00:54:08.140 --> 00:54:09.848
que agora vamos começar a tomar como certo?

00:54:09.848 --> 00:54:17.170
Bem, primeiro, opa, primeiro vamos em frente e, me dê apenas um momento aqui,

00:54:17.170 --> 00:54:19.160
e realmente fazer algo com este código.

00:54:19.160 --> 00:54:20.702
Então eu vou seguir em frente e fazer isso.

00:54:20.702 --> 00:54:25.990
De volta ao VS Code aqui, vou primeiro criar um arquivo chamado, digamos, hello.html.

00:54:25.990 --> 00:54:28.990
E nesta guia, irei em frente e realmente repetirei

00:54:28.990 --> 00:54:30.560
exatamente esse mesmo código.

00:54:30.560 --> 00:54:33.190
Agora, eu tinha essa linha primeiro, doc type HTML.

00:54:33.190 --> 00:54:38.110
Então eu tinha essa linha, HTML lang é igual a aspas sem aspas e com aspas fechadas.

00:54:38.110 --> 00:54:41.470
Então eu tinha dentro daquela cabeça, então eu tinha dentro daquele título,

00:54:41.470 --> 00:54:43.053
então dentro disso eu tinha o título de olá.

00:54:43.053 --> 00:54:45.220
E estou fazendo isso rapidamente porque vamos nos separar

00:54:45.220 --> 00:54:47.080
em um momento o que realmente significa.

00:54:47.080 --> 00:54:53.210
E então aqui embaixo daquela chamada cabeça, eu tinha apenas o texto olá corpo.

00:54:53.210 --> 00:54:57.070
Então, no momento, afirmo que é a totalidade de uma página da web.

00:54:57.070 --> 00:54:59.830
Mas atualmente vive no meu espaço de código, por assim dizer,

00:54:59.830 --> 00:55:02.050
em um arquivo chamado hello.html.

00:55:02.050 --> 00:55:03.940
Tudo bem se eu quiser criá-lo.

00:55:03.940 --> 00:55:06.580
Mas como eu, como você, como alguém na internet

00:55:06.580 --> 00:55:07.610
realmente vê-lo?

00:55:07.610 --> 00:55:11.260
Bem, para servir uma página web, você realmente precisa de um servidor web.

00:55:11.260 --> 00:55:14.500
E acontece que o Codespaces vem com um desses pré-instalados

00:55:14.500 --> 00:55:17.680
porque nós, funcionários do CS50, fizemos isso por você.

00:55:17.680 --> 00:55:20.200
E o que você pode fazer em uma janela de terminal depois de

00:55:20.200 --> 00:55:24.250
tenha um arquivo HTML pronto que você deseja que o mundo veja,

00:55:24.250 --> 00:55:28.450
você pode literalmente rodar em sua janela de terminal http-server.

00:55:28.450 --> 00:55:29.530
Comando único.

00:55:29.530 --> 00:55:32.860
E o que isso fará por você é iniciar um servidor web.

00:55:32.860 --> 00:55:37.300
Ou seja, um programa cujo objetivo na vida é apenas servir páginas da web.

00:55:37.300 --> 00:55:40.420
E mesmo que provavelmente até agora por anos você provavelmente,

00:55:40.420 --> 00:55:44.230
se você for como eu, equipare "servidor" entre aspas a um dispositivo físico.

00:55:44.230 --> 00:55:46.360
O servidor é realmente um pedaço de software.

00:55:46.360 --> 00:55:48.890
Ele apenas tende a rodar em grandes dispositivos sofisticados.

00:55:48.890 --> 00:55:50.860
Então, quando dizemos servidor, muitas vezes pensamos

00:55:50.860 --> 00:55:54.220
de em nossas mentes dispositivos grandes e caros, talvez.

00:55:54.220 --> 00:55:56.650
Mas um servidor é apenas um programa cujo propósito na vida

00:55:56.650 --> 00:56:00.080
é responder a pedidos com respostas.

00:56:00.080 --> 00:56:01.600
E esse é o vernáculo lá.

00:56:01.600 --> 00:56:04.593
Agora, depois de executar o servidor HTTP, vou fazer um pouco de mágica

00:56:04.593 --> 00:56:07.510
porque eu configurei isso antes da aula apenas para garantir que tudo corra bem,

00:56:07.510 --> 00:56:11.950
você verá uma saída como esta em que seu servidor está agora

00:56:11.950 --> 00:56:14.800
disponível em um URL muito longo.

00:56:14.800 --> 00:56:18.910
O meu aqui é um URL muito longo que será diferente do seu.

00:56:18.910 --> 00:56:22.570
Mas o que isso é é um identificador exclusivo que seu Codespace temporariamente

00:56:22.570 --> 00:56:25.750
gerado para que agora você possa acessar e, idealmente,

00:56:25.750 --> 00:56:29.620
somente você pode acessar esse arquivo usando seu navegador.

00:56:29.620 --> 00:56:33.040
Agora, se eu virar o URL ou você virar o URL para público clicando com o botão direito

00:56:33.040 --> 00:56:35.380
ou controle clicando nos recursos certos do VS Code,

00:56:35.380 --> 00:56:37.570
você pode permitir que qualquer pessoa no mundo o visite.

00:56:37.570 --> 00:56:40.810
Mas não vamos hospedar nossos sites em seu Codespace,

00:56:40.810 --> 00:56:43.870
porque assim que você se desconecta durante a noite e a coisa desliga,

00:56:43.870 --> 00:56:45.080
o site vai cair.

00:56:45.080 --> 00:56:47.840
Mas no final do semestre, principalmente para projetos finais,

00:56:47.840 --> 00:56:51.350
mostraremos maneiras de colocar seu próprio site, seu próprio código

00:56:51.350 --> 00:56:55.820
na internet real 24 horas por dia, 7 dias por semana, 365 dias por ano, mesmo com seu próprio nome de domínio

00:56:55.820 --> 00:57:00.710
se você deseja obter um para que viva independente de seu próprio horário de sono

00:57:00.710 --> 00:57:02.850
e agende um VS Code aqui.

00:57:02.850 --> 00:57:08.600
Vou prosseguir agora e visitar esta URL em outra guia do meu navegador.

00:57:08.600 --> 00:57:10.540
E o que vou ver aqui é isso.

00:57:10.540 --> 00:57:14.180
Esta é a saída desse programa chamado servidor HTTP.

00:57:14.180 --> 00:57:18.860
E essencialmente o que está fazendo é usar TCP e IP em conjunto

00:57:18.860 --> 00:57:25.047
com HTTP para apenas executar seu próprio servidor da web nos próprios servidores do GitHub também.

00:57:25.047 --> 00:57:26.630
E isso é por causa de portas diferentes.

00:57:26.630 --> 00:57:29.840
Mais uma vez, não vamos entrar muito no assunto do TCP, do IP e de tudo

00:57:29.840 --> 00:57:30.590
dessas coisas.

00:57:30.590 --> 00:57:33.260
Mas lembre-se de que diferentes números de porta podem

00:57:33.260 --> 00:57:35.540
permitem distinguir um serviço de outro.

00:57:35.540 --> 00:57:39.470
Agora, um dos serviços é claro, seu Codespace, VS Code na nuvem

00:57:39.470 --> 00:57:40.920
que estamos usando há semanas.

00:57:40.920 --> 00:57:44.360
Mas se você quiser usar o mesmo servidor físico que o GitHub controla

00:57:44.360 --> 00:57:49.130
mas, na verdade, visite seu próprio servidor da Web que acabei de executar na janela do meu terminal

00:57:49.130 --> 00:57:50.635
em outra guia, tudo bem.

00:57:50.635 --> 00:57:52.760
Eles apenas usarão portas TCP diferentes.

00:57:52.760 --> 00:57:55.468
E você e eu não temos que nos importar com o que eles são, mas apenas que isso

00:57:55.468 --> 00:57:57.260
é um recurso que o TCP suporta.

00:57:57.260 --> 00:57:59.090
Então, o que você vê aqui é um tanto misterioso.

00:57:59.090 --> 00:58:02.750
Isso não é algo que a maioria das pessoas na internet deveria ver.

00:58:02.750 --> 00:58:04.700
Estou apenas fazendo isso para fins de desenvolvimento.

00:58:04.700 --> 00:58:05.780
Mas este é o índice.

00:58:05.780 --> 00:58:09.860
Esse é o diretório, o conteúdo da pasta do meu Codespace,

00:58:09.860 --> 00:58:12.620
e porque já apaguei tudo das semanas anteriores,

00:58:12.620 --> 00:58:16.620
tudo o que vemos agora é hello.html, que acabei de criar.

00:58:16.620 --> 00:58:21.337
Então, se eu clicar em hello.html dentro desta lista de pastas,

00:58:21.337 --> 00:58:22.670
você ficará um pouco desapontado.

00:58:22.670 --> 00:58:25.420
E vou aumentar o zoom para que haja algo mais interessante ali.

00:58:25.420 --> 00:58:28.340
Mas agora você vê olá, vírgula, corpo.

00:58:28.340 --> 00:58:31.490
Mas o que é interessante, talvez, é que depois de tanto tempo,

00:58:31.490 --> 00:58:35.580
URL muito enigmático e desinteressante, observe bem no final dele,

00:58:35.580 --> 00:58:40.190
e aumentarei o zoom em um momento, o que você vê? /olá.html.

00:58:40.190 --> 00:58:43.040
Que segue a convenção que reivindiquei antes do intervalo

00:58:43.040 --> 00:58:48.290
é como um navegador permitiria que você acessasse um arquivo específico em um servidor

00:58:48.290 --> 00:58:51.110
fazendo barra e, em seguida, o nome do nome do arquivo.

00:58:51.110 --> 00:58:52.880
Tudo antes disso é muito enigmático.

00:58:52.880 --> 00:58:55.730
Seria melhor se eu comprasse um nome de domínio que fosse

00:58:55.730 --> 00:58:58.800
um pouco mais fácil de lembrar e configurar isso em outro momento.

00:58:58.800 --> 00:59:01.100
Mas, por enquanto, vamos nos concentrar apenas nos nomes dos arquivos

00:59:01.100 --> 00:59:03.200
que estou realmente criando.

00:59:03.200 --> 00:59:03.920
Tudo bem.

00:59:03.920 --> 00:59:06.740
Portanto, o código está funcionando, nada assombroso

00:59:06.740 --> 00:59:09.860
embora possa estar com o corpo no meio da página.

00:59:09.860 --> 00:59:11.450
E deixe-me ampliar aqui também.

00:59:11.450 --> 00:59:14.940
Olá, o título da vírgula está realmente na guia, conforme prometido.

00:59:14.940 --> 00:59:18.660
Então, o que realmente está acontecendo com um código como este que acabamos de criar?

00:59:18.660 --> 00:59:20.940
Bem, vamos voltar para a versão do slide do mesmo.

00:59:20.940 --> 00:59:23.000
E deixe-me apenas destacar algumas dessas linhas.

00:59:23.000 --> 00:59:26.695
A primeira linha é o que chamamos de declaração de tipo de documento.

00:59:26.695 --> 00:59:28.820
Realmente não importa lembrar disso pelo fraseado.

00:59:28.820 --> 00:59:32.180
E isso é apenas algo que você copia e cola ou faz da memória no topo

00:59:32.180 --> 00:59:36.200
de qualquer arquivo .html que você criar ao criar sua própria página da web.

00:59:36.200 --> 00:59:39.500
É um indicador implícito para o navegador de que você está

00:59:39.500 --> 00:59:42.830
usando a versão mais recente do HTML, que é a versão 5.

00:59:42.830 --> 00:59:44.300
Você não menciona o número 5.

00:59:44.300 --> 00:59:46.730
Apenas os navegadores hoje em dia são programados, procure isso

00:59:46.730 --> 00:59:49.540
para saber que você está usando a versão mais recente do idioma.

00:59:49.540 --> 00:59:53.180
As línguas, assim como as línguas humanas, evoluem com o tempo.

00:59:53.180 --> 00:59:56.880
Estamos na versão 5 do HTML, mas novos recursos são adicionados a cada poucos anos.

00:59:56.880 --> 01:00:00.110
Então, de fato, esta palestra, esta classe tem evoluído ao longo do tempo também.

01:00:00.110 --> 01:00:03.960
Portanto, vamos agora nos concentrar na próxima linha, bem como na linha de fundo.

01:00:03.960 --> 01:00:06.290
E você notará alguma simetria deliberada aqui.

01:00:06.290 --> 01:00:08.810
Isso aqui é o que vamos chamar de tag.

01:00:08.810 --> 01:00:10.580
E é tecnicamente diferente disso.

01:00:10.580 --> 01:00:11.750
Esta é uma declaração de tipo de documento.

01:00:11.750 --> 01:00:13.070
Tem o estranho ponto de exclamação.

01:00:13.070 --> 01:00:14.180
Essa é a única anomalia.

01:00:14.180 --> 01:00:15.960
Todo o resto segue um padrão.

01:00:15.960 --> 01:00:19.880
Esta é uma tag em HTML e é a tag HTML.

01:00:19.880 --> 01:00:25.580
E uma tag geralmente inicia e para ou abre e fecha

01:00:25.580 --> 01:00:26.460
em algum ponto.

01:00:26.460 --> 01:00:29.428
Portanto, esta é a chamada tag de início ou tag aberta.

01:00:29.428 --> 01:00:31.970
E isso significa essencialmente para o navegador, ei, navegador,

01:00:31.970 --> 01:00:35.360
aí vem um pouco de HTML, a linguagem na qual as páginas da web são escritas.

01:00:35.360 --> 01:00:39.590
Isso aqui com a barra após o colchete angular

01:00:39.590 --> 01:00:42.373
significa ei, navegador, é isso para o HTML desta página.

01:00:42.373 --> 01:00:43.790
Então é isso que quero dizer com simetria.

01:00:43.790 --> 01:00:46.310
Comecei um pensamento aqui, terminei aqui.

01:00:46.310 --> 01:00:47.900
O que há entre esses dois pensamentos?

01:00:47.900 --> 01:00:51.620
Bem, aqui navegador, ou melhor, deixe-me esclarecer uma coisa.

01:00:51.620 --> 01:00:55.580
Essa coisa aqui é aquela outra palavra-chave, um atributo.

01:00:55.580 --> 01:00:59.240
Um atributo é algo que modifica o comportamento de uma tag.

01:00:59.240 --> 01:01:02.390
Portanto, é semelhante a um argumento em C ou em Python

01:01:02.390 --> 01:01:04.012
como um parâmetro para uma função.

01:01:04.012 --> 01:01:05.970
Estas não são funções, mas é a mesma ideia.

01:01:05.970 --> 01:01:08.900
Apenas modifica o comportamento padrão de algo.

01:01:08.900 --> 01:01:10.100
Lang é igual a en.

01:01:10.100 --> 01:01:13.640
Você provavelmente pode adivinhar apenas significa que ei, navegador, suponha que tudo

01:01:13.640 --> 01:01:15.080
a seguir está em inglês.

01:01:15.080 --> 01:01:18.530
E isso pode ser útil para o Google Tradutor ou apenas para o mecanismo de pesquisa

01:01:18.530 --> 01:01:20.750
otimização para que apenas o servidor, o navegador

01:01:20.750 --> 01:01:23.960
saiba em qual linguagem humana você tem conteúdo real.

01:01:23.960 --> 01:01:27.110
Como olá título, olá corpo, mesmo que um bom computador provavelmente possa

01:01:27.110 --> 01:01:29.180
inferir a partir do contexto com frequência.

01:01:29.180 --> 01:01:30.800
Tudo bem, então isso é um atributo.

01:01:30.800 --> 01:01:31.970
Isso é uma etiqueta.

01:01:31.970 --> 01:01:36.320
E tudo aqui, tudo entre a tag inicial e a tag final,

01:01:36.320 --> 01:01:38.600
também chamaríamos de elemento HTML.

01:01:38.600 --> 01:01:42.980
Isso significa apenas tudo relacionado a essa tag de abrir e fechar.

01:01:42.980 --> 01:01:43.490
Tudo bem.

01:01:43.490 --> 01:01:46.340
Agora observe recuado dentro de, por assim dizer,

01:01:46.340 --> 01:01:51.750
a tag HTML open e close são outro par de tags, a tag head e a tag body

01:01:51.750 --> 01:01:55.530
tag ou o elemento head coletivamente e o elemento body coletivamente.

01:01:55.530 --> 01:01:56.280
E a mesma ideia.

01:01:56.280 --> 01:01:58.180
Ei navegador, aí vem o cabeçalho da minha página.

01:01:58.180 --> 01:01:59.550
Ei navegador, é isso para a cabeça.

01:01:59.550 --> 01:02:01.420
Ei navegador, aí vem o corpo da minha página.

01:02:01.420 --> 01:02:03.300
Ei navegador, é isso para o corpo.

01:02:03.300 --> 01:02:06.940
A cabeça é essencialmente a pequena faixa bem no topo,

01:02:06.940 --> 01:02:08.700
incluindo a própria guia.

01:02:08.700 --> 01:02:13.110
O corpo é como 95% de tudo o mais, a grande região retangular.

01:02:13.110 --> 01:02:16.830
O que há dentro do seu título, do cabeçalho da página da web?

01:02:16.830 --> 01:02:18.510
No momento, apenas o título.

01:02:18.510 --> 01:02:21.120
Então isso indica, ei navegador, aí vem meu título.

01:02:21.120 --> 01:02:22.890
Ei navegador, é isso para o título.

01:02:22.890 --> 01:02:26.910
O título, é claro, é literalmente entre aspas "olá, vírgula, título".

01:02:26.910 --> 01:02:31.800
Enquanto isso, se nos recuperarmos, aqui está o segundo elemento dentro

01:02:31.800 --> 01:02:33.357
da marca HTML.

01:02:33.357 --> 01:02:35.190
Isso diz, ei navegador, aí vem o corpo.

01:02:35.190 --> 01:02:36.690
Ei navegador, é isso para o corpo.

01:02:36.690 --> 01:02:38.700
E ei navegador, este é o conteúdo, estes

01:02:38.700 --> 01:02:40.840
são os conteúdos do próprio corpo.

01:02:40.840 --> 01:02:43.200
Agora, o recuo é uma coisa estilística.

01:02:43.200 --> 01:02:45.870
Eu fiz isso apenas para ficar limpo e arrumado, porque

01:02:45.870 --> 01:02:48.240
sugere o que está dentro do quê.

01:02:48.240 --> 01:02:50.850
Mas também sugere uma espécie de hierarquia.

01:02:50.850 --> 01:02:54.540
E, de fato, usaremos a terminologia do mundo das árvores genealógicas.

01:02:54.540 --> 01:02:59.130
Se este é um pai, por assim dizer, cabeça e corpo

01:02:59.130 --> 01:03:02.370
seriam os elementos filhos da tag HTML.

01:03:02.370 --> 01:03:05.640
Enquanto isso, o título é um filho da tag head.

01:03:05.640 --> 01:03:08.700
Ou de forma equivalente, o título é um neto do HTML.

01:03:08.700 --> 01:03:10.830
Então você pode usar o mesmo tipo de vernáculo

01:03:10.830 --> 01:03:14.550
como no mundo humano quando se trata de relacionamentos familiares também.

01:03:14.550 --> 01:03:17.260
E isso apenas sugere, novamente, essa mesma hierarquia.

01:03:17.260 --> 01:03:22.200
Portanto, temos tags e elas incluem cabeçalho HTML, título e corpo.

01:03:22.200 --> 01:03:23.490
E é isso por enquanto.

01:03:23.490 --> 01:03:24.570
Temos atributos.

01:03:24.570 --> 01:03:26.850
Vimos um exemplo deles, lang.

01:03:26.850 --> 01:03:29.260
Mas veremos muitos outros exemplos da mesma ideia.

01:03:29.260 --> 01:03:31.362
Mas esses blocos de construção são exatamente os mesmos.

01:03:31.362 --> 01:03:33.570
Geralmente, você começa um pensamento, termina um pensamento,

01:03:33.570 --> 01:03:35.670
e você pode fazer algo intermediário.

01:03:35.670 --> 01:03:40.900
Dúvidas sobre essa estrutura básica de qualquer página da web?

01:03:40.900 --> 01:03:43.150
Alguma pergunta?

01:03:43.150 --> 01:03:43.650
Não?

01:03:43.650 --> 01:03:44.150
Tudo bem.

01:03:44.150 --> 01:03:47.820
Então, vamos agora permitir que as coisas aumentem um pouco mais interessante

01:03:47.820 --> 01:03:50.100
e fazer algo com esses blocos de construção.

01:03:50.100 --> 01:03:52.650
Mas para que você tenha um modelo mental para tudo o que é

01:03:52.650 --> 01:03:55.950
acontecendo aqui depois, pense neste mesmo HTML

01:03:55.950 --> 01:03:58.620
estar relacionado em espírito com a quinta semana, quando

01:03:58.620 --> 01:04:00.390
falamos tudo sobre estruturas de dados.

01:04:00.390 --> 01:04:02.460
Se eu realmente quisesse, eu poderia levar a sério

01:04:02.460 --> 01:04:05.640
essa ideia de filhos e pais e avós

01:04:05.640 --> 01:04:07.740
e realmente retratar essa coisa graficamente.

01:04:07.740 --> 01:04:11.520
E, de fato, esta árvore aqui, se você quiser, e não é uma árvore binária,

01:04:11.520 --> 01:04:14.490
não é uma árvore de busca binária, é apenas uma árvore.

01:04:14.490 --> 01:04:18.300
Usando a terminologia da quinta semana, se este nó especial aqui representa

01:04:18.300 --> 01:04:22.590
todo o documento, bem, o elemento raiz, como eu o chamei, é HTML.

01:04:22.590 --> 01:04:25.110
HTML tem dois filhos, cabeça e corpo.

01:04:25.110 --> 01:04:28.410
A tag head tem, por sua vez, um título filho e

01:04:28.410 --> 01:04:31.470
por sua vez, tem algum texto, assim como o corpo tem algum texto.

01:04:31.470 --> 01:04:33.510
E é isso que seu navegador está fazendo.

01:04:33.510 --> 01:04:36.300
Você e eu, os programadores, escrevemos essas coisas.

01:04:36.300 --> 01:04:39.300
O navegador lê este código de cima para baixo, da esquerda para a direita

01:04:39.300 --> 01:04:40.560
sempre que você visita um site.

01:04:40.560 --> 01:04:45.120
E dentro da memória do computador, Chrome, Edge Firefox, Safari, outros enfeites,

01:04:45.120 --> 01:04:48.790
eles constroem essa estrutura de dados na memória do computador

01:04:48.790 --> 01:04:51.660
para saber o que você disse a eles para fazer.

01:04:51.660 --> 01:04:53.800
E veremos ao longo do tempo no final de hoje,

01:04:53.800 --> 01:04:57.120
você pode escrever código em uma linguagem de programação real, JavaScript,

01:04:57.120 --> 01:05:00.450
para talvez adicionar ou remover dinamicamente coisas desta árvore.

01:05:00.450 --> 01:05:02.310
E é assim que coisas como o Gmail funcionam.

01:05:02.310 --> 01:05:04.200
Quando você abre sua caixa de entrada de e-mail, se estiver

01:05:04.200 --> 01:05:06.670
um usuário do Gmail, se você ficar lá por tempo suficiente,

01:05:06.670 --> 01:05:08.430
você provavelmente receberá mais e mais e-mails.

01:05:08.430 --> 01:05:09.180
E o que acontece?

01:05:09.180 --> 01:05:12.930
Você não precisa recarregar a página ou reconstruir a árvore propriamente dita.

01:05:12.930 --> 01:05:16.590
De repente, aparece no topo, no topo, no topo.

01:05:16.590 --> 01:05:19.890
O que está acontecendo é que o Google escreveu um código que apenas mantém

01:05:19.890 --> 01:05:22.800
adicionando mais nós a esta árvore toda vez

01:05:22.800 --> 01:05:25.150
eles percebem que você tem uma nova mensagem repetidas vezes.

01:05:25.150 --> 01:05:29.460
Essa é a relação agora mesmo com este mundo de HTML,

01:05:29.460 --> 01:05:33.360
com todas as ideias programáticas que examinamos no passado.

01:05:33.360 --> 01:05:33.880
Tudo bem.

01:05:33.880 --> 01:05:35.850
Então vamos em frente e fazer algo com isso

01:05:35.850 --> 01:05:38.532
isso é um pouco mais interessante do que apenas olá em si.

01:05:38.532 --> 01:05:41.490
Vou seguir em frente e ocultar minha janela de terminal porque o servidor está

01:05:41.490 --> 01:05:43.920
agora em execução e tudo que eu quero fazer agora é experimentar

01:05:43.920 --> 01:05:46.870
com hello e outros exemplos também.

01:05:46.870 --> 01:05:50.820
Deixe-me ir em frente e antes de fazer isso, deixe-me ir em frente

01:05:50.820 --> 01:05:56.140
e execute o código de parameters.html apenas para que eu possa manter meu código separado.

01:05:56.140 --> 01:05:58.440
E agora vou esconder a janela do terminal novamente.

01:05:58.440 --> 01:06:00.300
Paragraphs.html.

01:06:00.300 --> 01:06:02.350
Vou fazer quase exatamente o mesmo.

01:06:02.350 --> 01:06:05.670
Deixe-me ir em frente e começar com algo familiar.

01:06:05.670 --> 01:06:08.770
E, eventualmente, começarei a copiar e colar apenas para economizar tempo.

01:06:08.770 --> 01:06:11.490
Portanto, o tipo de documento HTML está sempre lá.

01:06:11.490 --> 01:06:13.110
Abra a marca HTML.

01:06:13.110 --> 01:06:15.240
E agora observe que eu não digitei o resto disso.

01:06:15.240 --> 01:06:17.400
Assim como em C, assim como em Python, nós

01:06:17.400 --> 01:06:21.420
tente economizar algumas teclas fechando parênteses, adicionando aspas.

01:06:21.420 --> 01:06:24.030
O suporte a HTML no VS Code também é muito bom

01:06:24.030 --> 01:06:27.150
e tenta terminar o seu pensamento quando se trata de tags também.

01:06:27.150 --> 01:06:30.377
Ele pode estragar as coisas se fizer algo que você não quer que ele faça.

01:06:30.377 --> 01:06:31.710
Então, às vezes você tem que deletar.

01:06:31.710 --> 01:06:34.440
Mas é apenas preenchimento automático, como vimos antes.

01:06:34.440 --> 01:06:38.370
Vamos em frente e deixe-me adicionar lang equals en como todos os meus exemplos

01:06:38.370 --> 01:06:39.300
hoje será.

01:06:39.300 --> 01:06:41.250
Vamos adicionar a tag head.

01:06:41.250 --> 01:06:43.980
Vamos adicionar proativamente a tag body.

01:06:43.980 --> 01:06:48.690
E agora vamos em frente e dar a isso uma tag de título, que tem um--

01:06:48.690 --> 01:06:51.900
Vou chamar esses parágrafos apenas para lembrar qual exemplo é o quê.

01:06:51.900 --> 01:06:55.830
Agora observe todo esse espaço em branco e todo esse recuo limpo e organizado

01:06:55.830 --> 01:06:58.080
o navegador, em última análise, não vai se importar.

01:06:58.080 --> 01:07:00.780
Isso é apenas para nós, humanos, nos mantermos sãos

01:07:00.780 --> 01:07:01.860
quando olhamos para o código.

01:07:01.860 --> 01:07:03.340
É apenas mais fácil de ler.

01:07:03.340 --> 01:07:07.980
Mas estritamente falando, eu poderia minimamente deletar todo esse espaço em branco

01:07:07.980 --> 01:07:11.130
e eu poderia simplesmente mover toda essa tag para a mesma linha.

01:07:11.130 --> 01:07:12.393
Ambos eu acho que estão bem.

01:07:12.393 --> 01:07:14.310
Vou seguir uma certa convenção.

01:07:14.310 --> 01:07:16.830
Mas isso também teria exatamente o mesmo significado.

01:07:16.830 --> 01:07:19.080
Mas veremos onde esse detalhe sobre o espaço em branco

01:07:19.080 --> 01:07:21.270
poderia potencialmente nos colocar em apuros mais tarde.

01:07:21.270 --> 01:07:23.730
Na minha tag de parágrafos, vamos fazer isso.

01:07:23.730 --> 01:07:27.240
Com antecedência, escrevi um texto em latim, um texto muito longo

01:07:27.240 --> 01:07:29.290
parágrafo de texto latino como este.

01:07:29.290 --> 01:07:30.540
Na verdade, é um absurdo aleatório.

01:07:30.540 --> 01:07:33.623
Não é latim de verdade, embora algumas palavras possam parecer familiares.

01:07:33.623 --> 01:07:36.660
E aqui temos três parágrafos de texto.

01:07:36.660 --> 01:07:39.070
E eu deliberadamente apertei Enter entre eles

01:07:39.070 --> 01:07:42.120
assim como um ensaio no Google Docs ou no Microsoft Word, esperamos

01:07:42.120 --> 01:07:43.890
Verei três parágrafos separados.

01:07:43.890 --> 01:07:48.250
Agora, deixe-me mudar de guia e fecharei o hello.html de antes.

01:07:48.250 --> 01:07:50.820
Vou voltar para minha outra guia aqui.

01:07:50.820 --> 01:07:54.990
Vou clicar em Voltar para voltar ao índice de todos os meus arquivos

01:07:54.990 --> 01:07:56.628
que eu comecei antes.

01:07:56.628 --> 01:07:59.670
E você verá agora que tenho dois arquivos porque obviamente acabei de criar

01:07:59.670 --> 01:08:01.950
um segundo arquivo chamado parágrafos.html.

01:08:01.950 --> 01:08:05.550
Então, vamos clicar aqui para ver nossos três parágrafos de texto em latim.

01:08:05.550 --> 01:08:07.410
E pronto.

01:08:07.410 --> 01:08:09.130
Vou diminuir o zoom.

01:08:09.130 --> 01:08:09.630
Tudo bem.

01:08:09.630 --> 01:08:11.340
Primeiro bug, se você quiser.

01:08:11.340 --> 01:08:16.680
Isso parece apenas uma bolha enorme de texto, não três bolhas de texto.

01:08:16.680 --> 01:08:17.939
E por que isso pode ser?

01:08:17.939 --> 01:08:22.359
Aproveitando a dica que ofereci há pouco.

01:08:22.359 --> 01:08:23.645
Por que não estamos vendo quebrar?

01:08:23.645 --> 01:08:24.520
AUDIÊNCIA: [INAUDÍVEL]

01:08:24.520 --> 01:08:27.010
DAVID MALAN: Sim, então precisamos de algum tipo de quebra de linha aqui.

01:08:27.010 --> 01:08:29.439
Porque o navegador acaba nos levando ao pé da letra.

01:08:29.439 --> 01:08:32.564
E se você apenas der texto, texto, texto, ele apenas mostrará o texto.

01:08:32.564 --> 01:08:35.390
E sempre que houver mais de um único espaço em branco,

01:08:35.390 --> 01:08:38.345
seja dois, 20 ou 200, vai

01:08:38.345 --> 01:08:40.720
apenas assumir que você fez isso apenas para ser limpo e arrumado

01:08:40.720 --> 01:08:44.600
e vai reduzi-los em apenas um espaço visualmente como este.

01:08:44.600 --> 01:08:47.000
Portanto, existem, de fato, algumas soluções.

01:08:47.000 --> 01:08:48.560
Um é este aqui.

01:08:48.560 --> 01:08:50.260
Eu poderia adicionar algumas quebras de linha explícitas.

01:08:50.260 --> 01:08:53.840
E acontece que existe uma tag VR como esta.

01:08:53.840 --> 01:08:56.350
E apenas para fins de visibilidade, deixe-me fazer dois deles.

01:08:56.350 --> 01:08:58.930
Então, pressionando Enter, Enter no meu teclado.

01:08:58.930 --> 01:08:59.979
Vou fazer aqui também.

01:08:59.979 --> 01:09:01.569
BR para pausa, pausa.

01:09:01.569 --> 01:09:03.640
E agora deixe-me voltar para minha outra guia.

01:09:03.640 --> 01:09:06.520
Nada mudou ainda, mas é porque eu tenho que recarregar.

01:09:06.520 --> 01:09:09.670
Já alterei no servidor, mas agora preciso alterar no navegador

01:09:09.670 --> 01:09:10.569
ao recarregar.

01:09:10.569 --> 01:09:13.600
E agora parece um pouco melhor, embora sem sentido.

01:09:13.600 --> 01:09:15.729
Mas você notará uma curiosidade.

01:09:15.729 --> 01:09:18.939
De acordo com esta tag BR, isso é meio mal projetado.

01:09:18.939 --> 01:09:22.779
É um pouco complicado apenas dizer Enter, Enter e fazer o navegador fazer isso.

01:09:22.779 --> 01:09:27.850
Quebras, quebras de linha, na verdade não requerem tags de fechamento ou tags finais.

01:09:27.850 --> 01:09:31.149
Portanto, nem todas as tags precisam ser fechadas, pelo menos aquelas que apenas

01:09:31.149 --> 01:09:33.130
não faz sentido semântico fechá-los.

01:09:33.130 --> 01:09:35.170
Como se o intervalo estivesse lá ou não.

01:09:35.170 --> 01:09:38.120
Você não pode imaginar começar a passar para a próxima linha

01:09:38.120 --> 01:09:40.120
e, eventualmente, chegando ao fim.

01:09:40.120 --> 01:09:41.560
Ou está lá ou não está.

01:09:41.560 --> 01:09:45.189
Portanto, algumas tags não possuem tags de fechamento conforme necessário.

01:09:45.189 --> 01:09:48.069
Mas há uma maneira mais elegante aqui, ouso dizer,

01:09:48.069 --> 01:09:50.560
não apenas meio que colocando essas quebras de linha.

01:09:50.560 --> 01:09:51.700
Deixe-me fazer isso em seu lugar.

01:09:51.700 --> 01:09:53.140
Vou deletar esses.

01:09:53.140 --> 01:09:56.380
E deixe-me ir em frente e, como o nome deste arquivo sugere,

01:09:56.380 --> 01:09:58.300
deixe-me adicionar uma tag de parágrafo.

01:09:58.300 --> 01:10:00.700
Agora, aqui eu preciso lutar com o autocomplete do VS Code,

01:10:00.700 --> 01:10:03.400
porque não quero terminar o pensamento aí.

01:10:03.400 --> 01:10:07.270
Deixe-me ir em frente e abrir a tag de parágrafo e fechar uma tag de parágrafo.

01:10:07.270 --> 01:10:09.370
E só para manter as coisas organizadas, vou em frente

01:10:09.370 --> 01:10:12.620
e recuo também, mesmo que o recuo em si não importe.

01:10:12.620 --> 01:10:16.480
Deixe-me criar outra tag para abrir este parágrafo.

01:10:16.480 --> 01:10:18.640
E eu vou fechar esse aqui.

01:10:18.640 --> 01:10:19.945
E agora deixe-me ver.

01:10:19.945 --> 01:10:21.820
Às vezes é brigar com meu preenchimento automático,

01:10:21.820 --> 01:10:25.060
mas tudo bem, porque eu fiz isso da maneira errada no começo.

01:10:25.060 --> 01:10:28.210
E agora deixe-me ir em frente e terminar este pensamento

01:10:28.210 --> 01:10:30.970
fechando esta tag de parágrafo aqui.

01:10:30.970 --> 01:10:33.640
E corrigi manualmente todo o meu recuo.

01:10:33.640 --> 01:10:38.110
Agora, na linha 10, tenho o equivalente a ei navegador, inicie um parágrafo.

01:10:38.110 --> 01:10:39.940
E então ele faz o texto em latim.

01:10:39.940 --> 01:10:42.940
Em seguida, na linha 12, ei navegador, é isso para este parágrafo.

01:10:42.940 --> 01:10:44.620
E repita, repita.

01:10:44.620 --> 01:10:49.300
Se eu agora voltar para minha outra guia e recarregar novamente,

01:10:49.300 --> 01:10:51.010
não deve ser tão diferente.

01:10:51.010 --> 01:10:53.510
Mas semanticamente, é um pouco melhor.

01:10:53.510 --> 01:10:54.010
Por que?

01:10:54.010 --> 01:10:56.900
Porque você dizendo quebra, quebra realmente não significa nada.

01:10:56.900 --> 01:11:00.100
Mas dizendo parágrafo, parágrafo, parágrafo, agora

01:11:00.100 --> 01:11:02.270
há mais algumas informações semânticas lá.

01:11:02.270 --> 01:11:05.890
Agora, se o Google está analisando sua página ou se o programador está

01:11:05.890 --> 01:11:09.040
tentando entender o que você fez no passado ao escrever este código,

01:11:09.040 --> 01:11:11.262
você só sabe semanticamente, oh, isso é um parágrafo,

01:11:11.262 --> 01:11:12.970
isto é um parágrafo, isto é um parágrafo,

01:11:12.970 --> 01:11:14.590
assim como em um livro ou um ensaio.

01:11:14.590 --> 01:11:17.680
Portanto, é um pouco mais claro focar mais no que é,

01:11:17.680 --> 01:11:20.060
não como você deseja exibi-lo.

01:11:20.060 --> 01:11:25.290
Alguma pergunta então sobre estes parágrafos?

01:11:25.290 --> 01:11:25.790
Tudo bem.

01:11:25.790 --> 01:11:26.870
Então, mais algumas tags.

01:11:26.870 --> 01:11:29.078
E, de fato, esses primeiros exemplos serão apenas

01:11:29.078 --> 01:11:30.350
ser uma espécie de bang, bang, bang.

01:11:30.350 --> 01:11:33.537
Apenas um monte de palavras de vocabulário diferentes na forma dessas novas tags.

01:11:33.537 --> 01:11:35.870
Mas não vamos passar por toda a lista de tags.

01:11:35.870 --> 01:11:38.870
Esta é realmente a coisa para a qual as referências da web e livros e afins

01:11:38.870 --> 01:11:41.820
são úteis, assim como um dicionário no mundo real.

01:11:41.820 --> 01:11:43.362
Então eu vou seguir em frente e fazer isso.

01:11:43.362 --> 01:11:44.670
Deixe-me ir em frente e copiar isso.

01:11:44.670 --> 01:11:47.870
Deixe-me criar um novo arquivo chamado headers.html

01:11:47.870 --> 01:11:49.550
só assim temos um novo arquivo para isso.

01:11:49.550 --> 01:11:52.340
Para economizar tempo, vou apenas colar exatamente o mesmo código

01:11:52.340 --> 01:11:53.300
para eu começar.

01:11:53.300 --> 01:11:55.880
Vou mudar o título dele para maior clareza do código

01:11:55.880 --> 01:11:57.050
online para títulos.

01:11:57.050 --> 01:12:00.230
E agora, assim como um livro, um ensaio ou uma tese,

01:12:00.230 --> 01:12:02.780
deixe-me colocar alguns títulos reais aqui.

01:12:02.780 --> 01:12:05.540
Agora, se meu primeiro título como o capítulo um,

01:12:05.540 --> 01:12:07.500
Eu poderia fazer algo assim aqui.

01:12:07.500 --> 01:12:10.490
Eu poderia ter um parágrafo como acabei de aprender e poderia dizer algo

01:12:10.490 --> 01:12:12.290
como o capítulo um aqui.

01:12:12.290 --> 01:12:14.030
Mas isso não é realmente um parágrafo.

01:12:14.030 --> 01:12:16.820
E então é um design melhor para dizer ao navegador

01:12:16.820 --> 01:12:18.720
e realmente dizer ao mundo o que é.

01:12:18.720 --> 01:12:22.430
Acontece que há outra tag que posso usar como h1 para título

01:12:22.430 --> 01:12:24.065
e título mais importante.

01:12:24.065 --> 01:12:25.940
E aqui, vou apenas simplificar

01:12:25.940 --> 01:12:27.380
e eu vou dizer algo como um.

01:12:27.380 --> 01:12:28.700
E, de fato, isso é tão curto.

01:12:28.700 --> 01:12:31.610
Aqui está um bom candidato para manter tudo isso na mesma linha.

01:12:31.610 --> 01:12:34.190
Mas isso não tem diferença funcional, mas apenas

01:12:34.190 --> 01:12:36.470
torná-lo um pouco mais conciso na tela.

01:12:36.470 --> 01:12:38.810
Agora deixe-me ir em frente aqui.

01:12:38.810 --> 01:12:41.750
E eu poderia ter vários títulos, então H1 dois.

01:12:41.750 --> 01:12:45.200
E aqui embaixo eu poderia ter outro, H1 três.

01:12:45.200 --> 01:12:48.440
E se eu voltar para minha outra guia, eu a recarrego.

01:12:48.440 --> 01:12:53.850
Agora devemos ver, assim como um livro ou um ensaio, agora temos alguns apropriados -

01:12:53.850 --> 01:12:55.018
agora temos alguns-- oops.

01:12:55.018 --> 01:12:56.310
Eu tenho que ir para o arquivo certo.

01:12:56.310 --> 01:12:56.810
Desculpe.

01:12:56.810 --> 01:13:00.090
Se eu voltar ao índice, agora vemos o novo terceiro arquivo

01:13:00.090 --> 01:13:01.590
chamado headers.html.

01:13:01.590 --> 01:13:05.865
E agora, de fato, vemos alguns cabeçalhos bastante bonitos, embora simples.

01:13:05.865 --> 01:13:08.490
Agora, se estes não são três capítulos, um, dois, três, mas talvez

01:13:08.490 --> 01:13:10.860
é um capítulo, depois uma seção, depois uma subseção

01:13:10.860 --> 01:13:14.130
de modo que apenas visualmente você queira que as coisas fiquem cada vez menores,

01:13:14.130 --> 01:13:15.300
bem, esses também existem.

01:13:15.300 --> 01:13:17.700
E, de fato, você pode fazer H1 até H6.

01:13:17.700 --> 01:13:20.640
H1, um pouco paradoxalmente, é o maior e mais ousado.

01:13:20.640 --> 01:13:23.010
H6 é o menor, mas ainda ousado.

01:13:23.010 --> 01:13:28.620
Portanto, pode fazer sentido fazer este H2, aberto e fechado, e talvez este H3,

01:13:28.620 --> 01:13:32.130
abrir e fechar, se novamente, esta é uma seção ou subseção

01:13:32.130 --> 01:13:33.480
dentro desse capítulo.

01:13:33.480 --> 01:13:36.570
Se eu recarregar agora, o aviso ficará um pouco menor.

01:13:36.570 --> 01:13:39.900
Portanto, é mais semelhante ao que você veria na página impressa.

01:13:39.900 --> 01:13:44.460
Mas agora são apenas mais três tags que posso usar em meu próprio código.

01:13:44.460 --> 01:13:46.710
Tudo bem, bem, que tal listas de coisas?

01:13:46.710 --> 01:13:48.940
Eu tenho três parágrafos aqui, mas vamos fazer isso.

01:13:48.940 --> 01:13:50.760
Deixe-me voltar ao VS Code.

01:13:50.760 --> 01:13:53.220
Vou copiar este código para ter um ponto de partida.

01:13:53.220 --> 01:13:57.750
Vou criar um novo arquivo chamado, digamos, list.html.

01:13:57.750 --> 01:13:59.250
Aqui eu vou copiar e colar.

01:13:59.250 --> 01:14:02.002
Vou mudar meu título para listar apenas para maior clareza.

01:14:02.002 --> 01:14:04.710
E aqui eu vou em frente e me livro de todo esse corpo,

01:14:04.710 --> 01:14:06.918
porque vamos nos afastar desses parágrafos massivos

01:14:06.918 --> 01:14:08.370
e mantê-lo mais simples por enquanto.

01:14:08.370 --> 01:14:11.297
Se eu quiser ter uma lista de coisas, por exemplo,

01:14:11.297 --> 01:14:14.130
se você ainda não os viu, um cientista da computação quando eles estão

01:14:14.130 --> 01:14:16.830
pescando apenas algumas palavras arbitrárias sem sentido,

01:14:16.830 --> 01:14:20.190
eles costumam usar foo, bar e baz assim que vão,

01:14:20.190 --> 01:14:23.370
assim como um matemático pode usar x, y, z para variáveis.

01:14:23.370 --> 01:14:25.680
Então foo, bar e baz estão em três linhas separadas.

01:14:25.680 --> 01:14:28.200
E talvez esta seja minha lista de tarefas ou minha lista de compras.

01:14:28.200 --> 01:14:31.600
Mas você provavelmente pode imaginar, se eu voltar para minha outra guia,

01:14:31.600 --> 01:14:36.030
volte para o índice, agora vejo meu novo arquivo list.html.

01:14:36.030 --> 01:14:38.520
Mas provavelmente vai parecer errado.

01:14:38.520 --> 01:14:42.040
Acho que vou dizer sim, foo, bar, baz, tudo de uma vez,

01:14:42.040 --> 01:14:43.980
se você quiser, não em novas linhas.

01:14:43.980 --> 01:14:45.480
E você pode tentar lutar contra isso.

01:14:45.480 --> 01:14:48.000
Você pode realmente querer colocar algumas quebras de linha.

01:14:48.000 --> 01:14:50.310
Lá, volte e recarregue.

01:14:50.310 --> 01:14:52.320
Ainda não vai fazer nenhuma mudança.

01:14:52.320 --> 01:14:53.903
Como eu quero consertar isso?

01:14:53.903 --> 01:14:55.320
Bem, eu posso fazer isso de algumas maneiras.

01:14:55.320 --> 01:14:57.510
Posso transformá-los em parágrafos, mas não são realmente parágrafos.

01:14:57.510 --> 01:14:58.360
Eles são uma lista.

01:14:58.360 --> 01:15:01.120
Então, vou usar uma tag diferente.

01:15:01.120 --> 01:15:05.760
Vou criar, por exemplo, uma lista não ordenada usando a tag UL.

01:15:05.760 --> 01:15:06.840
Aberto e fechado.

01:15:06.840 --> 01:15:10.230
Dentro disso, vou usar a tag de item de lista, LI,

01:15:10.230 --> 01:15:11.520
e eu vou dizer foo.

01:15:11.520 --> 01:15:13.770
Dentro de outra tag vou dizer bar.

01:15:13.770 --> 01:15:17.190
Dentro de uma terceira tag abrir e fechar, vou dizer baz.

01:15:17.190 --> 01:15:20.400
Está ficando um pouco prolixo, mas ainda relativamente sucinto.

01:15:20.400 --> 01:15:23.190
LI é tudo o que você precisa digitar para o item da lista.

01:15:23.190 --> 01:15:26.110
UL é tudo que você precisa digitar para uma lista não ordenada.

01:15:26.110 --> 01:15:28.980
Portanto, há alguma sintaxe abreviada aqui que é adotada.

01:15:28.980 --> 01:15:32.430
Se eu recarregar agora, você verá a chamada lista não ordenada

01:15:32.430 --> 01:15:36.000
como não classificado, o que significa, por convenção, mostrá-lo como marcadores.

01:15:36.000 --> 01:15:39.238
Embora também possa ser exibido de maneiras diferentes visualmente.

01:15:39.238 --> 01:15:41.280
Se você realmente mudar de ideia e perceber,

01:15:41.280 --> 01:15:44.238
oh, eu realmente gostaria de numerar isso, bem, você poderia obviamente gostar apenas

01:15:44.238 --> 01:15:48.052
adicione um e dois e três, mas isso vai ficar chato,

01:15:48.052 --> 01:15:49.260
especialmente se a lista crescer.

01:15:49.260 --> 01:15:51.420
Você quer mudar alguma coisa, insira algo no meio.

01:15:51.420 --> 01:15:52.587
Então você tem que reordená-lo.

01:15:52.587 --> 01:15:54.960
Quero dizer, estamos usando computadores aqui.

01:15:54.960 --> 01:15:56.230
Eles podem fazer isso por nós.

01:15:56.230 --> 01:16:00.270
Então podemos mudar o UL para algum palpite?

01:16:00.270 --> 01:16:04.060
OL, talvez, para lista ordenada, que é o oposto aqui.

01:16:04.060 --> 01:16:06.060
Então, vamos tentar mudar isso para OL.

01:16:06.060 --> 01:16:07.560
Deixe-me voltar ao meu navegador.

01:16:07.560 --> 01:16:10.050
E eu estou apenas apertando Command R ou Control

01:16:10.050 --> 01:16:12.780
R para recarregar a página em vez de clicar no botão todas as vezes.

01:16:12.780 --> 01:16:16.080
Agora recebo automaticamente um, dois e três.

01:16:16.080 --> 01:16:19.110
E você pode até substituir a estética usando diferentes numerais

01:16:19.110 --> 01:16:24.380
ou simbologia em vez disso, mas isso seria talvez o mais comum lá também.

01:16:24.380 --> 01:16:24.880
Tudo bem.

01:16:24.880 --> 01:16:26.590
São muitas tags rapidamente.

01:16:26.590 --> 01:16:31.260
Mas alguma dúvida sobre listas, parágrafos, títulos ou coisas do gênero?

01:16:31.260 --> 01:16:31.760
Não?

01:16:31.760 --> 01:16:32.260
Tudo bem.

01:16:32.260 --> 01:16:35.430
Então deixe-me ir em frente e propor isso aqui.

01:16:35.430 --> 01:16:38.700
Vamos criar o que chamaremos de tabela.

01:16:38.700 --> 01:16:41.240
Então, deixe-me copiar e colar isso em um novo arquivo.

01:16:41.240 --> 01:16:43.760
Código de table.html.

01:16:43.760 --> 01:16:47.360
E em table.html, deixe-me renomear novamente o título para table.

01:16:47.360 --> 01:16:50.240
Deixe-me me livrar dessa lista ordenada de antes.

01:16:50.240 --> 01:16:53.510
E deixe-me agora usar uma tag de tabela aberta e fechada.

01:16:53.510 --> 01:16:54.860
Este é um pouco estranho.

01:16:54.860 --> 01:16:59.040
Mas dentro de uma mesa, você normalmente tem um chefe da mesa.

01:16:59.040 --> 01:17:02.270
Então eu direi, bem, digamos a primeira linha.

01:17:02.270 --> 01:17:03.500
Vamos manter este simples.

01:17:03.500 --> 01:17:05.630
Uma linha de tabela ou TR.

01:17:05.630 --> 01:17:09.067
Dentro de uma linha da tabela, você idealmente teria colunas,

01:17:09.067 --> 01:17:10.400
mas essa não é a nomenclatura.

01:17:10.400 --> 01:17:11.520
Em vez disso, você tem dados.

01:17:11.520 --> 01:17:13.160
Portanto, TD para dados da tabela.

01:17:13.160 --> 01:17:15.960
E deixe-me seguir em frente e fazer com que o primeiro dado seja um.

01:17:15.960 --> 01:17:17.960
Eu só vou fazer arbitrariamente um, dois, três

01:17:17.960 --> 01:17:19.550
só assim temos algo para brincar.

01:17:19.550 --> 01:17:20.300
E sabe de uma coisa?

01:17:20.300 --> 01:17:24.620
Apenas para fins de demonstração, vou copiar e colar deliberadamente duas vezes

01:17:24.620 --> 01:17:27.020
e vou alterar manualmente os números

01:17:27.020 --> 01:17:29.810
apenas para que possamos ver o que estou criando.

01:17:29.810 --> 01:17:31.040
Sete oito nove.

01:17:31.040 --> 01:17:34.730
E então, talvez apenas para garantir, se você está vendo onde isso está indo,

01:17:34.730 --> 01:17:37.490
deixe-me copiar isso mais uma vez e me dar

01:17:37.490 --> 01:17:41.360
uma linha final com um asterisco, um 0 e um sinal de libra

01:17:41.360 --> 01:17:43.190
se talvez você veja onde isso está indo.

01:17:43.190 --> 01:17:44.870
Deixe-me voltar para minha outra guia.

01:17:44.870 --> 01:17:47.240
Deixe-me voltar ao índice.

01:17:47.240 --> 01:17:49.460
Aqui está meu novo arquivo, table.html.

01:17:49.460 --> 01:17:50.520
Eu vou clicar nisso.

01:17:50.520 --> 01:17:53.390
E embora não seja muito bonito, vou dar um zoom.

01:17:53.390 --> 01:17:55.670
Na verdade, é uma tabela de dados.

01:17:55.670 --> 01:17:58.848
Acontece que eu imito um teclado de telefone.

01:17:58.848 --> 01:18:00.890
Mas você pode imaginar isso sendo muito mais suculento, muito

01:18:00.890 --> 01:18:03.265
dados científicos ou financeiros mais interessantes ou similares

01:18:03.265 --> 01:18:07.130
dispostos nessas linhas, TRs e nessas colunas, também conhecidas como

01:18:07.130 --> 01:18:08.730
dados da tabela também.

01:18:08.730 --> 01:18:11.670
Portanto, também temos essa capacidade para dados estruturados.

01:18:11.670 --> 01:18:15.000
Agora, é claro, a internet tem muitas imagens.

01:18:15.000 --> 01:18:16.830
E, na verdade, tudo isso é apenas texto.

01:18:16.830 --> 01:18:18.380
Como podemos introduzir imagens?

01:18:18.380 --> 01:18:21.060
Bem, deixe-me ir em frente e fazer isso.

01:18:21.060 --> 01:18:25.850
Deixe-me primeiro meio que copiar secretamente um arquivo de imagem

01:18:25.850 --> 01:18:29.840
que eu trouxe antes só para termos algo para brincar.

01:18:29.840 --> 01:18:34.130
E eu tenho na minha conta aqui agora uma imagem chamada harvard.jpeg.

01:18:34.130 --> 01:18:37.250
E eu carreguei isso semi-secretamente um segundo atrás em minha conta

01:18:37.250 --> 01:18:39.560
para que eu possa fazer referência a um segundo arquivo.

01:18:39.560 --> 01:18:43.760
Deixe-me seguir em frente e copiar este HTML apenas para economizar algumas teclas.

01:18:43.760 --> 01:18:47.510
Deixe-me ir em frente e fazer o código de image.html.

01:18:47.510 --> 01:18:50.510
E deixe-me colar esse código e ocultar minha janela de terminal.

01:18:50.510 --> 01:18:54.440
Vou me livrar de toda essa tabela como desinteressante agora.

01:18:54.440 --> 01:18:59.030
Vamos tornar isso ainda mais simples, alterando meu título para imagem para manter

01:18:59.030 --> 01:19:01.500
todas essas demonstrações separadas.

01:19:01.500 --> 01:19:05.000
E agora, se eu quiser fazer uma página da web que quando visitada

01:19:05.000 --> 01:19:07.520
nos mostra uma foto de Harvard, bem, há

01:19:07.520 --> 01:19:10.680
uma tag de imagem abreviada como IMG.

01:19:10.680 --> 01:19:13.310
Posso especificar qual é a fonte dessa imagem.

01:19:13.310 --> 01:19:17.930
E se meu arquivo, um JPEG neste caso, estiver literalmente na mesma pasta,

01:19:17.930 --> 01:19:20.982
Posso apenas dizer entre aspas "harvard.jpeg".

01:19:20.982 --> 01:19:23.690
Se estiver em uma pasta, devo mencionar o nome da pasta e uma barra

01:19:23.690 --> 01:19:24.920
ou algo assim.

01:19:24.920 --> 01:19:27.920
Se a imagem estiver na Internet em algum lugar com um URL,

01:19:27.920 --> 01:19:32.940
Eu também poderia ter um URL inteiro, https:// e depois o URL da imagem.

01:19:32.940 --> 01:19:34.813
Mas eu enviei com antecedência.

01:19:34.813 --> 01:19:37.230
Agora, isso só será exibido visualmente na tela.

01:19:37.230 --> 01:19:39.320
Mas nem todos, é claro, podem ver as imagens.

01:19:39.320 --> 01:19:41.450
Os leitores de tela podem precisar de um pouco de ajuda.

01:19:41.450 --> 01:19:44.150
E até mesmo os mecanismos de pesquisa podem querer analisar a página

01:19:44.150 --> 01:19:46.220
e saber do que esta imagem é.

01:19:46.220 --> 01:19:48.620
Agora, aprendizado de máquina e inteligência artificial

01:19:48.620 --> 01:19:51.110
talvez estejam melhorando, para ser justo, em descobrir

01:19:51.110 --> 01:19:54.260
apenas analisando as imagens o que elas são, mas certamente são imperfeitas.

01:19:54.260 --> 01:19:54.980
Eu sou um humano.

01:19:54.980 --> 01:19:57.900
Eu sei muito bem do que tirei uma foto, por exemplo.

01:19:57.900 --> 01:20:01.550
Talvez o que eu deva fazer proativamente, o que seria bom para a acessibilidade,

01:20:01.550 --> 01:20:04.250
é ter esta tag alt para texto alternativo.

01:20:04.250 --> 01:20:06.800
E então, literalmente, diga Harvard University

01:20:06.800 --> 01:20:10.070
para que alguém que não pode ver ou para que um servidor possa

01:20:10.070 --> 01:20:13.250
na verdade, com maior probabilidade, o que eles estão olhando.

01:20:13.250 --> 01:20:15.620
E eu poderia ser ainda mais detalhado do que apenas uma frase.

01:20:15.620 --> 01:20:18.090
Eu poderia descrever a imagem também.

01:20:18.090 --> 01:20:18.590
Tudo bem.

01:20:18.590 --> 01:20:21.890
Deixe-me voltar ao meu índice na segunda guia.

01:20:21.890 --> 01:20:24.770
Deixe-me voltar e diminuir o zoom.

01:20:24.770 --> 01:20:29.360
Aqui está meu novo arquivo e meu novo JPEG que carreguei rapidamente antes.

01:20:29.360 --> 01:20:33.140
Posso clicar agora em image.html e, ainda que um pouco

01:20:33.140 --> 01:20:37.010
esmagadora, essa é uma imagem realmente grande de Harvard.

01:20:37.010 --> 01:20:39.120
Agora, aparentemente é grande demais para caber na tela.

01:20:39.120 --> 01:20:42.470
Portanto, esta não é a melhor experiência do usuário para rolar para cima.

01:20:42.470 --> 01:20:43.880
OK, então aí está a imagem.

01:20:43.880 --> 01:20:47.840
Horrível, design horrível, se você quiser, pelo menos em termos do meu código.

01:20:47.840 --> 01:20:51.020
Mas haverá maneiras de controlar isso e afetar

01:20:51.020 --> 01:20:52.860
a altura ou a largura também.

01:20:52.860 --> 01:20:57.140
Mas, por enquanto, é apenas deliberadamente um pouco opressor.

01:20:57.140 --> 01:20:59.060
Agora podemos fazer algo um pouco mais divertido

01:20:59.060 --> 01:21:03.540
e atual hoje, o que pode ser usar um vídeo.

01:21:03.540 --> 01:21:07.770
Então deixe-me ir em frente aqui e rapidamente pegar outro arquivo hoje,

01:21:07.770 --> 01:21:11.720
que eu trouxe com antecedência e você pode ter visto brevemente

01:21:11.720 --> 01:21:15.480
anterior, que é um MP4, um arquivo de vídeo real.

01:21:15.480 --> 01:21:18.800
E o que vou fazer aqui revelando o VS Code novamente é que estou

01:21:18.800 --> 01:21:21.200
vai codificar um arquivo chamado video.html.

01:21:21.200 --> 01:21:23.060
Mais uma demonstração aqui.

01:21:23.060 --> 01:21:26.750
Vou mudar meu título para vídeo apenas para manter essas coisas claras.

01:21:26.750 --> 01:21:31.390
E em vez da tag de imagem, você pode imaginar usar agora uma tag de vídeo.

01:21:31.390 --> 01:21:35.620
E esta é uma tag relativamente nova que tem suporte crescente entre os navegadores.

01:21:35.620 --> 01:21:37.000
Então já é bom usar.

01:21:37.000 --> 01:21:39.925
E dentro disso, a sintaxe é um pouco diferente.

01:21:39.925 --> 01:21:43.780
Você especifica, e isso é estranhamente irritantemente inconsistente,

01:21:43.780 --> 01:21:45.790
não SRC para fonte.

01:21:45.790 --> 01:21:47.410
Você literalmente diz fonte.

01:21:47.410 --> 01:21:50.560
E então, em source, você usa um atributo source.

01:21:50.560 --> 01:21:54.250
Design horrível semanticamente, mas é nisso que estamos presos.

01:21:54.250 --> 01:21:57.220
Halloween.mp4 é o nome do vídeo.

01:21:57.220 --> 01:22:00.700
Carregamos com antecedência feitos por alguns dos artistas digitais de Harvard.

01:22:00.700 --> 01:22:05.560
E o tipo desse vídeo para que o navegador saiba com certeza é video/mp4.

01:22:05.560 --> 01:22:07.480
Esse é o chamado tipo de conteúdo que você acabou de

01:22:07.480 --> 01:22:09.400
sabe ou você olha para cima para descobrir.

01:22:09.400 --> 01:22:12.910
E só para que isso seja o mais animado possível,

01:22:12.910 --> 01:22:17.350
Vou dizer a tag de vídeo com alguns atributos para reprodução automática.

01:22:17.350 --> 01:22:22.120
E acontece que os atributos geralmente têm pares de valor-chave em que

01:22:22.120 --> 01:22:26.020
é a chave, o nome do atributo é igual a aspas sem aspas algum valor,

01:22:26.020 --> 01:22:28.870
assim como lang é igual a aspas sem aspas en para inglês.

01:22:28.870 --> 01:22:31.010
Mas nem todos os atributos precisam de valores.

01:22:31.010 --> 01:22:34.150
Na verdade, se você ler a documentação da tag de vídeo do HTML,

01:22:34.150 --> 01:22:37.210
há um atributo de reprodução automática onde você pode literalmente apenas dizer a chave

01:22:37.210 --> 01:22:38.325
e não precisa de valor.

01:22:38.325 --> 01:22:39.700
Só vai significar reprodução automática.

01:22:39.700 --> 01:22:42.980
E se você não quiser a reprodução automática, basta omiti-la completamente.

01:22:42.980 --> 01:22:45.910
Portanto, você não precisa necessariamente de um valor ativado ou desativado.

01:22:45.910 --> 01:22:48.040
Eu quero que a coisa faça um loop apenas para continuar.

01:22:48.040 --> 01:22:50.690
Eu quero que seja silenciado para que não ouçamos nenhum som.

01:22:50.690 --> 01:22:53.110
Na verdade, não há som, mas os navegadores hoje em dia

01:22:53.110 --> 01:22:56.590
por motivos anti-spam e de publicidade, muitas vezes

01:22:56.590 --> 01:23:00.297
não reproduzirá um vídeo se tiver som porque é meio desagradável

01:23:00.297 --> 01:23:03.130
se você visitar uma página e, de repente, seus alto-falantes começarem a tocar.

01:23:03.130 --> 01:23:04.990
Então eu sei disso por ter lido sobre isso

01:23:04.990 --> 01:23:08.170
que devo silenciá-lo se quiser que ele seja reproduzido automaticamente de verdade.

01:23:08.170 --> 01:23:10.780
E então definirei a largura manualmente por enquanto

01:23:10.780 --> 01:23:14.860
para ser como 128 pixels em apenas algumas tentativas e erros anteriores.

01:23:14.860 --> 01:23:18.760
E esse atributo de largura tem um valor.

01:23:18.760 --> 01:23:24.010
Agora, estou sendo um pouco tenso aqui colocando todos os meus atributos em ordem alfabética.

01:23:24.010 --> 01:23:25.108
Nem um pouco necessário.

01:23:25.108 --> 01:23:28.400
Eu faço isso apenas para poder folhear as coisas mais rapidamente e saber se algo está lá ou não.

01:23:28.400 --> 01:23:30.340
Então, para mim, é apenas uma questão de estilo.

01:23:30.340 --> 01:23:32.530
Deixe-me voltar para minha outra guia.

01:23:32.530 --> 01:23:33.820
Volte para o meu índice.

01:23:33.820 --> 01:23:39.460
E você verá dois novos arquivos, novamente, o arquivo MP4 e video.html.

01:23:39.460 --> 01:23:40.570
Vou clicar no último.

01:23:40.570 --> 01:23:44.140
E se eu fiz isso bem, aqui temos graças aos nossos amigos

01:23:44.140 --> 01:23:49.008
em Harvard, nossos amigos artísticos em Harvard, muito...

01:23:49.008 --> 01:23:50.800
como um ooh ajudaria com o drama aqui.

01:23:50.800 --> 01:23:54.950
Mas também temos uma visão muito dramática e agradável do tipo Halloween aqui.

01:23:54.950 --> 01:23:56.780
Portanto, também temos vídeos incorporados.

01:23:56.780 --> 01:23:59.350
E basta dizer que existem maneiras de incorporar vídeos do YouTube

01:23:59.350 --> 01:24:03.820
ou Vimeo ou outros serviços também usando ainda mais tags.

01:24:03.820 --> 01:24:06.640
Mas a web é, claro, tudo sobre hiperlink,

01:24:06.640 --> 01:24:09.170
linguagem de marcação de hipertexto, onde você clica em algo

01:24:09.170 --> 01:24:10.420
e você acaba em outro lugar.

01:24:10.420 --> 01:24:13.330
E é assim que a web é tão poderosamente interconectada.

01:24:13.330 --> 01:24:18.200
Então, como começamos a criar links de um site ou página da web para outro?

01:24:18.200 --> 01:24:20.110
Ou que eu fiz ou outra pessoa.

01:24:20.110 --> 01:24:23.500
Bem, deixe-me ir em frente e abrir novamente a janela do meu terminal.

01:24:23.500 --> 01:24:26.350
E vamos criar um arquivo chamado link.html apenas

01:24:26.350 --> 01:24:28.630
para demonstrar o que você e eu sabemos como um link.

01:24:28.630 --> 01:24:30.160
Vou esconder minha janela de terminal agora.

01:24:30.160 --> 01:24:32.800
Deixe-me copiar e colar apenas para economizar algumas teclas.

01:24:32.800 --> 01:24:36.400
E deixe-me eliminar a tag de vídeo para que possamos nos concentrar agora nos links.

01:24:36.400 --> 01:24:40.090
Suponha que eu queira que você visite Harvard virtualmente.

01:24:40.090 --> 01:24:44.350
Bem, eu poderia dizer algo como visitar Harvard, ponto final.

01:24:44.350 --> 01:24:46.780
Isso é desinteressante porque será apenas texto.

01:24:46.780 --> 01:24:51.082
Eu provavelmente quero que você visite harvard.edu mais especificamente.

01:24:51.082 --> 01:24:53.290
E vou colocar em letras minúsculas apenas para ser consistente com o que

01:24:53.290 --> 01:24:55.450
navegadores fazem na barra de endereço.

01:24:55.450 --> 01:24:58.480
Tudo bem, deixe-me voltar agora para esta guia de vídeo

01:24:58.480 --> 01:25:01.300
e volte para onde agora vemos meu index.

01:25:01.300 --> 01:25:04.000
Vou ampliar novamente e lá está link.html.

01:25:04.000 --> 01:25:06.535
Infelizmente, quando eu clicar aqui e aumentar o zoom,

01:25:06.535 --> 01:25:08.410
você literalmente acabou de ver o texto que eu escrevi.

01:25:08.410 --> 01:25:11.230
E, no entanto, em todas as plataformas de mídia social hoje em dia,

01:25:11.230 --> 01:25:14.800
exceto como o Instagram, quando você digita um URL ou o que parece ser um URL,

01:25:14.800 --> 01:25:18.190
mesmo se você não se preocupou com o HTTP ou HTTPS,

01:25:18.190 --> 01:25:21.790
geralmente o vincula automaticamente para você no Facebook, no Twitter,

01:25:21.790 --> 01:25:22.960
e outros sites também.

01:25:22.960 --> 01:25:24.880
Isso é apenas uma conveniência.

01:25:24.880 --> 01:25:26.710
Discord e Slack também fazem isso.

01:25:26.710 --> 01:25:29.690
Mas eles estão fazendo isso apenas para tornar as coisas mais amigáveis.

01:25:29.690 --> 01:25:35.600
Mas eles precisam gerar HTML com as tags e atributos adequados.

01:25:35.600 --> 01:25:38.290
Então, para que isso realmente funcione, nem é bom o suficiente

01:25:38.290 --> 01:25:42.100
para dizer https://www.harvard.edu.

01:25:42.100 --> 01:25:44.320
Porque se eu voltar agora e recarregar agora, você

01:25:44.320 --> 01:25:46.510
literalmente, apenas veja tudo isso como texto.

01:25:46.510 --> 01:25:51.462
Se você quiser que o navegador trate isso como um link, você precisa usar a tag âncora.

01:25:51.462 --> 01:25:53.920
Seria ótimo se fosse chamado de tag de link, mas não é.

01:25:53.920 --> 01:25:56.800
É chamado de tag âncora ou A para abreviar.

01:25:56.800 --> 01:26:00.850
E a maneira como você faz referência à URL para a qual deseja direcionar o usuário

01:26:00.850 --> 01:26:03.800
é via href para Hyper Reference.

01:26:03.800 --> 01:26:06.790
Esta é uma das tags mais antigas, talvez entre as mais misteriosas agora.

01:26:06.790 --> 01:26:11.620
Mas se eu colocar todo o URL entre aspas e fechar minha tag,

01:26:11.620 --> 01:26:15.250
Agora tenho a oportunidade de terminar meu pensamento entre o início

01:26:15.250 --> 01:26:18.130
tag e a tag final para esta âncora.

01:26:18.130 --> 01:26:20.950
E o que eu coloquei entre a tag inicial e final

01:26:20.950 --> 01:26:22.840
é tudo o que o humano vai ver.

01:26:22.840 --> 01:26:25.090
Então aqui posso dizer Harvard.

01:26:25.090 --> 01:26:27.020
Posso voltar para minha outra guia.

01:26:27.020 --> 01:26:31.620
Posso recarregar a página e agora você vê o conhecido sublinhado azul.

01:26:31.620 --> 01:26:33.730
Este agora é um link real.

01:26:33.730 --> 01:26:38.190
E se eu clicar nele, serei levado para o site real de Harvard.

01:26:38.190 --> 01:26:40.480
Mas há um risco aqui.

01:26:40.480 --> 01:26:45.990
Alguém pode imaginar simplesmente depois de, o quê, 60 segundos da tag âncora,

01:26:45.990 --> 01:26:50.780
como alguém, um adversário, pode fazer mau uso dessa tag sozinho?

01:26:50.780 --> 01:26:53.720
Como pode um site administrado por um adversário, como pode

01:26:53.720 --> 01:26:57.160
um spammer faz uso indevido dessa tag, você acha?

01:26:57.160 --> 01:26:57.820
Sim.

01:26:57.820 --> 01:27:01.250
AUDIÊNCIA: Você poderia dizer, tipo, Visite Yale?

01:27:01.250 --> 01:27:02.500
DAVID MALAN: Sim, com certeza.

01:27:02.500 --> 01:27:05.990
Você poderia dizer uma coisa, mas levar a outro lugar.

01:27:05.990 --> 01:27:07.900
Então eu poderia dizer Yale aqui.

01:27:07.900 --> 01:27:09.700
Nada me impede como desenvolvedor.

01:27:09.700 --> 01:27:10.610
Volte para a página.

01:27:10.610 --> 01:27:11.110
Recarregar.

01:27:11.110 --> 01:27:12.520
Agora diz para visitar Yale.

01:27:12.520 --> 01:27:16.120
Você clica em Yale e, voila, acaba se inscrevendo no lugar errado.

01:27:16.120 --> 01:27:18.110
Agora, há algumas dicas disso.

01:27:18.110 --> 01:27:19.690
Eu poderia pairar sobre isso.

01:27:19.690 --> 01:27:20.740
E super pequeno.

01:27:20.740 --> 01:27:24.070
Como se isso não fosse muito bom para suas técnicas anti-hacking.

01:27:24.070 --> 01:27:28.090
Mas aqui embaixo, você pode realmente ver a URL para a qual ele irá.

01:27:28.090 --> 01:27:31.090
E a maioria dos navegadores realmente faz isso, pelo menos em desktops e laptops.

01:27:31.090 --> 01:27:32.530
Então é uma pequena dica.

01:27:32.530 --> 01:27:36.670
Mas o que você está vendo aqui, mesmo que seja uma brincadeira boba

01:27:36.670 --> 01:27:42.430
por exemplo, é exatamente assim que os ataques de phishing funcionam, o PHISHING funciona,

01:27:42.430 --> 01:27:46.000
por meio do qual um adversário diz para você fazer login em sua conta do PayPal.

01:27:46.000 --> 01:27:47.950
Mas não vai para paypal.com.

01:27:47.950 --> 01:27:50.650
Ele vai para algum outro site aleatório que eles

01:27:50.650 --> 01:27:53.718
comprado e construído que então tenta coletar seu nome de usuário e senha

01:27:53.718 --> 01:27:55.010
e armazená-lo em seu banco de dados.

01:27:55.010 --> 01:27:58.120
Agora eles podem fazer login na sua conta do PayPal como você.

01:27:58.120 --> 01:28:01.030
E tudo se resume a esse simples primitivo.

01:28:01.030 --> 01:28:03.460
E você pode ser ainda mais manipulador também.

01:28:03.460 --> 01:28:08.410
Você pode até dizer a URL inteira de Yale, como yale.edu ou pior,

01:28:08.410 --> 01:28:12.610
https://www.yale.edu e recarregue-o.

01:28:12.610 --> 01:28:16.120
E agora, quero dizer, quem entre vocês e as pessoas em suas vidas

01:28:16.120 --> 01:28:19.570
necessariamente serão tão paranóicos que não clicarão cegamente

01:28:19.570 --> 01:28:20.620
nesse URL?

01:28:20.620 --> 01:28:24.040
É por isso que ser apenas uma pessoa defensiva do mundo real hoje em dia

01:28:24.040 --> 01:28:26.540
digitalmente é cada vez mais importante.

01:28:26.540 --> 01:28:30.280
Essas mesmas coisas que podem ser usadas para casos de uso bons ou benignos

01:28:30.280 --> 01:28:32.950
também pode ser usado para propósitos ruins também.

01:28:32.950 --> 01:28:35.590
E é literalmente assim tão simples.

01:28:35.590 --> 01:28:40.270
Perguntas agora sobre qualquer uma dessas tags até agora?

01:28:40.270 --> 01:28:42.810
Apenas mais alguns para oferecer.

01:28:42.810 --> 01:28:46.090
Alguma dúvida sobre isso aqui?

01:28:46.090 --> 01:28:46.590
Não?

01:28:46.590 --> 01:28:49.890
Bem, deixe-me abrir alguns que eu trouxe com antecedência apenas para que possamos

01:28:49.890 --> 01:28:52.480
não precisa digitar todos eles aqui.

01:28:52.480 --> 01:28:56.200
Se você, por exemplo, tiver uma página da Web com bastante código,

01:28:56.200 --> 01:29:01.260
deixe-me pegar no site alguns exemplos bem rápido aqui.

01:29:01.260 --> 01:29:07.800
Ou seja, um que vai chamar como sobre meta.html.

01:29:07.800 --> 01:29:11.970
E neste exemplo aqui, dê-me apenas um momento para tela cheia,

01:29:11.970 --> 01:29:15.030
nós vamos ter um arquivo.

01:29:15.030 --> 01:29:17.460
Portanto, codifique meta.html.

01:29:17.460 --> 01:29:18.840
Vou abrir isso a seguir.

01:29:18.840 --> 01:29:21.570
Nenhuma relação com o que agora conhecemos como Meta, a empresa.

01:29:21.570 --> 01:29:24.360
Mas, ao contrário, esta será uma página que eu

01:29:24.360 --> 01:29:27.310
copiou e colou o mesmo pedaço de texto em latim de antes.

01:29:27.310 --> 01:29:29.440
Portanto, será um parágrafo muito grande de texto.

01:29:29.440 --> 01:29:32.232
E este é um exemplo em que, se você abrir esta página da web, não

01:29:32.232 --> 01:29:34.260
no meu próprio Mac ou no seu PC, mas no seu telefone,

01:29:34.260 --> 01:29:37.210
a fonte pode realmente ser realmente irritante e difícil de ler.

01:29:37.210 --> 01:29:37.710
Por que?

01:29:37.710 --> 01:29:40.377
Porque seu telefone vai tentar espremer todo o conteúdo

01:29:40.377 --> 01:29:44.080
na pequena janela de visualização, a região retangular do seu telefone.

01:29:44.080 --> 01:29:46.950
Acontece que existem maneiras, maneiras bem fáceis,

01:29:46.950 --> 01:29:50.760
para tornar seu site compatível com dispositivos móveis, também conhecido tecnicamente

01:29:50.760 --> 01:29:51.810
como responsivo.

01:29:51.810 --> 01:29:58.170
E a maneira mais fácil de fazer isso é incluir essa tag aqui, uma meta tag.

01:29:58.170 --> 01:29:59.760
Novamente, nenhuma relação com o Facebook.

01:29:59.760 --> 01:30:01.150
Isso está aqui há muito mais tempo.

01:30:01.150 --> 01:30:06.120
E neste caso aqui, esta meta tag na linha cinco tem seu próprio tipo de abordagem

01:30:06.120 --> 01:30:07.227
aos pares chave-valor.

01:30:07.227 --> 01:30:09.060
Este é um bom exemplo de onde seria bom

01:30:09.060 --> 01:30:12.840
se parecesse com todo o resto, mas isso é o que temos historicamente.

01:30:12.840 --> 01:30:15.210
Você pode ter uma meta tag com um atributo chamado

01:30:15.210 --> 01:30:18.420
nome que se refere ao nome de algum recurso do navegador.

01:30:18.420 --> 01:30:22.380
Neste caso, viewport é o termo técnico para a grande região retangular

01:30:22.380 --> 01:30:23.550
ao qual continuo me referindo.

01:30:23.550 --> 01:30:25.290
O corpo, realmente, da sua página.

01:30:25.290 --> 01:30:30.330
O conteúdo da viewport, você pode dizer alguns detalhes esotéricos como este.

01:30:30.330 --> 01:30:31.920
A escala inicial deve ser um.

01:30:31.920 --> 01:30:35.380
Não importa quem visita seu site, ele não deve começar a ser ampliado.

01:30:35.380 --> 01:30:36.630
Não deve começar a diminuir o zoom.

01:30:36.630 --> 01:30:38.850
Ele deve começar apenas com o tamanho padrão.

01:30:38.850 --> 01:30:41.370
E aqui, a largura é igual à largura do dispositivo,

01:30:41.370 --> 01:30:45.120
é uma maneira muito misteriosa de dizer se o usuário tem uma tela pequena,

01:30:45.120 --> 01:30:47.850
mostrar o texto proporcional a esse tamanho.

01:30:47.850 --> 01:30:50.880
Não tente colocar tudo em uma pequena janela.

01:30:50.880 --> 01:30:52.210
Então é super simples.

01:30:52.210 --> 01:30:54.930
Mas se para o próximo conjunto de problemas ou projetos futuros

01:30:54.930 --> 01:30:59.460
você também descobre que as coisas parecem muito ruins no celular, esse tipo de tag

01:30:59.460 --> 01:31:01.470
é o lugar para começar, meta.

01:31:01.470 --> 01:31:03.810
Não há muitos deles que você usará,

01:31:03.810 --> 01:31:06.820
mas também são úteis para outros mecanismos.

01:31:06.820 --> 01:31:10.290
Na verdade, deixe-me ir em frente e puxar semi-secretamente outro exemplo

01:31:10.290 --> 01:31:14.520
bem como eu vou pegar outro exemplo que

01:31:14.520 --> 01:31:16.470
usa mais dessas tags.

01:31:16.470 --> 01:31:20.410
E em apenas um momento, vou revelá-lo aqui.

01:31:20.410 --> 01:31:22.800
Dê-me apenas um segundo aqui.

01:31:22.800 --> 01:31:29.220
Vou propor que neste exemplo de meta,

01:31:29.220 --> 01:31:33.340
agora adicionamos essas propriedades.

01:31:33.340 --> 01:31:35.370
Então eu copio e colei isso de um arquivo existente

01:31:35.370 --> 01:31:37.680
apenas para não perder tempo digitando tudo isso.

01:31:37.680 --> 01:31:40.830
Se você já compartilhou um URL no Facebook ou Twitter

01:31:40.830 --> 01:31:44.130
ou Slack ou Discord ou qualquer número de sites hoje em dia

01:31:44.130 --> 01:31:46.860
que mostram automaticamente uma boa visualização onde você de repente

01:31:46.860 --> 01:31:50.040
veja a imagem padrão da página, talvez algumas frases ou palavras

01:31:50.040 --> 01:31:52.170
de texto ou algo assim.

01:31:52.170 --> 01:31:54.870
Às vezes, esses aplicativos, esses sites,

01:31:54.870 --> 01:31:56.940
apenas escolherá a primeira imagem que encontrar

01:31:56.940 --> 01:31:59.790
no site ou na primeira frase que ele vê e mostra isso.

01:31:59.790 --> 01:32:03.540
Mas isso pode não ser muito amigável ao usuário ou ao mecanismo de pesquisa.

01:32:03.540 --> 01:32:06.810
E então um desenvolvedor pode querer controlar o que

01:32:06.810 --> 01:32:09.990
é que Slack, Discord, Facebook, Twitter e outros sites semelhantes

01:32:09.990 --> 01:32:11.310
mostrar por padrão.

01:32:11.310 --> 01:32:16.170
Para isso, você pode usar hoje em dia as chamadas tags open graph, ou seja,

01:32:16.170 --> 01:32:18.023
há outros usos da meta tag.

01:32:18.023 --> 01:32:19.440
E você apenas procura essas coisas.

01:32:19.440 --> 01:32:22.273
Até eu tive que procurar isso para lembrar quais são os pares de valores-chave.

01:32:22.273 --> 01:32:25.200
A meta tag também pode ter um atributo de propriedade que

01:32:25.200 --> 01:32:27.030
podem ser essas strings muito específicas.

01:32:27.030 --> 01:32:30.000
E título, E descrição, E imagem, que

01:32:30.000 --> 01:32:32.850
denota Open Graph, que, novamente, é esse padrão que é

01:32:32.850 --> 01:32:34.230
evoluiu nos últimos anos.

01:32:34.230 --> 01:32:37.200
E o que você pode fazer aqui é dizer aos navegadores

01:32:37.200 --> 01:32:41.340
e, por sua vez, servidores o que você deseja que eles mostrem como padrão

01:32:41.340 --> 01:32:44.610
título da página, a descrição da página e até a imagem padrão

01:32:44.610 --> 01:32:49.050
apenas para que você possa exercer mais controle ao compartilhar coisas socialmente hoje em dia

01:32:49.050 --> 01:32:49.720
também.

01:32:49.720 --> 01:32:51.937
Novamente, tudo se resume a esses pares de valores-chave.

01:32:51.937 --> 01:32:55.020
Este é absolutamente o tipo de coisa que você procura conforme necessário para verificar.

01:32:55.020 --> 01:32:56.560
Mas essas capacidades estão lá.

01:32:56.560 --> 01:32:59.460
E, literalmente, da próxima vez que você colar um link no Slack ou no Discord

01:32:59.460 --> 01:33:03.810
ou qualquer site on-line que o exiba de maneira incorporada, apenas

01:33:03.810 --> 01:33:07.980
saiba que todo esse tempo um pouco de código textual como este em HTML

01:33:07.980 --> 01:33:12.370
esteve lá por quem criou o site.

01:33:12.370 --> 01:33:12.870
Tudo bem.

01:33:12.870 --> 01:33:17.940
Vamos fazer um exemplo final apenas em HTML antes de fazermos a transição para apenas limpar

01:33:17.940 --> 01:33:20.640
melhorar a estética e melhorar o visual de tudo

01:33:20.640 --> 01:33:21.690
temos vindo a criar.

01:33:21.690 --> 01:33:24.690
Deixe-me ir em frente aqui e fechar meta.html.

01:33:24.690 --> 01:33:28.830
Deixe-me codificar um novo arquivo chamado que tal search.html

01:33:28.830 --> 01:33:31.380
e ver se não podemos tirar alguma inspiração

01:33:31.380 --> 01:33:35.550
de nossa compreensão superficial anterior de como os URLs funcionam para ver

01:33:35.550 --> 01:33:38.170
se não pudermos reinventar o próprio google.com.

01:33:38.170 --> 01:33:41.290
Portanto, lembre-se de que uma URL canônica pode se parecer com esta aqui.

01:33:41.290 --> 01:33:45.590
E, em particular, se você quiser passar a entrada do usuário para esse URL,

01:33:45.590 --> 01:33:48.750
novamente, você pode ter um ponto de interrogação

01:33:48.750 --> 01:33:50.600
e então uma chave é igual a um par de valores.

01:33:50.600 --> 01:33:53.060
Ou, nesse caso, você pode até ter vários valores de chave

01:33:53.060 --> 01:33:55.793
pares que por convenção são separados por e comercial.

01:33:55.793 --> 01:33:56.960
Essas coisas estão por toda parte.

01:33:56.960 --> 01:34:00.050
Mais tarde hoje, quando você abre quase todos os sites em seu navegador,

01:34:00.050 --> 01:34:02.690
olhe para o URL e você verá muito disso.

01:34:02.690 --> 01:34:04.363
Muito barulho também e distrações.

01:34:04.363 --> 01:34:06.530
Mas haverá alguns sinais de igual provavelmente

01:34:06.530 --> 01:34:08.670
e/ou alguns e comerciais também.

01:34:08.670 --> 01:34:11.250
E esses estão apenas separando pares de valores-chave.

01:34:11.250 --> 01:34:12.630
Agora, o que posso fazer aqui?

01:34:12.630 --> 01:34:17.060
Bem, se você pensar em como pesquisávamos gatos manualmente anteriormente,

01:34:17.060 --> 01:34:18.110
deixe-me fazer isso rapidamente.

01:34:18.110 --> 01:34:19.310
Vou fazer isso manualmente.

01:34:19.310 --> 01:34:22.940
Tipo de documento HTML como minha primeira linha.

01:34:22.940 --> 01:34:27.570
Tag HTML com meu atributo lang para inglês aqui.

01:34:27.570 --> 01:34:29.810
E dentro disso, terei uma etiqueta na cabeça.

01:34:29.810 --> 01:34:31.340
Dentro disso, terei um título.

01:34:31.340 --> 01:34:34.400
Vou chamar esse exemplo de pesquisa.

01:34:34.400 --> 01:34:37.340
E então aqui embaixo eu terei o começo da etiqueta do corpo.

01:34:37.340 --> 01:34:40.820
E agora, deixe-me apresentar a você uma tag final por enquanto,

01:34:40.820 --> 01:34:44.750
uma tag de formulário, que criará um formulário da web, a coisa com caixas de texto

01:34:44.750 --> 01:34:48.170
e botões que você e eu usamos todos os dias em vários sites.

01:34:48.170 --> 01:34:51.710
Dentro deste formulário, terei uma entrada como uma caixa de texto

01:34:51.710 --> 01:34:54.890
cujo nome vai ser q para consulta, pois estou

01:34:54.890 --> 01:34:57.110
tentando reimplementar o Google aqui.

01:34:57.110 --> 01:35:01.550
O tipo de que eu quero que seja uma caixa de texto.

01:35:01.550 --> 01:35:03.710
Ou se eu sei que estou usando isso para pesquisa, eu

01:35:03.710 --> 01:35:05.630
pode realmente mudar isso para uma caixa de pesquisa.

01:35:05.630 --> 01:35:08.280
E vai me deixar-- geralmente vai colocar um pequeno x lá

01:35:08.280 --> 01:35:09.500
para que você possa limpá-lo rapidamente.

01:35:09.500 --> 01:35:11.790
Isso também é um pequeno aprimoramento.

01:35:11.790 --> 01:35:15.440
E então eu vou dar a mim mesmo um botão Enviar fazendo input--

01:35:15.440 --> 01:35:16.070
opa.

01:35:16.070 --> 01:35:20.840
Vou dar a mim mesmo um botão Enviar fazendo input type igual a submit.

01:35:20.840 --> 01:35:24.180
E então eu vou deixar isso como tal aqui.

01:35:24.180 --> 01:35:24.680
Tudo bem.

01:35:24.680 --> 01:35:26.400
Agora preciso fazer um pouco mais.

01:35:26.400 --> 01:35:27.608
Mas vamos ver como isso parece.

01:35:27.608 --> 01:35:29.210
Deixe-me ir para a minha outra guia.

01:35:29.210 --> 01:35:31.110
Deixe-me voltar ao meu índice.

01:35:31.110 --> 01:35:35.550
E se eu diminuir o zoom, haverá search.html.

01:35:35.550 --> 01:35:38.910
Eu clico nele e não há muita coisa acontecendo aqui, mesmo se eu aumentar o zoom.

01:35:38.910 --> 01:35:42.840
Mas eu realmente tenho uma caixa de texto muito grande e um botão Enviar.

01:35:42.840 --> 01:35:46.230
Mas eu não contei em meu HTML a ninguém em lugar nenhum

01:35:46.230 --> 01:35:50.050
que eu quero que esta entrada, se eu digitar gato ou cachorro, vá para google.com.

01:35:50.050 --> 01:35:52.050
Então, para isso, preciso de mais alguns atributos.

01:35:52.050 --> 01:35:53.925
E eu sei disso por ter feito isso antes.

01:35:53.925 --> 01:35:55.770
E qualquer referência online dirá o mesmo.

01:35:55.770 --> 01:35:57.413
Você pode adicionar um atributo de ação.

01:35:57.413 --> 01:35:59.580
Como o que você quer que a ação deste formulário seja?

01:35:59.580 --> 01:36:03.570
E você pode colocar o URL para o qual deseja que este formulário seja enviado.

01:36:03.570 --> 01:36:10.020
E eu sei por mexer que deveria ser https://www.google.com/search.

01:36:10.020 --> 01:36:12.600
Eu mesmo não preciso colocar nenhum ponto de interrogação aqui.

01:36:12.600 --> 01:36:16.690
Mas eu quero que o navegador faça isso por mim.

01:36:16.690 --> 01:36:18.990
Então, deixe-me voltar para minha outra guia.

01:36:18.990 --> 01:36:20.100
Deixe-me recarregar.

01:36:20.100 --> 01:36:21.990
E nada visualmente aconteceu.

01:36:21.990 --> 01:36:23.160
Mas observe isso.

01:36:23.160 --> 01:36:26.610
Quando agora digito gatos, mas antes de pressionar Enter,

01:36:26.610 --> 01:36:29.940
observe que estou atualmente em uma longa barra de URL maluca

01:36:29.940 --> 01:36:32.670
search.html como esperado.

01:36:32.670 --> 01:36:35.580
Agora, se eu descer até o botão Enviar e clicar em Enviar,

01:36:35.580 --> 01:36:38.730
observe o que acontece com o URL e a própria página.

01:36:38.730 --> 01:36:41.647
Sou levado para o google.com real.

01:36:41.647 --> 01:36:43.230
E, de fato, existem esses mesmos gatos.

01:36:43.230 --> 01:36:47.160
E se eu ampliar aqui, você verá que minha URL mudou para ser de fato

01:36:47.160 --> 01:36:49.620
/search?q=gatos.

01:36:49.620 --> 01:36:51.360
Portanto, é assim que os formulários da web funcionam.

01:36:51.360 --> 01:36:53.820
Quando você envia qualquer formulário na web dessa maneira,

01:36:53.820 --> 01:36:58.200
o navegador vai automaticamente para esse URL de ação, adiciona um ponto de interrogação,

01:36:58.200 --> 01:37:01.680
coloca quaisquer pares de valores-chave que você digitou manualmente nas caixas de texto,

01:37:01.680 --> 01:37:03.520
e permite que o servidor faça o seu trabalho.

01:37:03.520 --> 01:37:05.880
Agora é aqui que o Chrome está começando a simplificar as coisas.

01:37:05.880 --> 01:37:07.170
O Safari também faz isso.

01:37:07.170 --> 01:37:10.500
Se você clicar duas vezes em seu URL, verá o URL completo.

01:37:10.500 --> 01:37:12.300
Mas se alguma peça estiver faltando, isso é apenas

01:37:12.300 --> 01:37:16.020
uma coisa de interface do usuário para eliminar distrações visuais hoje em dia.

01:37:16.020 --> 01:37:20.760
Enquanto isso, se eu voltar à minha própria forma, se desta vez eu procurar cachorros e bater

01:37:20.760 --> 01:37:25.620
Digite, agora novamente, a URL muda para q=dogs.

01:37:25.620 --> 01:37:30.840
E tudo se reduz a este bloco de construção básico de usar uma tag de formulário.

01:37:30.840 --> 01:37:32.220
Agora posso ser mais explícito.

01:37:32.220 --> 01:37:35.370
Se eu sei que quero usar get, que na verdade é o padrão,

01:37:35.370 --> 01:37:38.040
Eu posso literalmente dizer entre aspas "get" em letras minúsculas,

01:37:38.040 --> 01:37:40.620
mesmo que o verbo anterior tenha sido intencionalmente em maiúsculas.

01:37:40.620 --> 01:37:42.930
Mas aqui agora, estou apenas sendo cada vez mais explícito.

01:37:42.930 --> 01:37:47.880
Se eu não quiser que o rótulo desse botão seja muito genérico, Enviar,

01:37:47.880 --> 01:37:50.490
talvez eu queira que seja "Pesquisa do Google", entre aspas.

01:37:50.490 --> 01:37:52.860
Bem, se você ler a documentação dos formulários,

01:37:52.860 --> 01:37:55.290
você pode alterar o valor do botão

01:37:55.290 --> 01:37:57.610
para ser aspas sem aspas "Pesquisa do Google".

01:37:57.610 --> 01:38:01.390
E se eu voltar aqui e recarregar, recebo um novo formulário.

01:38:01.390 --> 01:38:04.840
E agora recebo um botão que literalmente diz Pesquisa do Google.

01:38:04.840 --> 01:38:07.900
E se eu mexer mais nisso, porque isso não é muito amigável,

01:38:07.900 --> 01:38:09.840
há ainda mais atributos que posso fazer.

01:38:09.840 --> 01:38:15.570
Posso adicionar na minha entrada de pesquisa um preenchimento automático

01:38:15.570 --> 01:38:19.232
igual se eu não quiser ver minha própria história por qualquer motivo.

01:38:19.232 --> 01:38:21.690
Não quero que as pessoas saibam que estou procurando cães e gatos

01:38:21.690 --> 01:38:22.440
nesta página.

01:38:22.440 --> 01:38:25.200
Posso focar automaticamente na caixa de texto para que ela

01:38:25.200 --> 01:38:28.740
mostra o cursor piscando nessa caixa por padrão.

01:38:28.740 --> 01:38:30.760
E eu posso até fazer algo assim.

01:38:30.760 --> 01:38:34.230
Posso ter um atributo de espaço reservado que diz algo como consulta

01:38:34.230 --> 01:38:36.600
ou alguma outra documentação para o usuário.

01:38:36.600 --> 01:38:41.040
E se eu voltar e recarregar, você verá que diz consulta

01:38:41.040 --> 01:38:43.890
e é sutil, mas meu cursor já está posicionado ali.

01:38:43.890 --> 01:38:45.360
Deu foco.

01:38:45.360 --> 01:38:48.820
E agora posso digitar gatos sem precisar clicar na caixa manualmente,

01:38:48.820 --> 01:38:52.500
que é apenas um pouco melhor para a experiência do usuário.

01:38:52.500 --> 01:38:57.740
Alguma dúvida agora sobre tudo isso aqui?

01:38:57.740 --> 01:38:59.510
Alguma pergunta?

01:38:59.510 --> 01:39:00.010
Tudo bem.

01:39:00.010 --> 01:39:00.802
Isso também era muito.

01:39:00.802 --> 01:39:02.680
Por que não fazemos uma pausa casual de cinco minutos?

01:39:02.680 --> 01:39:05.740
E quando retomarmos, vamos dar uma olhada no CSS, adicionar um pouco de JavaScript,

01:39:05.740 --> 01:39:06.460
e depois embrulhar.

01:39:06.460 --> 01:39:08.950
Então, cinco minutos apenas por enquanto.

01:39:08.950 --> 01:39:10.180
Tudo bem.

01:39:10.180 --> 01:39:11.110
Estamos de volta.

01:39:11.110 --> 01:39:14.170
Então, tecnicamente, é isso para HTML.

01:39:14.170 --> 01:39:17.020
Daqui em diante, dependerá dos recursos e referências online

01:39:17.020 --> 01:39:19.600
indicamos apenas para preencher seu vocabulário para mais tags

01:39:19.600 --> 01:39:20.450
e atributos.

01:39:20.450 --> 01:39:21.820
Mas conceitualmente é isso.

01:39:21.820 --> 01:39:25.750
Há atributos, há tags e há atributos,

01:39:25.750 --> 01:39:30.310
e o resto é apenas uma espécie de lista de recursos possíveis.

01:39:30.310 --> 01:39:32.560
Mas acontece que você também verá com o tempo

01:39:32.560 --> 01:39:34.630
que você pode até ver o HTML para sites.

01:39:34.630 --> 01:39:39.760
Por exemplo, se eu acessar harvard.edu em meu navegador, que

01:39:39.760 --> 01:39:42.400
Vou seguir em frente em apenas um momento aqui e fazer aqui,

01:39:42.400 --> 01:39:48.400
e faça https://www.harvard.edu/ Enter, novamente

01:39:48.400 --> 01:39:51.080
vai abrir a versão de hoje do site de Harvard.

01:39:51.080 --> 01:39:54.790
E se eu clicar com o botão direito do mouse ou clicar com a tecla Control novamente e ir para Inspecionar,

01:39:54.790 --> 01:39:57.010
você verá as chamadas ferramentas de desenvolvedor.

01:39:57.010 --> 01:39:59.920
E anteriormente nos concentramos na guia Rede

01:39:59.920 --> 01:40:03.010
apenas para que pudéssemos ver as coisas HTTP acontecendo.

01:40:03.010 --> 01:40:06.160
Mas o que eu abordei anteriormente foram os chamados Elementos

01:40:06.160 --> 01:40:10.540
guia, que na verdade mostra o HTML subjacente a qualquer web

01:40:10.540 --> 01:40:11.750
página na internet.

01:40:11.750 --> 01:40:14.410
E assim, por exemplo, aqui está o HTML subjacente

01:40:14.410 --> 01:40:17.080
para a página inicial de Harvard a partir de agora.

01:40:17.080 --> 01:40:19.090
E esteticamente, algumas delas foram desmoronadas.

01:40:19.090 --> 01:40:20.890
Então, se eu clicar nesses vários triângulos,

01:40:20.890 --> 01:40:22.450
Vou ver o que realmente está dentro.

01:40:22.450 --> 01:40:25.000
Esses são os filhos de algumas dessas tags HTML.

01:40:25.000 --> 01:40:26.710
Mas daqui em diante, se você estiver curioso como

01:40:26.710 --> 01:40:30.640
a como uma página da web criou alguns recursos visualmente,

01:40:30.640 --> 01:40:33.070
você pode literalmente usar essas ferramentas de desenvolvedor

01:40:33.070 --> 01:40:37.960
construído em seu próprio navegador apenas para ver o que o desenvolvedor da web realmente fez.

01:40:37.960 --> 01:40:39.760
E você também pode fazer coisas assim.

01:40:39.760 --> 01:40:43.780
Como se você realmente gosta de talvez, vamos ver,

01:40:43.780 --> 01:40:47.620
se você realmente gosta deste menu no canto superior direito do site de Harvard,

01:40:47.620 --> 01:40:52.510
você pode até clicar com o botão direito do mouse ou clicar com o controle especificamente, escolha

01:40:52.510 --> 01:40:57.850
Inspecione, e o que os navegadores farão é pular para o HTML correspondente

01:40:57.850 --> 01:40:59.990
a esse elemento visual na página.

01:40:59.990 --> 01:41:02.890
E aqui você pode ver que não falamos sobre essa tag antes.

01:41:02.890 --> 01:41:05.890
Há uma tag de botão, há um atributo de ID,

01:41:05.890 --> 01:41:09.670
e há alguns outros atributos também que definem esse botão.

01:41:09.670 --> 01:41:12.790
Você também pode fazer outras coisas na página da web.

01:41:12.790 --> 01:41:15.110
Deixe-me rolar para baixo, por exemplo, aqui.

01:41:15.110 --> 01:41:20.110
E, na verdade, vamos para outro, como yale.edu aqui no tema de hoje.

01:41:20.110 --> 01:41:26.770
E suponha que queremos fazer algo como mudar a estética deste site.

01:41:26.770 --> 01:41:28.300
Bem, que tal isso?

01:41:28.300 --> 01:41:29.500
Aqui, Vida em Yale.

01:41:29.500 --> 01:41:30.670
Vamos clicar com o botão direito sobre isso.

01:41:30.670 --> 01:41:31.870
Escolha Inspecionar.

01:41:31.870 --> 01:41:34.250
Isso vai pular para essa parte da página.

01:41:34.250 --> 01:41:36.700
E observe o que você pode fazer aqui nesta guia Elementos.

01:41:36.700 --> 01:41:39.700
Podemos ser um pouco brincalhões em troca hoje.

01:41:39.700 --> 01:41:41.260
Vida em Harvard.

01:41:41.260 --> 01:41:45.370
E pronto, agora mudamos o site de Yale, ao que parece.

01:41:45.370 --> 01:41:48.070
Então nós realmente?

01:41:48.070 --> 01:41:51.130
Esperançosamente, hackear não é tão fácil assim.

01:41:51.130 --> 01:41:56.110
O que realmente fizemos com base no modelo mental de hoje?

01:41:56.110 --> 01:41:57.580
Eu mudei a página, mas.

01:41:57.580 --> 01:41:58.930
AUDIÊNCIA: [INAUDÍVEL]

01:41:58.930 --> 01:42:00.700
DAVID MALAN: Sim, acabei de mudar como é para mim.

01:42:00.700 --> 01:42:03.575
Porque meu navegador, assim como com Phyllis e Brian desde o início,

01:42:03.575 --> 01:42:05.080
solicitou a página da web de Yale.

01:42:05.080 --> 01:42:08.950
Recebi de volta um envelope virtual contendo aquele HTML, como agora o chamamos.

01:42:08.950 --> 01:42:10.420
Meu navegador tem uma cópia local.

01:42:10.420 --> 01:42:13.720
Ele tem sua própria árvore, também conhecida como DOM, Document Object Model,

01:42:13.720 --> 01:42:14.950
construído em sua memória.

01:42:14.950 --> 01:42:18.080
E sim, fui à cidade e troquei minha cópia.

01:42:18.080 --> 01:42:20.890
Mas é claro, espero, não ter mudado o servidor atual.

01:42:20.890 --> 01:42:24.130
E, de fato, se eu recarregar o site de Yale agora,

01:42:24.130 --> 01:42:28.840
espero que volte, de fato, ao que deveria ser.

01:42:28.840 --> 01:42:29.830
Vida em Yale.

01:42:29.830 --> 01:42:34.505
Mas essa capacidade em seu próprio navegador, seja Chrome, Firefox, Edge ou Safari,

01:42:34.505 --> 01:42:36.880
ter essas ferramentas de desenvolvedor integradas é muito poderoso,

01:42:36.880 --> 01:42:39.520
porque vai permitir que você não apenas diagnostique

01:42:39.520 --> 01:42:43.000
problemas que invariavelmente surgirão nas próximas semanas com seu próprio código,

01:42:43.000 --> 01:42:45.430
mas também permitirá que você aprenda com outros sites

01:42:45.430 --> 01:42:48.080
como você pode fazer as coisas e mexer também.

01:42:48.080 --> 01:42:51.340
Mas até agora, focamos apenas em tags e atributos

01:42:51.340 --> 01:42:53.620
e na estrutura de uma página web.

01:42:53.620 --> 01:42:56.830
Vamos agora nos concentrar mais na estética e no ajuste fino disso.

01:42:56.830 --> 01:42:59.770
Acontece que HTML tem suporte muito limitado

01:42:59.770 --> 01:43:03.920
para qualquer coisa estética, como tamanhos e cores de fonte e assim por diante.

01:43:03.920 --> 01:43:08.110
E nos últimos anos, as pessoas têm usado necessariamente uma segunda língua

01:43:08.110 --> 01:43:09.040
chamado CSS.

01:43:09.040 --> 01:43:10.330
Não é uma linguagem de programação.

01:43:10.330 --> 01:43:13.240
Mais uma vez, uma linguagem de marcação, se preferir, para

01:43:13.240 --> 01:43:14.680
ajustar a estética de uma página.

01:43:14.680 --> 01:43:17.360
Tamanhos de fonte, cores, margens e tudo isso.

01:43:17.360 --> 01:43:21.250
Então o CSS vai nos permitir definir um monte de propriedades,

01:43:21.250 --> 01:43:25.690
que é apenas a terminologia de outro grupo de pessoas para pares de valores-chave.

01:43:25.690 --> 01:43:29.870
Na verdade, desde a quinta semana, os pares de valores-chave estão em todo o mundo,

01:43:29.870 --> 01:43:32.300
não apenas em Sweetgreen e restaurantes, mas de fato

01:43:32.300 --> 01:43:36.340
sob código embutido e linguagens e tecnologias como essas.

01:43:36.340 --> 01:43:39.970
Propriedades é a nova palavra em CSS para o que há pouco

01:43:39.970 --> 01:43:41.410
chamados atributos em HTML.

01:43:41.410 --> 01:43:43.510
Mas é a mesma ideia, apenas vocabulário diferente

01:43:43.510 --> 01:43:45.430
que você se acostuma com o tempo.

01:43:45.430 --> 01:43:50.260
Algumas frases que posso usar agora e que você ouvirá nos próximos dias seriam estas.

01:43:50.260 --> 01:43:52.330
Seletor de tipo, seletor de classe, seletor de ID,

01:43:52.330 --> 01:43:55.390
seletor de atributo, que apenas se refere a diferentes técnicas que estamos

01:43:55.390 --> 01:43:58.210
prestes a ver que vão permitir que você controle mais

01:43:58.210 --> 01:44:01.248
precisamente a estética de coisas específicas na página.

01:44:01.248 --> 01:44:03.040
E a maneira como vamos fazer isso é que estamos

01:44:03.040 --> 01:44:05.838
vai pegar nosso HTML básico, como vimos anteriormente,

01:44:05.838 --> 01:44:09.130
e vamos apresentar nos próximos minutos apenas mais algumas tags

01:44:09.130 --> 01:44:10.090
e/ou atributos.

01:44:10.090 --> 01:44:16.990
Primeiro, vamos apresentar a você uma tag chamada style, que tem um belo nome

01:44:16.990 --> 01:44:19.300
permite controlar o estilo, a estética,

01:44:19.300 --> 01:44:20.950
o visual da página da web.

01:44:20.950 --> 01:44:22.930
Ou vamos apresentá-lo a um link

01:44:22.930 --> 01:44:27.400
tag, que muito confusamente não fornece um link no qual você possa clicar.

01:44:27.400 --> 01:44:31.510
Ele apenas vincula a outro arquivo que é incluído automaticamente

01:44:31.510 --> 01:44:34.990
ou importado, para emprestar nossa linguagem de C ou em Python.

01:44:34.990 --> 01:44:36.110
Mas a mesma ideia.

01:44:36.110 --> 01:44:38.230
Isso nos permitirá incluir arquivos secundários.

01:44:38.230 --> 01:44:41.500
E, finalmente, mostraremos como você pode aproveitar os serviços de terceiros

01:44:41.500 --> 01:44:43.870
frameworks, bibliotecas que outras pessoas escreveram,

01:44:43.870 --> 01:44:47.040
para não ficar preso nas ervas daninhas de toda afinação da estética

01:44:47.040 --> 01:44:50.290
e apenas faça coisas bonitas rapidamente para que você possa se concentrar realmente no intelectualmente

01:44:50.290 --> 01:44:54.220
parte interessante, se essa for sua escolha, de construir o conteúdo, o site,

01:44:54.220 --> 01:44:56.090
o aplicativo você mesmo.

01:44:56.090 --> 01:44:58.840
Tudo bem, então com isso dito, deixe-me voltar ao VS Code aqui.

01:44:58.840 --> 01:45:02.680
E deixe-me criar um exemplo simples chamado home.html.

01:45:02.680 --> 01:45:06.010
Uma página inicial muito simples para John Harvard, por exemplo.

01:45:06.010 --> 01:45:09.400
Permitam-me que me dê três parágrafos inicialmente, o primeiro dos quais

01:45:09.400 --> 01:45:11.740
vai ter apenas o nome da pessoa.

01:45:11.740 --> 01:45:16.510
O segundo parágrafo vai dizer algo como bem-vindo à minha página inicial

01:45:16.510 --> 01:45:17.530
para cumprimentar os visitantes.

01:45:17.530 --> 01:45:21.640
E o terceiro vai ser um pequeno rodapé como copyright

01:45:21.640 --> 01:45:26.530
que tal John Harvard 1636 ou algo assim.

01:45:26.530 --> 01:45:28.960
Tudo bem, deixe-me voltar para minha outra guia como antes.

01:45:28.960 --> 01:45:30.220
Recarregue meu índice.

01:45:30.220 --> 01:45:31.240
Aqui está meu novo arquivo.

01:45:31.240 --> 01:45:33.640
Home.html e clicarei nele.

01:45:33.640 --> 01:45:37.300
E você verá, OK, quero dizer, esta é uma espécie de página da web no estilo 1636.

01:45:37.300 --> 01:45:41.320
Super simples, todo texto, nada realmente interessante acontecendo lá.

01:45:41.320 --> 01:45:44.290
Mas podemos começar a estilizá-lo de maneira um pouco diferente.

01:45:44.290 --> 01:45:46.810
Se o título da página for John Harvard e então é

01:45:46.810 --> 01:45:49.330
bem-vindo à minha página inicial e a este rodapé menos importante,

01:45:49.330 --> 01:45:52.390
por que não temos o texto grande, depois médio e depois pequeno?

01:45:52.390 --> 01:45:54.730
Então, algo arbitrário, mas um pouco mais matizado.

01:45:54.730 --> 01:45:57.410
Então, deixe-me voltar ao VS Code aqui.

01:45:57.410 --> 01:46:02.800
E no meu arquivo home.html, deixe-me apresentar ainda não a tag de estilo

01:46:02.800 --> 01:46:05.530
mas o que vou chamar temporariamente de atributo de estilo.

01:46:05.530 --> 01:46:06.790
Ambos existem de fato.

01:46:06.790 --> 01:46:09.110
Este é mais simples e vai estar correto,

01:46:09.110 --> 01:46:11.980
mas veremos em um momento não tão bem projetado, sem dúvida,

01:46:11.980 --> 01:46:13.490
como costuma ser nossa narrativa.

01:46:13.490 --> 01:46:17.860
Então, dentro da tag style, você pode colocar essa linguagem chamada CSS.

01:46:17.860 --> 01:46:20.590
Pares de valores-chave, também conhecidos como propriedades.

01:46:20.590 --> 01:46:23.620
A única maneira de saber quais propriedades existem, quais chaves existem,

01:46:23.620 --> 01:46:26.513
é assistir a uma aula, ler um livro, consultar uma referência online.

01:46:26.513 --> 01:46:29.180
E vamos dar a você apenas uma amostra do que está por aí.

01:46:29.180 --> 01:46:32.890
Então suponha que eu queira controlar o tamanho da fonte deste primeiro parágrafo.

01:46:32.890 --> 01:46:37.720
Posso dizer literalmente o tamanho da fonte em letras minúsculas, dois pontos e, em seguida, uma palavra

01:46:37.720 --> 01:46:38.560
como grande.

01:46:38.560 --> 01:46:42.190
Ou posso especificar 12 pontos ou 18 pontos ou algo assim

01:46:42.190 --> 01:46:45.490
mais preciso como do Google Docs ou Microsoft Word.

01:46:45.490 --> 01:46:50.260
E suponha que eu queira tornar este texto aqui médio.

01:46:50.260 --> 01:46:54.340
Bem, vou tirar aspas tamanho da fonte dois pontos médio.

01:46:54.340 --> 01:47:00.850
E aqui embaixo ou eu vou fazer o estilo igual ao tamanho da fonte pequeno.

01:47:00.850 --> 01:47:03.970
Vou começar apenas com esses três pares de valores-chave.

01:47:03.970 --> 01:47:06.033
Mesma chave, mas valores diferentes.

01:47:06.033 --> 01:47:08.200
Eu vou voltar para minha página e em um momento eu vou recarregar,

01:47:08.200 --> 01:47:09.742
e vai ser um tanto sutil.

01:47:09.742 --> 01:47:13.490
Mas observe como o tamanho da fonte muda quando eu recarrego agora.

01:47:13.490 --> 01:47:13.990
Tudo bem.

01:47:13.990 --> 01:47:15.157
Então eu tenho um pouco maior.

01:47:15.157 --> 01:47:18.223
O do meio é quase o mesmo e o último é um pouco menor.

01:47:18.223 --> 01:47:19.390
E se eu quiser centralizar?

01:47:19.390 --> 01:47:22.000
Assim como muitas páginas da web têm o texto assim centralizado.

01:47:22.000 --> 01:47:25.060
Bem, posso separar esses pares de valores-chave com ponto-e-vírgula.

01:47:25.060 --> 01:47:28.180
E sinto muito, o ponto-e-vírgula meio que voltou com o CSS.

01:47:28.180 --> 01:47:31.510
Mas eu posso fazer text-align:center.

01:47:31.510 --> 01:47:34.150
A rigor, não preciso do último ponto e vírgula

01:47:34.150 --> 01:47:38.140
se não houver mais pares de valor-chave, mas farei isso apenas para ser consistente.

01:47:38.140 --> 01:47:40.540
Alinhamento de texto: centro.

01:47:40.540 --> 01:47:46.060
E aqui embaixo depois de outro ponto e vírgula, text-align:center.

01:47:46.060 --> 01:47:47.770
Tudo bem, vamos voltar, recarregar.

01:47:47.770 --> 01:47:49.930
Agora vai ficar bem mais evidente a mudança.

01:47:49.930 --> 01:47:52.420
E agora temos o início de uma página inicial.

01:47:52.420 --> 01:47:55.270
Ainda bem básico, mas pelo menos é um pouco mais interessante.

01:47:55.270 --> 01:47:58.060
Acontece que podemos fazer um pouco melhor com o símbolo de direitos autorais.

01:47:58.060 --> 01:48:01.960
Como a maioria dos computadores realmente tem suporte para um círculo com um C nele.

01:48:01.960 --> 01:48:05.503
Mas você não pode simplesmente fazer isso com um texto como este.

01:48:05.503 --> 01:48:06.920
Existem diferentes maneiras de fazer isso.

01:48:06.920 --> 01:48:09.337
Você pode copiá-lo e colá-lo de um site que já o possui

01:48:09.337 --> 01:48:12.670
para que você não precise descobrir o pressionamento de tecla mágico no seu Mac ou PC.

01:48:12.670 --> 01:48:15.160
Mas também há no HTML o que chamamos de entidades.

01:48:15.160 --> 01:48:19.780
E você pode realmente especificar usando códigos hexadecimais ou decimais

01:48:19.780 --> 01:48:24.970
números como este, hash 169 ponto e vírgula após um e comercial.

01:48:24.970 --> 01:48:27.340
E este é um símbolo especial que você pode procurar

01:48:27.340 --> 01:48:29.710
em qualquer referência online para caracteres especiais

01:48:29.710 --> 01:48:33.190
que são difíceis ou impossíveis de digitar manualmente em seu teclado.

01:48:33.190 --> 01:48:35.920
E isso, deixe-me ampliar apenas para que fique óbvio,

01:48:35.920 --> 01:48:40.990
se eu recarregar agora em vez de ser dois parênteses e um caractere C,

01:48:40.990 --> 01:48:43.400
agora é um símbolo de direitos autorais adequado.

01:48:43.400 --> 01:48:44.650
Então você verá isso por aí.

01:48:44.650 --> 01:48:47.410
Eles não são necessariamente usados ​​com tanta frequência hoje em dia,

01:48:47.410 --> 01:48:49.330
mas é bom saber que existem.

01:48:49.330 --> 01:48:53.860
Mas deixe-me voltar agora ao meu código e propor que, embora correto,

01:48:53.860 --> 01:48:56.650
isso não é indiscutivelmente muito bem projetado.

01:48:56.650 --> 01:48:59.980
E mesmo que você nunca tenha visto HTML, nunca tenha visto CSS antes,

01:48:59.980 --> 01:49:07.080
que instinto você pode ter para saber por que isso foi mal projetado?

01:49:07.080 --> 01:49:08.085
Sim.

01:49:08.085 --> 01:49:08.987
AUDIÊNCIA: [INAUDÍVEL]

01:49:08.987 --> 01:49:10.320
DAVID MALAN: Há repetição.

01:49:10.320 --> 01:49:13.110
Em geral, nas últimas semanas, C, Python, SQL,

01:49:13.110 --> 01:49:16.992
repetição geralmente ruim e desleixada e não vai escalar bem.

01:49:16.992 --> 01:49:19.200
Então, a repetição que eu acho que você provavelmente está aludindo

01:49:19.200 --> 01:49:22.440
é centro de alinhamento de texto, centro de alinhamento de texto, centro de alinhamento de texto.

01:49:22.440 --> 01:49:25.350
Bem, podemos fatorar isso em CSS.

01:49:25.350 --> 01:49:27.930
O C em CSS significa Cascading.

01:49:27.930 --> 01:49:30.750
E isso significa que se você mover algumas propriedades

01:49:30.750 --> 01:49:35.250
aos pais ou avós, aos filhos ou netos

01:49:35.250 --> 01:49:37.020
herdará essas propriedades.

01:49:37.020 --> 01:49:40.330
Ou seja, eles vão cair em cascata na árvore genealógica, por assim dizer.

01:49:40.330 --> 01:49:42.930
E então deixe-me ir em frente e remover tudo isso,

01:49:42.930 --> 01:49:45.660
desde que eu afirmo que eles são realmente redundantes.

01:49:45.660 --> 01:49:49.900
E deixe-me preservar apenas um deles, bem, deixe-me fazer isso.

01:49:49.900 --> 01:49:53.400
Não é correto colocar um parágrafo dentro de um parágrafo.

01:49:53.400 --> 01:49:56.950
Isso não é uma coisa na escrita em inglês ou na escrita em geral.

01:49:56.950 --> 01:49:58.770
Então eu vou fazer uma coisa primeiro.

01:49:58.770 --> 01:50:01.830
Acontece que esses dois não são, sem dúvida, parágrafos.

01:50:01.830 --> 01:50:04.890
É como um cabeçalho, o corpo, a essência da página,

01:50:04.890 --> 01:50:05.850
e depois o rodapé.

01:50:05.850 --> 01:50:09.880
Portanto, se um parágrafo não tiver a semântica correta em inglês,

01:50:09.880 --> 01:50:11.760
você pode realmente usar uma tag de forma mais genérica

01:50:11.760 --> 01:50:15.520
isso está em toda a internet chamado div para divisão da página.

01:50:15.520 --> 01:50:19.320
E este é apenas um termo muito genérico para uma grande região retangular

01:50:19.320 --> 01:50:21.720
que divide a página de novo e de novo, apenas para que você

01:50:21.720 --> 01:50:23.920
pode pensar em diferentes regiões.

01:50:23.920 --> 01:50:27.420
Agora que tenho div, que realmente não tem mais significado do que isso.

01:50:27.420 --> 01:50:28.710
É uma divisão da página.

01:50:28.710 --> 01:50:29.850
Interprete como quiser.

01:50:29.850 --> 01:50:32.080
Agora eu posso ter vários desses.

01:50:32.080 --> 01:50:34.710
E deixe-me ir em frente e abrir uma tag div aqui.

01:50:34.710 --> 01:50:37.210
Deixe-me fechar uma nova tag div aqui.

01:50:37.210 --> 01:50:39.312
E então, só para manter tudo arrumado, estou

01:50:39.312 --> 01:50:41.520
vai destacar tudo no meio e apertar Tab.

01:50:41.520 --> 01:50:44.130
E isso automaticamente recua tudo para mim.

01:50:44.130 --> 01:50:48.970
Agora eu tenho três divs dentro de outro div, e tudo bem.

01:50:48.970 --> 01:50:50.460
Isso é muito comum.

01:50:50.460 --> 01:50:51.750
Agora eu vou fazer isso.

01:50:51.750 --> 01:50:57.960
O estilo é igual ao texto entre aspas, alinhamento do ponto e vírgula central dos dois pontos ou não.

01:50:57.960 --> 01:51:01.020
E agora tenho alguns recursos em cascata.

01:51:01.020 --> 01:51:05.040
Agora, o pai dessas três crianças, John Harvard, bem-vindo à minha página inicial,

01:51:05.040 --> 01:51:07.900
e os direitos autorais agora herdarão essa propriedade.

01:51:07.900 --> 01:51:10.650
Então, quando carreguei em recarregar, nada mudou esteticamente.

01:51:10.650 --> 01:51:13.350
Opa, desculpe.

01:51:13.350 --> 01:51:15.420
Eu deveria ter recarregado um pouco antes.

01:51:15.420 --> 01:51:17.610
Quando você usa um div em vez de um parágrafo,

01:51:17.610 --> 01:51:20.968
na verdade, elimina o espaço entre esses parágrafos.

01:51:20.968 --> 01:51:23.010
Apenas os coloca um pouco mais próximos.

01:51:23.010 --> 01:51:24.690
Eu posso consertar isso de outra maneira.

01:51:24.690 --> 01:51:27.330
Mas tirando isso, tudo ainda está centrado

01:51:27.330 --> 01:51:29.970
e o texto ainda é grande, médio e pequeno.

01:51:29.970 --> 01:51:32.760
Mas eu deveria ter chamado essa mudança no espaçamento do parágrafo.

01:51:32.760 --> 01:51:35.650
Mas poderíamos trazer isso de volta em breve, se quiséssemos.

01:51:35.650 --> 01:51:38.800
Agora, o que mais eu poderia fazer para talvez melhorar isso?

01:51:38.800 --> 01:51:42.630
Bem, estritamente falando, eu realmente não preciso desse div pai

01:51:42.630 --> 01:51:46.200
porque esses três divs internos já tinham um pai.

01:51:46.200 --> 01:51:49.620
Então, deixe-me realmente me livrar desse novo div apenas para desfazer o que fiz.

01:51:49.620 --> 01:51:50.580
Vou destacar isso.

01:51:50.580 --> 01:51:52.680
E se você ainda não viu esse truque, Shift Tab

01:51:52.680 --> 01:51:55.380
irá desindentar bem, o que talvez seja útil.

01:51:55.380 --> 01:51:59.200
Eu poderia simplesmente colocar o alinhamento do texto no centro da tag do corpo.

01:51:59.200 --> 01:52:03.810
Assim, o texto alinha o centro dos dois pontos, abre aspas.

01:52:03.810 --> 01:52:07.770
Isso também funcionaria, desde que você subisse na árvore genealógica, então

01:52:07.770 --> 01:52:11.160
falar, recarregar, e agora de fato não tem nada esteticamente

01:52:11.160 --> 01:52:13.080
que mudou desta vez.

01:52:13.080 --> 01:52:16.140
Mas acontece que hoje em dia a web está ficando um pouco mais sofisticada.

01:52:16.140 --> 01:52:19.080
E mesmo que você veja tantos exemplos online, em tutoriais,

01:52:19.080 --> 01:52:21.870
em livros usando div, div, div em todo lugar,

01:52:21.870 --> 01:52:24.050
existem tags semânticas mais recentes.

01:52:24.050 --> 01:52:25.800
Semântica significa apenas que eles têm mais significado

01:52:25.800 --> 01:52:27.670
do que essa noção genérica de divisão.

01:52:27.670 --> 01:52:31.050
E se você procurar uma documentação para HTML,

01:52:31.050 --> 01:52:34.680
você verá que se quiser ter um cabeçalho em uma página, não um cabeçalho

01:52:34.680 --> 01:52:38.910
como H1, H2, mas um cabeçalho, existe literalmente hoje em dia uma tag de cabeçalho.

01:52:38.910 --> 01:52:42.240
E isso é um pouco melhor porque agora diz o que é.

01:52:42.240 --> 01:52:44.860
Mecanismos de busca como Google e Bing podem detectar, oh,

01:52:44.860 --> 01:52:46.110
esse é o cabeçalho da página.

01:52:46.110 --> 01:52:49.235
Talvez devêssemos usar isso e dar mais destaque nos resultados da pesquisa.

01:52:49.235 --> 01:52:51.220
Você pode então ter uma parte principal da página.

01:52:51.220 --> 01:52:53.460
Então, literalmente, uma tag chamada main hoje em dia.

01:52:53.460 --> 01:52:55.500
Você pode literalmente ter um rodapé da página.

01:52:55.500 --> 01:52:58.470
E, novamente, eles costumam ser úteis para leitores de tela

01:52:58.470 --> 01:53:01.170
para ajudar a recitar coisas verbalmente para pessoas que de outra forma não

01:53:01.170 --> 01:53:02.045
ser capaz de lê-los.

01:53:02.045 --> 01:53:06.510
E provavelmente os leitores de tela podem destacar o cabeçalho e a parte principal

01:53:06.510 --> 01:53:08.640
mas talvez não gaste tempo para o usuário

01:53:08.640 --> 01:53:11.820
no rodapé, que é sem dúvida um pouco menos importante semanticamente

01:53:11.820 --> 01:53:12.840
geralmente.

01:53:12.840 --> 01:53:14.893
Ou os mecanismos de pesquisa, novamente, agora sabem o que é

01:53:14.893 --> 01:53:17.560
o cabeçalho, qual é o rodapé, qual é a parte principal da página.

01:53:17.560 --> 01:53:20.020
Assim, eles sabem o que pesquisar e analisar.

01:53:20.020 --> 01:53:25.270
Portanto, este seria sem dúvida um design melhor hoje em dia também.

01:53:25.270 --> 01:53:28.060
Mas o que mais permanece como um problema?

01:53:28.060 --> 01:53:32.040
Bem, isso agora está ficando um pouco mais sutil e requer alguma experiência.

01:53:32.040 --> 01:53:36.360
Mas essa prática de colocar HTML e CSS no mesmo arquivo,

01:53:36.360 --> 01:53:37.450
é um pouco desleixado.

01:53:37.450 --> 01:53:37.950
Por que?

01:53:37.950 --> 01:53:42.180
Porque significa que estou misturando meus dados com a apresentação deles.

01:53:42.180 --> 01:53:45.210
As coisas suculentas que me interessam, como John Harvard e a frase

01:53:45.210 --> 01:53:47.910
bem-vindo à minha página inicial e a toda a estética

01:53:47.910 --> 01:53:49.530
que eu possa querer mudar com o tempo.

01:53:49.530 --> 01:53:52.548
E honestamente, porque tudo está atualmente em um grande arquivo,

01:53:52.548 --> 01:53:54.840
vai tornar muito difícil para mim colaborar

01:53:54.840 --> 01:53:57.430
com um colega de classe ou de trabalho.

01:53:57.430 --> 01:53:59.790
Então talvez eu faça o HTML, eles fazem o CSS.

01:53:59.790 --> 01:54:01.910
Uh-uh, não se vocês estiverem todos trabalhando no mesmo arquivo.

01:54:01.910 --> 01:54:02.910
Seria um pesadelo.

01:54:02.910 --> 01:54:06.000
Mesmo se você usar um recurso de compartilhamento do VS Code como o Google Docs

01:54:06.000 --> 01:54:09.230
e ambos estiverem digitando ao mesmo tempo, você vai errar de alguma forma.

01:54:09.230 --> 01:54:11.990
Seria bom se pudéssemos separar essas duas línguas.

01:54:11.990 --> 01:54:14.490
Bem, uma maneira de fazer isso seria a seguinte.

01:54:14.490 --> 01:54:16.910
Deixe-me me livrar de todas as tags de estilo.

01:54:16.910 --> 01:54:21.310
Desculpe, atributos de estilo que adicionei até agora

01:54:21.310 --> 01:54:23.710
em todos os quatro agora dessas tags.

01:54:23.710 --> 01:54:29.350
E deixe-me apresentar a tag de estilo que vimos no slide anterior.

01:54:29.350 --> 01:54:31.900
Vou subir aqui no cabeçalho da página, que

01:54:31.900 --> 01:54:35.650
é onde tecnicamente essas tags de estilo devem ir para que já estejam

01:54:35.650 --> 01:54:39.250
carregado na memória antes mesmo de o corpo ser analisado pelo navegador.

01:54:39.250 --> 01:54:41.860
E dentro da tag de estilo, na verdade estou

01:54:41.860 --> 01:54:47.720
vou selecionar os elementos HTML que desejo estilizar, se preferir.

01:54:47.720 --> 01:54:50.110
Então, se eu quiser mudar a estética do corpo,

01:54:50.110 --> 01:54:52.450
Vou digitar literalmente o nome desse corpo de tag.

01:54:52.450 --> 01:54:55.480
E então, desculpe, chaves estão de volta também

01:54:55.480 --> 01:55:01.390
de C. Dentro dessas chaves, vou colocar o alinhamento do texto no centro.

01:55:01.390 --> 01:55:03.260
Portanto, os pares de valores-chave são os mesmos.

01:55:03.260 --> 01:55:06.130
A única coisa nova que fiz foi mover parte da sintaxe

01:55:06.130 --> 01:55:08.530
até esta nova tag de estilo na cabeça.

01:55:08.530 --> 01:55:11.930
Se eu quiser agora controlar a tag de cabeçalho também,

01:55:11.930 --> 01:55:13.390
Posso usar as mesmas chaves.

01:55:13.390 --> 01:55:17.020
Esta é a convenção para colocar a chave aberta na mesma linha, a fechada

01:55:17.020 --> 01:55:18.430
chaveta em outro.

01:55:18.430 --> 01:55:22.270
O navegador realmente não se importa, mas esta é uma convenção de estilo CSS comum.

01:55:22.270 --> 01:55:25.570
Vou fazer tamanho de fonte grande ponto e vírgula.

01:55:25.570 --> 01:55:29.620
Em seguida, para a tag principal, usarei tamanho de fonte médio.

01:55:29.620 --> 01:55:34.000
E então, para a tag de rodapé, vou fazer o tamanho da fonte menor.

01:55:34.000 --> 01:55:35.320
Então exatamente a mesma coisa.

01:55:35.320 --> 01:55:37.473
E é reconhecidamente um pouco mais detalhado.

01:55:37.473 --> 01:55:38.890
Está ocupando mais linhas de código.

01:55:38.890 --> 01:55:40.700
Nem tudo cabe na tela.

01:55:40.700 --> 01:55:44.455
Mas se você rolar para baixo agora e adquirir um olho para isso,

01:55:44.455 --> 01:55:46.210
isso é apenas melhor.

01:55:46.210 --> 01:55:47.540
É apenas mais compacto.

01:55:47.540 --> 01:55:48.700
É mais legível.

01:55:48.700 --> 01:55:52.430
O conteúdo, os dados saltam e não há distrações visuais

01:55:52.430 --> 01:55:55.330
como as propriedades CSS como antes.

01:55:55.330 --> 01:55:58.597
O lado positivo aqui também é que não precisamos realmente...

01:55:58.597 --> 01:56:00.430
isso não muda a estética.

01:56:00.430 --> 01:56:03.320
Se eu recarregar a mesma página, ela ainda terá a mesma aparência.

01:56:03.320 --> 01:56:06.880
Mas dei um passo em direção a um design um pouco melhor.

01:56:06.880 --> 01:56:09.820
Mas deixe-me propor que há outras maneiras de fazer isso também.

01:56:09.820 --> 01:56:14.382
Nós apenas selecionamos as coisas por meio de seu tipo.

01:56:14.382 --> 01:56:16.840
Então esse era o chamado seletor de tipo quando eu literalmente apenas

01:56:16.840 --> 01:56:18.010
especificou o tipo de tag.

01:56:18.010 --> 01:56:20.890
Corpo, cabeçalho, principal, rodapé.

01:56:20.890 --> 01:56:23.890
Mas há outras maneiras que agora podemos lançar as bases

01:56:23.890 --> 01:56:27.430
por fazer CSS reutilizável que você e colegas e colegas

01:56:27.430 --> 01:56:31.790
pode usar e reutilizar em vários arquivos e até mesmo em vários projetos.

01:56:31.790 --> 01:56:33.590
Então deixe-me ir em frente e fazer isso.

01:56:33.590 --> 01:56:37.240
Em vez de apenas dizer muito explicitamente que quero que o corpo seja centralizado,

01:56:37.240 --> 01:56:43.030
deixe-me inventar um adjetivo, se você quiser, e deixe-me mudar isso para .centered.

01:56:43.030 --> 01:56:48.730
E esta nova palavra do vocabulário, centralizado, significará literalmente centro de alinhamento de texto.

01:56:48.730 --> 01:56:53.800
Deixe-me prosseguir aqui e vou criar um novo adjetivo chamado grande,

01:56:53.800 --> 01:56:58.540
um novo adjetivo chamado medium e um novo adjetivo chamado small.

01:56:58.540 --> 01:57:02.260
Eles são deliberadamente consistentes com o que as propriedades fazem.

01:57:02.260 --> 01:57:04.810
Mas essas são agora as palavras do meu próprio vocabulário.

01:57:04.810 --> 01:57:06.970
E eles são chamados de classes.

01:57:06.970 --> 01:57:11.740
Portanto, uma classe é apenas uma coleção de pares chave-valor, uma coleção de propriedades

01:57:11.740 --> 01:57:14.200
que você pode inventar para si mesmo.

01:57:14.200 --> 01:57:16.360
E o que ele permite que você faça agora é isso.

01:57:16.360 --> 01:57:21.230
Agora, se eu quiser que todo o corpo fique centralizado, posso adicionar esta tag,

01:57:21.230 --> 01:57:25.660
que vimos brevemente no HTML de Yale, class=center.

01:57:25.660 --> 01:57:30.940
Aqui no cabeçalho, se eu quiser que seja grande, posso dizer class="large".

01:57:30.940 --> 01:57:35.140
Aqui no main, posso dizer class="medium".

01:57:35.140 --> 01:57:38.650
E aqui embaixo eu posso ter class="small".

01:57:38.650 --> 01:57:42.760
Agora, dei um passo para trás ao adicionar novamente algumas das estéticas

01:57:42.760 --> 01:57:43.540
para a página.

01:57:43.540 --> 01:57:45.520
Mas não são as propriedades reais.

01:57:45.520 --> 01:57:46.960
Não são os pares chave-valor.

01:57:46.960 --> 01:57:48.850
Agora é mais semanticamente legal, porque agora

01:57:48.850 --> 01:57:52.930
Só sei, pela leitura do HTML, como essas coisas vão parecer,

01:57:52.930 --> 01:57:56.680
Considerando que os detalhes de implementação para todos esses quatro adjetivos

01:57:56.680 --> 01:57:58.125
agora está relegado acima.

01:57:58.125 --> 01:57:59.500
E estas são literalmente minhas palavras.

01:57:59.500 --> 01:58:03.040
Eu poderia mudar para .foo e usar class="foo"

01:58:03.040 --> 01:58:07.120
mas obviamente essa não seria a melhor escolha de palavras neste caso.

01:58:07.120 --> 01:58:08.170
Tudo bem.

01:58:08.170 --> 01:58:11.240
Alguma pergunta sobre isso?

01:58:11.240 --> 01:58:16.153
Isso agora é o que chamaríamos de seletor de classe usando literalmente o ponto,

01:58:16.153 --> 01:58:18.070
mesmo que o ponto não apareça em outro lugar,

01:58:18.070 --> 01:58:21.700
mas ponto significa que esta é uma classe.

01:58:21.700 --> 01:58:25.490
Essas nem sempre são as melhores decisões de design sintático que o mundo toma.

01:58:25.490 --> 01:58:25.990
Tudo bem.

01:58:25.990 --> 01:58:27.460
Bem, um último truque então.

01:58:27.460 --> 01:58:30.078
Observe que isso é um pouco chato que eu ainda estou

01:58:30.078 --> 01:58:31.120
trabalhando no mesmo arquivo.

01:58:31.120 --> 01:58:33.190
E se meu colega quiser limpar minha estética,

01:58:33.190 --> 01:58:36.190
tornar minha página inicial muito melhor, se meu colega quiser fazer o mesmo,

01:58:36.190 --> 01:58:39.160
não seria legal se pudéssemos mover todo esse código

01:58:39.160 --> 01:58:43.120
para um arquivo diferente, como uma biblioteca Python ou um arquivo de cabeçalho C?

01:58:43.120 --> 01:58:44.170
Bem, você pode.

01:58:44.170 --> 01:58:47.740
Deixe-me prosseguir e excluir toda essa tag de estilo.

01:58:47.740 --> 01:58:54.280
Deixe-me adicionar uma tag de link com um nome confuso, cujo href vamos chamar um novo arquivo

01:58:54.280 --> 01:58:56.290
estilos.css.

01:58:56.290 --> 01:59:00.670
E digamos que o relacionamento desse arquivo é o da folha de estilo.

01:59:00.670 --> 01:59:03.610
Portanto, este é um termo de arte no mundo do desenvolvimento web.

01:59:03.610 --> 01:59:05.770
Uma folha de estilo é um arquivo de texto que contém

01:59:05.770 --> 01:59:08.140
muitos estilos, muitas propriedades CSS.

01:59:08.140 --> 01:59:10.630
Deixe-me abrir meu terminal bem rápido.

01:59:10.630 --> 01:59:16.390
E deixe-me fazer o código de styles.css.

01:59:16.390 --> 01:59:17.200
Digitar.

01:59:17.200 --> 01:59:20.800
E neste arquivo, vou colar todas as mesmas linhas de antes.

01:59:20.800 --> 01:59:22.570
Mas agora eles estão em um arquivo separado.

01:59:22.570 --> 01:59:25.930
E, de fato, se eu ocultar minha janela de terminal e der este arquivo a um colega,

01:59:25.930 --> 01:59:27.910
agora eles podem trabalhar na estética da página

01:59:27.910 --> 01:59:29.620
e tornar as coisas muito mais bonitas do que isso, talvez use

01:59:29.620 --> 01:59:32.020
tamanhos de fonte específicos, talvez adicionar cores e coisas do gênero.

01:59:32.020 --> 01:59:36.520
Considerando que posso me concentrar inteiramente no HTML, porque este arquivo agora

01:59:36.520 --> 01:59:37.840
fará referência a esse outro.

01:59:37.840 --> 01:59:40.120
E se eu voltar para minha outra guia e recarregar,

01:59:40.120 --> 01:59:42.280
o conteúdo será exatamente o mesmo,

01:59:42.280 --> 01:59:48.020
mas agora estou usando algum arquivo separado.

01:59:48.020 --> 01:59:53.260
Alguma dúvida agora sobre essas técnicas aqui?

01:59:53.260 --> 01:59:53.990
Não?

01:59:53.990 --> 01:59:58.330
Tudo bem, então com isso dito, deixe-me mostrar apenas um exemplo agora

01:59:58.330 --> 02:00:00.075
do que chamei há pouco de frameworks.

02:00:00.075 --> 02:00:02.200
E é aqui que o desenvolvimento web fica divertido,

02:00:02.200 --> 02:00:03.610
pelo menos se você gosta disso, especialmente se você

02:00:03.610 --> 02:00:06.190
como o tipo de design lógico, a apresentação de informações

02:00:06.190 --> 02:00:07.898
você se preocupa, mas você realmente não quer

02:00:07.898 --> 02:00:11.260
para lutar com tamanhos e cores de fonte e obter tudo pixel perfeito,

02:00:11.260 --> 02:00:12.110
por assim dizer.

02:00:12.110 --> 02:00:16.360
Deixe-me propor que eu abra aqui um exemplo em apenas um momento no VS Code

02:00:16.360 --> 02:00:18.340
que preparei com antecedência.

02:00:18.340 --> 02:00:22.750
E esta vai ser uma oportunidade

02:00:22.750 --> 02:00:27.220
para considerar como você pode obter alguns dos dados da semana passada,

02:00:27.220 --> 02:00:29.410
onde coletamos os favoritos de todos,

02:00:29.410 --> 02:00:31.587
e colocá-lo em uma tabela HTML realmente grande.

02:00:31.587 --> 02:00:34.420
Então eu escrevi isso com antecedência porque era uma grande quantidade de dados,

02:00:34.420 --> 02:00:37.060
mas são os mesmos dados do Formulário Google da semana passada.

02:00:37.060 --> 02:00:41.000
E você já verá as dicas de uma tag de tabela e esses TRs.

02:00:41.000 --> 02:00:43.180
E adicionei algumas outras tags para estética.

02:00:43.180 --> 02:00:46.120
Acontece que quando você tem um cabeçalho visualmente mais interessante

02:00:46.120 --> 02:00:48.850
para sua tabela, há outra tag chamada thead.

02:00:48.850 --> 02:00:50.427
Há outra tag chamada tbody.

02:00:50.427 --> 02:00:52.510
Estes não são tão interessantes intelectualmente.

02:00:52.510 --> 02:00:55.690
Acabei de ler a documentação e percebi, oh, para deixar as coisas mais bonitas

02:00:55.690 --> 02:00:58.160
Preciso de uma cabeça, um corpo e assim por diante.

02:00:58.160 --> 02:01:01.240
Mas o que é interessante aqui é que se eu for ao meu índice

02:01:01.240 --> 02:01:04.540
aqui e abra este arquivo chamado favorites.html,

02:01:04.540 --> 02:01:08.180
aqui estão todos os dados da planilha do Google da semana passada,

02:01:08.180 --> 02:01:13.450
que exportamos como CSV e eu manualmente antes da classe ser convertida apenas em HTML.

02:01:13.450 --> 02:01:16.210
É de fato uma mesa, mas não é bonita.

02:01:16.210 --> 02:01:18.100
As colunas estão muito próximas umas das outras.

02:01:18.100 --> 02:01:20.440
É meio difícil distinguir uma linha da outra.

02:01:20.440 --> 02:01:23.020
Mas isso é apenas HTML bruto escrito por mim.

02:01:23.020 --> 02:01:26.080
Agora, eu poderia usar CSS e alguns dos truques que acabamos de

02:01:26.080 --> 02:01:27.910
viu para talvez mudar o tamanho da fonte.

02:01:27.910 --> 02:01:31.640
Existem maneiras de alterar a cor, a cor do plano de fundo e muitas coisas assim.

02:01:31.640 --> 02:01:34.480
Mas honestamente, certamente outras pessoas no mundo

02:01:34.480 --> 02:01:37.210
apresentaram dados tabulares de maneiras bonitas.

02:01:37.210 --> 02:01:40.030
Já estive em muitos sites que têm mesas mais bonitas que as minhas.

02:01:40.030 --> 02:01:44.980
Posso usar o framework de outra pessoa, o CSS de outra pessoa

02:01:44.980 --> 02:01:48.010
incluído na minha página, mas não fique em seus ombros

02:01:48.010 --> 02:01:50.110
e apenas fazer minhas coisas parecerem mais bonitas?

02:01:50.110 --> 02:01:51.490
Bem, ouso dizer que posso.

02:01:51.490 --> 02:01:55.570
Deixe-me prosseguir aqui e abrir semi-secretamente o VS Code novamente.

02:01:55.570 --> 02:01:59.770
E deixe-me pegar uma versão ligeiramente diferente de favorites.html

02:01:59.770 --> 02:02:06.490
que também abri com antecedência, onde adiciono esta linha de código.

02:02:06.490 --> 02:02:08.680
Dê-me apenas um momento para colocar esta versão em primeiro plano.

02:02:08.680 --> 02:02:13.210
E os dados são os mesmos de antes, mas adicionei uma dessas tags de link.

02:02:13.210 --> 02:02:16.060
E não estou vinculando ao meu próprio styles.css.

02:02:16.060 --> 02:02:19.270
Estou usando uma biblioteca popular chamada bootstrap.

02:02:19.270 --> 02:02:22.060
E bootstrap é apenas uma das muitas bibliotecas populares

02:02:22.060 --> 02:02:25.690
lá fora, de graça, que tem um monte de arquivos CSS

02:02:25.690 --> 02:02:29.710
e em breve arquivos JavaScript que você pode usar gratuitamente em seus próprios projetos,

02:02:29.710 --> 02:02:32.920
pessoal ou profissionalmente, que apenas fazem as coisas parecerem

02:02:32.920 --> 02:02:36.250
e se comporte melhor sem que você precise reinventar as rodas.

02:02:36.250 --> 02:02:39.520
Agora, para acessar o CSS deles, tive que ler a documentação deles

02:02:39.520 --> 02:02:41.650
e pegue este URL muito longo aqui.

02:02:41.650 --> 02:02:42.730
Mas é a mesma ideia.

02:02:42.730 --> 02:02:45.370
Link href é igual a citar algo.

02:02:45.370 --> 02:02:48.490
E eu li a documentação deles e eles me disseram para adicionar isso.

02:02:48.490 --> 02:02:51.850
Disseram-me que se eu quiser que minhas mesas fiquem mais bonitas,

02:02:51.850 --> 02:02:55.210
Eu tenho que adicionar um atributo de classe à minha própria tag de tabela

02:02:55.210 --> 02:02:59.290
e especifique, um pouco estranho, mas foi isso que o bootstrap me disse para fazer,

02:02:59.290 --> 02:03:00.670
uma classe chamada tabela.

02:03:00.670 --> 02:03:03.170
E isso a tornará uma tabela de bootstrap mais bonita.

02:03:03.170 --> 02:03:07.180
E se eu quiser listrá-lo, como qualquer outra linha é cinza em vez de branco

02:03:07.180 --> 02:03:09.100
apenas para torná-lo um pouco mais visualmente,

02:03:09.100 --> 02:03:14.110
Também posso adicionar uma segunda classe separada por um espaço chamado table striped.

02:03:14.110 --> 02:03:15.310
Isso é tudo que eu fiz.

02:03:15.310 --> 02:03:18.790
Adicionei a linha cinco e mudei a linha nove e é isso.

02:03:18.790 --> 02:03:22.430
O resto das centenas de linhas em favorites.html são as mesmas.

02:03:22.430 --> 02:03:27.010
Mas se eu voltar aqui agora e recarregar o navegador, agora graças ao bootstrap,

02:03:27.010 --> 02:03:28.150
voilá.

02:03:28.150 --> 02:03:29.290
É muito mais bonito.

02:03:29.290 --> 02:03:32.620
Agora posso diminuir o zoom e isso altera o tamanho da fonte apenas localmente para mim.

02:03:32.620 --> 02:03:35.380
E mesmo que você não ame a estética deles, quero dizer,

02:03:35.380 --> 02:03:38.410
isso é facilmente melhor do que o meu lá.

02:03:38.410 --> 02:03:42.280
E podemos fazer ainda melhor adicionando interatividade a isso também.

02:03:42.280 --> 02:03:45.940
Mas para fazer isso, vamos precisar de uma linguagem final para hoje.

02:03:45.940 --> 02:03:48.520
E esta é uma linguagem de programação real.

02:03:48.520 --> 02:03:50.380
E não vamos usá-lo tanto no CS50,

02:03:50.380 --> 02:03:53.710
mas nós o apresentamos aqui quando começamos as coisas da web porque há apenas

02:03:53.710 --> 02:03:56.860
tantas bibliotecas gratuitas e bibliotecas profissionais que você pode usar apenas

02:03:56.860 --> 02:04:00.490
para tornar seus aplicativos da Web mais sofisticados e interativos.

02:04:00.490 --> 02:04:05.740
Os aplicativos móveis também usam cada vez mais HTML, CSS e JavaScript

02:04:05.740 --> 02:04:08.660
para alimentar nossos iPhones e dispositivos Android também.

02:04:08.660 --> 02:04:10.780
Então, um rápido tour de alguma sintaxe e então nós vamos

02:04:10.780 --> 02:04:13.600
concluir com apenas alguns exemplos esperançosamente inspiradores

02:04:13.600 --> 02:04:16.000
para dar uma amostra do que o JavaScript pode fazer.

02:04:16.000 --> 02:04:20.170
Portanto, JavaScript suporta condicionais, assim como C e Python antes dele.

02:04:20.170 --> 02:04:23.560
Se voltarmos aos nossos dias do Scratch, é claro que há uma condição.

02:04:23.560 --> 02:04:26.500
Aqui está o código JavaScript correspondente a partir de hoje.

02:04:26.500 --> 02:04:30.280
É praticamente idêntico ao C com esta sintaxe aqui.

02:04:30.280 --> 02:04:33.993
Se tivéssemos um if else, no Scratch seria assim.

02:04:33.993 --> 02:04:36.160
Em JavaScript, ficará assim.

02:04:36.160 --> 02:04:39.100
Portanto, é um pouco como uma regressão em relação ao Python.

02:04:39.100 --> 02:04:40.570
Os parênteses estão de volta.

02:04:40.570 --> 02:04:41.740
As chaves estão de volta.

02:04:41.740 --> 02:04:45.280
Os pontos-e-vírgulas que mencionei no CSS também estão de volta ao JavaScript, potencialmente.

02:04:45.280 --> 02:04:47.260
Mas é familiar é o ponto aqui.

02:04:47.260 --> 02:04:50.620
E é uma linguagem diferente que é frequentemente usada para a web,

02:04:50.620 --> 02:04:53.970
Considerando que você não pode usar o Python da maneira que estamos prestes a usar o JavaScript.

02:04:53.970 --> 02:04:56.370
Simplesmente não foi projetado para esse fim.

02:04:56.370 --> 02:05:00.570
Enquanto isso, se você tiver um if else if else no Scratch,

02:05:00.570 --> 02:05:04.440
bem, em JavaScript, assim como em C, ficará assim.

02:05:04.440 --> 02:05:06.930
Variáveis ​​em JavaScript, é claro, também são uma coisa.

02:05:06.930 --> 02:05:10.020
E no Scratch, podemos ter inicializado uma variável de contador para 0.

02:05:10.020 --> 02:05:13.090
Em JavaScript, existem algumas maneiras diferentes de fazer isso.

02:05:13.090 --> 02:05:15.305
E só por enquanto, a palavra-chave é vamos.

02:05:15.305 --> 02:05:17.430
É uma forma educada de pedir uma variável.

02:05:17.430 --> 02:05:20.520
Deixe o contador igual a 0 ponto e vírgula.

02:05:20.520 --> 02:05:23.400
Então você não menciona o tipo, mas usa uma palavra-chave aqui

02:05:23.400 --> 02:05:24.600
neste caso chamado let.

02:05:24.600 --> 02:05:28.373
Se você deseja incrementar o contador em um, algumas maneiras diferentes em JavaScript

02:05:28.373 --> 02:05:29.040
você consegue fazer isso.

02:05:29.040 --> 02:05:31.470
Assim como em C, em JavaScript você pode fazer isso.

02:05:31.470 --> 02:05:34.950
Assim como em C e em Python, em JavaScript você também pode obter isso.

02:05:34.950 --> 02:05:36.180
Então o plus plus está de volta.

02:05:36.180 --> 02:05:38.850
Talvez isso contrabalanceie a outra sintaxe também.

02:05:38.850 --> 02:05:41.010
Esse não era o caso em Python.

02:05:41.010 --> 02:05:43.432
Os loops estão de volta, é claro, em JavaScript.

02:05:43.432 --> 02:05:45.390
Considerando que no Scratch você pode repetir três vezes

02:05:45.390 --> 02:05:48.090
assim, em JavaScript é muito parecido com C.

02:05:48.090 --> 02:05:50.700
A única diferença aqui é que você diz deixe

02:05:50.700 --> 02:05:52.713
de int para um exemplo como este.

02:05:52.713 --> 02:05:54.630
Enquanto isso, se você quiser fazer algo para sempre

02:05:54.630 --> 02:05:59.470
no Scratch, em JavaScript assim como em C, você diz while true neste caso.

02:05:59.470 --> 02:06:02.070
Isso quer dizer que estamos confortáveis

02:06:02.070 --> 02:06:04.440
gastando relativamente pouco tempo em JavaScript, pelo menos

02:06:04.440 --> 02:06:07.200
para os propósitos de hoje, porque sintaticamente é

02:06:07.200 --> 02:06:11.550
realmente o mesmo que vimos antes, talvez com uma pequena variação aqui

02:06:11.550 --> 02:06:12.100
ou lá.

02:06:12.100 --> 02:06:15.480
Mas o que é interessante hoje, sem dúvida, é que tipos de coisas

02:06:15.480 --> 02:06:16.750
você pode fazer com ele.

02:06:16.750 --> 02:06:20.400
Então, com isso dito, que tipo de coisas podemos fazer?

02:06:20.400 --> 02:06:22.710
Tudo volta a esta imagem.

02:06:22.710 --> 02:06:25.800
Se esta é uma página da web simples à esquerda e esta

02:06:25.800 --> 02:06:29.220
é a árvore correspondente ou DOM, Document Object

02:06:29.220 --> 02:06:32.760
Modelo à direita, que é a árvore que o navegador cria automaticamente na memória

02:06:32.760 --> 02:06:36.930
ou RAM para você, o JavaScript agora é uma linguagem de programação adequada

02:06:36.930 --> 02:06:42.330
que nos permite manipular dinamicamente, como ler dados disso, mudar isso.

02:06:42.330 --> 02:06:44.940
E é assim que o Google, por exemplo, implementa sua caixa de entrada.

02:06:44.940 --> 02:06:47.770
Eles podem ter em sua caixa de entrada, é como uma tabela.

02:06:47.770 --> 02:06:50.970
Então TR, TR, TR, TR, provavelmente algo assim.

02:06:50.970 --> 02:06:52.740
Ou diabos, talvez div, div, div.

02:06:52.740 --> 02:06:56.190
Usando JavaScript, sempre que eles percebem que alguém lhe enviou um novo e-mail,

02:06:56.190 --> 02:07:00.510
eles podem criar um novo nó, um novo retângulo na memória e você, o humano,

02:07:00.510 --> 02:07:04.780
ver um novo div ou um novo TR de novo e de novo e de novo.

02:07:04.780 --> 02:07:06.690
Assim, com JavaScript, você só tem a capacidade

02:07:06.690 --> 02:07:11.430
para controlar a experiência do usuário em vez de, como tenho feito, constantemente

02:07:11.430 --> 02:07:15.120
pressionando recarregar na página para ver algum novo conteúdo, para ver algum novo conteúdo.

02:07:15.120 --> 02:07:18.540
O JavaScript pode ser executado 24 horas por dia, 7 dias por semana, para que você possa realmente

02:07:18.540 --> 02:07:21.210
veja todas essas mudanças ao vivo.

02:07:21.210 --> 02:07:21.840
Tudo bem.

02:07:21.840 --> 02:07:24.180
Então, vamos escrever algum código JavaScript agora.

02:07:24.180 --> 02:07:27.227
Em vez de escrevê-lo no servidor e executá-lo no servidor,

02:07:27.227 --> 02:07:29.310
vamos usar um paradigma muito comum

02:07:29.310 --> 02:07:33.630
enquanto o JavaScript é realmente executado no lado do cliente do navegador.

02:07:33.630 --> 02:07:37.080
Isso quer dizer que podemos realmente começar a escrever algum código JavaScript dentro

02:07:37.080 --> 02:07:41.370
do nosso próprio arquivo .html para que, quando um usuário visitar essa página da Web com

02:07:41.370 --> 02:07:44.910
seu navegador, não apenas o HTML e qualquer CSS são baixados

02:07:44.910 --> 02:07:48.660
ao navegador do usuário, assim como o código JavaScript para que seja executado

02:07:48.660 --> 02:07:52.950
de fato, do lado do cliente no navegador, e não do lado do servidor,

02:07:52.950 --> 02:07:55.890
como foi o caso do Python nas semanas anteriores.

02:07:55.890 --> 02:07:58.620
Bem, onde vamos escrever algum código JavaScript?

02:07:58.620 --> 02:08:02.280
Vamos em frente e revisitar hello.html, que anteriormente

02:08:02.280 --> 02:08:04.650
foi um exemplo completamente estático que literalmente apenas disse

02:08:04.650 --> 02:08:06.450
olá título, olá corpo.

02:08:06.450 --> 02:08:08.970
De fato, se eu abrir isso usando o servidor HTTP

02:08:08.970 --> 02:08:12.120
e visualize agora em uma guia separada, tudo o que dizia era exatamente isso.

02:08:12.120 --> 02:08:16.210
Hello title na aba e hello body na parte principal da viewport,

02:08:16.210 --> 02:08:16.890
por assim dizer.

02:08:16.890 --> 02:08:19.350
Bem, vamos tornar este exemplo um pouco mais

02:08:19.350 --> 02:08:21.540
dinâmico para que não diga apenas olá corpo

02:08:21.540 --> 02:08:24.280
mas talvez diga olá para uma pessoa real.

02:08:24.280 --> 02:08:25.720
Então vamos em frente e fazer isso.

02:08:25.720 --> 02:08:28.560
Vamos em frente e remover o corpo hello codificado.

02:08:28.560 --> 02:08:32.550
E vamos em frente aqui e usar uma tag de formulário.

02:08:32.550 --> 02:08:35.280
Mas não vamos usar este formulário da maneira usual

02:08:35.280 --> 02:08:38.050
por meio do qual os dados são enviados de volta ao servidor.

02:08:38.050 --> 02:08:41.890
Em vez disso, vamos alavancar o controle sobre este lado do cliente do formulário.

02:08:41.890 --> 02:08:45.570
Então, vou criar esta tag de formulário aberto, tag de formulário fechado.

02:08:45.570 --> 02:08:48.960
Dentro disso, deixe-me dar a mim mesmo uma entrada de texto que terá

02:08:48.960 --> 02:08:53.970
autocomplete="off" apenas para garantir que o que eu digitei anteriormente em meus exemplos

02:08:53.970 --> 02:08:55.960
não reaparece acidentalmente.

02:08:55.960 --> 02:08:58.890
Vamos focar automaticamente para que o cursor fique piscando

02:08:58.890 --> 02:09:00.300
bem ali naquela caixa de texto.

02:09:00.300 --> 02:09:03.240
E desta vez eu irei em frente e darei como

02:09:03.240 --> 02:09:08.035
sobre um espaço reservado para nome entre aspas

02:09:08.035 --> 02:09:10.410
para deixar claro que estou solicitando o nome do usuário.

02:09:10.410 --> 02:09:14.250
E então o tipo desta caixa de texto será o padrão ou mais explicitamente aqui

02:09:14.250 --> 02:09:14.820
texto.

02:09:14.820 --> 02:09:17.070
E então eu vou ter, como vimos antes,

02:09:17.070 --> 02:09:19.410
um botão, cujo tipo é enviar.

02:09:19.410 --> 02:09:22.688
Também nosso padrão normalmente. E então dentro deste botão

02:09:22.688 --> 02:09:23.730
vai ser o rótulo.

02:09:23.730 --> 02:09:28.050
Que tal algo como vamos chamar isso de saudação.

02:09:28.050 --> 02:09:30.250
Então é isso que o botão vai realmente dizer.

02:09:30.250 --> 02:09:32.820
Bem, deixe-me voltar para a guia do navegador.

02:09:32.820 --> 02:09:34.150
Deixe-me recarregar esta página.

02:09:34.150 --> 02:09:36.780
E agora devemos ver uma forma relativamente simples

02:09:36.780 --> 02:09:39.210
pelo qual tenho o cursor piscando em um texto

02:09:39.210 --> 02:09:42.150
entrada solicitando ao usuário seu nome e, em seguida, um botão de saudação

02:09:42.150 --> 02:09:43.113
que eu possa clicar.

02:09:43.113 --> 02:09:45.030
Mas se eu clicar neste botão agora, não vai

02:09:45.030 --> 02:09:47.363
para fazer algo útil porque não escrevi nenhum código

02:09:47.363 --> 02:09:50.430
para dizer ao navegador o que fazer quando clicar nesse botão.

02:09:50.430 --> 02:09:54.120
Mas acontece que há todo tipo de evento no mundo do JavaScript

02:09:54.120 --> 02:09:56.220
que você pode ouvir, por assim dizer.

02:09:56.220 --> 02:09:58.080
Na verdade, aqui está apenas uma lista de alguns deles.

02:09:58.080 --> 02:10:01.710
Sempre que algo muda em um campo de formulário, sempre que o usuário clica

02:10:01.710 --> 02:10:05.190
ou arrasta algo, sempre que o usuário pressiona uma tecla

02:10:05.190 --> 02:10:08.820
e talvez levante o dedo, sempre que o mouse for para baixo ou sobre

02:10:08.820 --> 02:10:12.930
ou em cima de algo, ou sempre que um formulário é enviado,

02:10:12.930 --> 02:10:15.000
esses são eventos da mesma forma que conversamos

02:10:15.000 --> 02:10:17.610
sobre eventos na semana 0 no Scratch.

02:10:17.610 --> 02:10:21.300
E em JavaScript, assim como no Scratch, onde você pode fazer algo

02:10:21.300 --> 02:10:23.550
quando a bandeira verde é clicada, em JavaScript você

02:10:23.550 --> 02:10:27.570
pode escrever código que realmente escuta qualquer um desses eventos ou mais.

02:10:27.570 --> 02:10:30.310
Dito isso, vamos voltar ao VS Code aqui

02:10:30.310 --> 02:10:32.670
e vamos fazer algumas mudanças.

02:10:32.670 --> 02:10:35.235
Vamos adicionar a este formulário um novo atributo.

02:10:35.235 --> 02:10:37.860
Essa não é a melhor maneira de fazer isso, mas talvez seja a mais simples

02:10:37.860 --> 02:10:39.040
para a versão um aqui.

02:10:39.040 --> 02:10:42.220
E digamos que ao enviar, faça o seguinte.

02:10:42.220 --> 02:10:44.280
Portanto, submit é um atributo HTML.

02:10:44.280 --> 02:10:47.220
E curiosamente, seu valor dentro das aspas

02:10:47.220 --> 02:10:50.040
na verdade, pode haver algum código JavaScript.

02:10:50.040 --> 02:10:52.620
E vamos em frente agora e vamos assumir que existe

02:10:52.620 --> 02:10:54.510
uma função no mundo chamada greet.

02:10:54.510 --> 02:10:58.390
E o que eu quero fazer é chamar essa função ali mesmo.

02:10:58.390 --> 02:11:01.590
Bem, agora em JavaScript, como faço para fazer essa função existir?

02:11:01.590 --> 02:11:06.060
Não sai da caixa como imprimir ou dizer pode em Python

02:11:06.060 --> 02:11:07.750
ou arranhão, respectivamente.

02:11:07.750 --> 02:11:08.740
Mas eu posso fazer isso.

02:11:08.740 --> 02:11:10.740
Deixe-me subir no cabeçalho desta página.

02:11:10.740 --> 02:11:13.860
Dentro de uma tag de script aqui, tanto abrir quanto fechar,

02:11:13.860 --> 02:11:15.780
deixe-me realmente escrever algum código JavaScript.

02:11:15.780 --> 02:11:18.420
E só para destacar, vou me dar algumas linhas em branco,

02:11:18.420 --> 02:11:19.830
embora não seja estritamente necessário.

02:11:19.830 --> 02:11:23.550
E deixe-me definir uma nova função em JavaScript chamada greet.

02:11:23.550 --> 02:11:26.670
E esta é a sintaxe em JavaScript para criar sua própria função.

02:11:26.670 --> 02:11:30.000
Semelhante em Python em vez de dizer def, em JavaScript você apenas diz

02:11:30.000 --> 02:11:33.510
função, o nome da função e quaisquer argumentos

02:11:33.510 --> 02:11:35.010
depois entre parênteses.

02:11:35.010 --> 02:11:36.870
Mas não vou passar nenhum aqui.

02:11:36.870 --> 02:11:39.240
Então, entre chaves, o que vou fazer

02:11:39.240 --> 02:11:41.100
é usar uma função JavaScript integrada que

02:11:41.100 --> 02:11:42.990
vem com qualquer navegador chamado alert.

02:11:42.990 --> 02:11:45.160
Não é a melhor ou mais bonita interface de usuário,

02:11:45.160 --> 02:11:47.220
mas por enquanto vai dar conta do recado.

02:11:47.220 --> 02:11:48.840
O que eu quero dizer ao usuário?

02:11:48.840 --> 02:11:53.520
Bem, vamos primeiro dizer algo simples como olá vírgula mundo fechar

02:11:53.520 --> 02:11:58.780
entre aspas, ponto e vírgula, alertando assim o usuário precisamente com essa mensagem.

02:11:58.780 --> 02:12:02.610
Agora, o que vou fazer aqui é fazer outra alteração.

02:12:02.610 --> 02:12:05.947
Não quero que este formulário seja realmente enviado ao servidor.

02:12:05.947 --> 02:12:08.280
Assim como vimos no passado, quando você envia um formulário,

02:12:08.280 --> 02:12:11.460
geralmente vai para algo como google.com/search.

02:12:11.460 --> 02:12:16.470
Na verdade, quero que meu código JavaScript assuma o controle de todo o usuário

02:12:16.470 --> 02:12:20.610
experiência deste formulário para que eu esteja apenas usando o formulário como uma entrada do usuário

02:12:20.610 --> 02:12:26.130
mecanismo, não para realmente enviar via get ou postar esses dados para algum outro servidor,

02:12:26.130 --> 02:12:27.280
incluindo o meu.

02:12:27.280 --> 02:12:29.190
Então isso vai parecer um pouco feio.

02:12:29.190 --> 02:12:31.025
Mas depois de ligar para cumprimentar, na verdade estou indo

02:12:31.025 --> 02:12:33.150
para fazer isso, que eu li a documentação sobre

02:12:33.150 --> 02:12:36.330
e eu sei que se você realmente codificar retornar false aqui,

02:12:36.330 --> 02:12:39.540
isso apenas diz ao navegador, por favor, não envie o formulário.

02:12:39.540 --> 02:12:42.040
Chame apenas a função de saudação.

02:12:42.040 --> 02:12:42.540
Tudo bem.

02:12:42.540 --> 02:12:44.760
Bem, deixe-me voltar ao meu navegador aqui.

02:12:44.760 --> 02:12:47.370
Deixe-me recarregar isso, porque eu preciso baixar o último

02:12:47.370 --> 02:12:48.900
versão do código JavaScript.

02:12:48.900 --> 02:12:51.358
E vou prosseguir sem nem mesmo digitar meu nome,

02:12:51.358 --> 02:12:53.010
Vou clicar no botão Cumprimentar.

02:12:53.010 --> 02:12:56.100
E você verá que, embora um pouco enigmático no topo,

02:12:56.100 --> 02:12:58.260
vemos um alerta que diz olá mundo.

02:12:58.260 --> 02:13:00.780
Aqui está minha URL feia do meu espaço de código no momento,

02:13:00.780 --> 02:13:03.010
mas nós realmente vemos aquela corda.

02:13:03.010 --> 02:13:06.430
Mas o que eu não fiz, é claro, foi tirar qualquer nome real do usuário.

02:13:06.430 --> 02:13:08.350
Então, como podemos fazer isso?

02:13:08.350 --> 02:13:13.620
Bem, idealmente, quero alertar o usuário com olá vírgula David ou olá vírgula

02:13:13.620 --> 02:13:15.880
Carter, qualquer nome que eu digitar nessa caixa.

02:13:15.880 --> 02:13:17.920
Então, como posso fazer isso?

02:13:17.920 --> 02:13:19.800
Bem, deixe-me criar uma variável chamada name.

02:13:19.800 --> 02:13:22.590
E deixe-me defini-lo igual a esta chamada de função.

02:13:22.590 --> 02:13:24.060
Document.queryselector.

02:13:28.120 --> 02:13:30.340
Isso vem com o próprio JavaScript.

02:13:30.340 --> 02:13:33.340
Deixe-me então passar entre parênteses um argumento que será,

02:13:33.340 --> 02:13:35.070
ah, a identidade.

02:13:35.070 --> 02:13:38.990
Preciso de um identificador exclusivo para o que desejo selecionar.

02:13:38.990 --> 02:13:41.360
Então, deixe-me voltar ao meu código HTML aqui.

02:13:41.360 --> 02:13:45.520
E em vez de dar a este campo de formulário um nome como q para consulta,

02:13:45.520 --> 02:13:49.480
deixe-me usar outro atributo HTML chamado ID onde agora eu

02:13:49.480 --> 02:13:50.920
posso chamar isso do que eu quiser.

02:13:50.920 --> 02:13:56.530
E para maior clareza, vou apenas chamar esse elemento de entrada exclusivamente de nome.

02:13:56.530 --> 02:14:00.520
Agora aqui no seletor de consulta, assim como no CSS

02:14:00.520 --> 02:14:03.580
onde você pode usar hashes e pontos e outras simbologias

02:14:03.580 --> 02:14:08.740
para selecionar certos nós em seu DOM, ou seja, retângulos nessa memória

02:14:08.740 --> 02:14:12.170
árvore, bem, posso ir em frente e selecionar o nome do hash, que,

02:14:12.170 --> 02:14:15.520
novamente, é apenas a sintaxe para selecionar exclusivamente o elemento cujo

02:14:15.520 --> 02:14:17.740
ID é neste caso o nome.

02:14:17.740 --> 02:14:19.300
Então você tem o hash aqui.

02:14:19.300 --> 02:14:23.590
Você não precisa do hash como o valor do atributo aqui na linha 20.

02:14:23.590 --> 02:14:26.590
E agora, se eu realmente quiser obter o valor dessa caixa de texto,

02:14:26.590 --> 02:14:28.370
Eu literalmente apenas digo .value.

02:14:28.370 --> 02:14:30.700
Portanto, documento refere-se a toda a própria página da web.

02:14:30.700 --> 02:14:34.450
O seletor de consulta é uma função incorporada a esse objeto, por assim dizer.

02:14:34.450 --> 02:14:40.060
E o valor acessível via .value como uma estrutura C ou até mesmo uma classe Python

02:14:40.060 --> 02:14:43.840
me permite ir dentro desse campo de texto e obter qualquer valor

02:14:43.840 --> 02:14:45.490
o usuário digitou.

02:14:45.490 --> 02:14:51.340
Agora, como pude fazer em linguagens como Python com bastante facilidade,

02:14:51.340 --> 02:14:56.380
Eu posso concatenar este nome na string hello comma space

02:14:56.380 --> 02:14:58.270
para formar uma frase completa.

02:14:58.270 --> 02:15:01.960
E você notará aqui que estou usando aspas simples em meu JavaScript,

02:15:01.960 --> 02:15:03.370
aspas duplas no meu HTML.

02:15:03.370 --> 02:15:05.320
Esta é talvez uma convenção comum.

02:15:05.320 --> 02:15:07.680
Em JavaScript, a linguagem não se importa

02:15:07.680 --> 02:15:09.430
se você usar aspas duplas ou aspas simples,

02:15:09.430 --> 02:15:11.840
mas ouso dizer que as aspas simples são apenas mais comuns.

02:15:11.840 --> 02:15:13.330
E foi isso que eu fiz aqui.

02:15:13.330 --> 02:15:13.930
Tudo bem.

02:15:13.930 --> 02:15:15.850
Agora, como sempre, vou cruzar os dedos.

02:15:15.850 --> 02:15:16.940
Volte para esta página.

02:15:16.940 --> 02:15:19.390
Vou recarregar, porque mudei o JavaScript

02:15:19.390 --> 02:15:21.040
e preciso do meu navegador para baixá-lo.

02:15:21.040 --> 02:15:24.490
E agora vou digitar meu nome, por exemplo, DAVID.

02:15:24.490 --> 02:15:26.740
Clique em Cumprimentar com os dedos cruzados.

02:15:26.740 --> 02:15:31.060
E voila, agora vejo olá vírgula David.

02:15:31.060 --> 02:15:34.900
Tudo bem, então acontece que, embora funcional, esse não é o melhor design.

02:15:34.900 --> 02:15:38.740
E combinando seu HTML com seu código JavaScript

02:15:38.740 --> 02:15:42.370
já que com este atributo on submit não é particularmente limpo.

02:15:42.370 --> 02:15:47.260
É melhor, assim como o CSS, manter seu HTML aqui, seu CSS aqui,

02:15:47.260 --> 02:15:49.690
e seu JavaScript agora aqui, por assim dizer.

02:15:49.690 --> 02:15:52.360
E melhor ainda, talvez até em alguns arquivos separados.

02:15:52.360 --> 02:15:54.820
Então, como posso mudar isso um pouco?

02:15:54.820 --> 02:15:57.850
Bem, deixe-me ir em frente e, na verdade, vamos em frente

02:15:57.850 --> 02:16:00.280
e exclua todo esse código por um momento.

02:16:00.280 --> 02:16:04.390
E deixe-me ir e me livrar disso no manipulador de envio aqui embaixo

02:16:04.390 --> 02:16:09.310
e realmente apenas destilar meu HTML apenas no HTML e nos atributos

02:16:09.310 --> 02:16:10.090
portanto.

02:16:10.090 --> 02:16:13.300
E o que vou fazer agora é fazer isso.

02:16:13.300 --> 02:16:19.810
Eu posso usar JavaScript para ouvir aquele evento de envio ou aquele

02:16:19.810 --> 02:16:20.740
em enviar evento.

02:16:20.740 --> 02:16:23.290
Na verdade, não preciso usar HTML para isso.

02:16:23.290 --> 02:16:25.390
Eu posso usar JavaScript inteiramente.

02:16:25.390 --> 02:16:29.620
Acontece que posso acessar algum outro membro deste documento

02:16:29.620 --> 02:16:32.809
fazendo document.queryselector novamente.

02:16:32.809 --> 02:16:36.010
Mas desta vez, vamos selecionar a tag de formulário real.

02:16:36.010 --> 02:16:39.639
E não tem ID porque não tem ID em seu HTML.

02:16:39.639 --> 02:16:40.990
Mas tem um nome de marca.

02:16:40.990 --> 02:16:44.680
Assim como no CSS, quando você pode segmentar elementos por meio de seus nomes,

02:16:44.680 --> 02:16:47.799
Vou apenas selecionar o único formulário nesta página

02:16:47.799 --> 02:16:50.023
usando a mesma função de seletor de consulta.

02:16:50.023 --> 02:16:51.940
E agora vou usar outra função que

02:16:51.940 --> 02:16:54.520
apenas vem com JavaScript no contexto dos navegadores

02:16:54.520 --> 02:16:57.790
em que uma vez que você seleciona um elemento como esse formulário,

02:16:57.790 --> 02:17:03.250
Posso chamar add event listener, que é semelhante em espírito ao do Scratch quando

02:17:03.250 --> 02:17:05.889
bandeira verde clicada ou qualquer bloco assim.

02:17:05.889 --> 02:17:08.740
Você pode informar ao navegador qual evento deseja ouvir.

02:17:08.740 --> 02:17:10.570
Eu quero ouvir o evento submit.

02:17:10.570 --> 02:17:12.160
Então você não diz em enviar aqui.

02:17:12.160 --> 02:17:14.500
Agora que estamos em JavaScript puro, basta dizer submit.

02:17:14.500 --> 02:17:17.570
E agora eu posso fazer algo assim.

02:17:17.570 --> 02:17:20.358
Eu posso ir em frente e dizer chamar a seguinte função.

02:17:20.358 --> 02:17:22.900
E nem vou me dar ao trabalho de dar um nome a essa função.

02:17:22.900 --> 02:17:26.320
E isso é permitido em JavaScript, como vimos brevemente em Python.

02:17:26.320 --> 02:17:29.530
E o que vou fazer agora entre chaves

02:17:29.530 --> 02:17:33.459
depois dessa função de palavra-chave é o mesmo tipo de código de antes.

02:17:33.459 --> 02:17:38.360
Farei com que o nome seja igual a document.queryselector.

02:17:38.360 --> 02:17:44.049
Vou selecionar o mesmo ID de nome de antes e obter seu valor.

02:17:44.049 --> 02:17:48.549
E ai vou fazer alert e depois passar alô vírgula, aspas simples

02:17:48.549 --> 02:17:49.570
novamente depois disso.

02:17:49.570 --> 02:17:53.709
Concatene com isso o nome e depois o ponto e vírgula.

02:17:53.709 --> 02:17:55.578
Mas preciso fazer outra coisa.

02:17:55.578 --> 02:17:57.370
Acontece que esta função, e se você

02:17:57.370 --> 02:17:59.350
leia a documentação para esta técnica,

02:17:59.350 --> 02:18:04.270
na verdade, recebe automaticamente um argumento especial chamado por evento de convenção.

02:18:04.270 --> 02:18:08.350
E esta é apenas uma variável, por assim dizer, que se refere a qualquer evento

02:18:08.350 --> 02:18:08.950
Acabou de acontecer.

02:18:08.950 --> 02:18:10.719
Nesse caso, é claro, será enviado.

02:18:10.719 --> 02:18:13.840
Mas em outros contextos, pode ser um evento de clique, um evento de mouse pressionado,

02:18:13.840 --> 02:18:15.379
ou algo totalmente diferente.

02:18:15.379 --> 02:18:18.160
Agora, isso me permite fazer isso, o que é um pouco enigmático,

02:18:18.160 --> 02:18:19.809
mas você se acostuma com essas convenções.

02:18:19.809 --> 02:18:22.570
Posso usar esse evento, seja ele qual for, e então

02:18:22.570 --> 02:18:26.379
evite qualquer que seja o comportamento padrão chamando uma função especial chamada

02:18:26.379 --> 02:18:29.010
prevenir Default com D maiúsculo. Isso é

02:18:29.010 --> 02:18:32.820
a alternativa para aquele retorno mais confuso falso ponto e vírgula

02:18:32.820 --> 02:18:35.740
que eu tinha dentro do meu HTML antes.

02:18:35.740 --> 02:18:40.889
Então, tudo o que fiz aqui agora é deixar todo o meu HTML como HTML puro aqui embaixo

02:18:40.889 --> 02:18:44.580
e coloquei todo o meu código JavaScript como JavaScript puro aqui.

02:18:44.580 --> 02:18:46.770
Esse tipo de separação de interesse semelhante ao que

02:18:46.770 --> 02:18:50.790
começamos a fazer com CSS há pouco para manter essas duas linguagens

02:18:50.790 --> 02:18:51.690
separado também.

02:18:51.690 --> 02:18:54.090
Bem, deixe-me voltar ao meu navegador aqui.

02:18:54.090 --> 02:18:55.290
Recarregue a página.

02:18:55.290 --> 02:18:58.120
E, infelizmente, há um erro sutil que cometi aqui.

02:18:58.120 --> 02:19:01.379
Deixe-me digitar DAVID e clicar em Cumprimentar.

02:19:01.379 --> 02:19:04.290
E, infelizmente, nada realmente parece acontecer.

02:19:04.290 --> 02:19:05.549
Bem, talvez seja apenas o meu nome.

02:19:05.549 --> 02:19:06.150
Carter.

02:19:06.150 --> 02:19:07.413
Saudar.

02:19:07.413 --> 02:19:08.580
E nada parece acontecer.

02:19:08.580 --> 02:19:10.080
Esse alerta não aparece.

02:19:10.080 --> 02:19:11.200
Bem, por que isso?

02:19:11.200 --> 02:19:15.629
Bem, deixe-me voltar ao VS Code aqui e apontar a ordem das operações

02:19:15.629 --> 02:19:18.330
em questões de JavaScript semelhantes em espírito a C.

02:19:18.330 --> 02:19:23.250
Porque na linha sete estou selecionando o form e tentando adicionar um evento

02:19:23.250 --> 02:19:27.420
ouvinte por enviar esse formulário, infelizmente é melhor que o formulário exista

02:19:27.420 --> 02:19:29.190
naquele momento, mas não.

02:19:29.190 --> 02:19:31.980
Porque assim como em C e em alguns casos Python

02:19:31.980 --> 02:19:35.440
onde o compilador ou o interpretador lê o código de cima para baixo,

02:19:35.440 --> 02:19:38.219
observe que o formulário não existe realmente e, portanto,

02:19:38.219 --> 02:19:41.280
são carregados na memória do computador até a linha 19.

02:19:41.280 --> 02:19:43.980
Então, temos que reordená-los de alguma forma.

02:19:43.980 --> 02:19:46.950
Agora, talvez a maneira mais simples de fazer isso seria apenas

02:19:46.950 --> 02:19:49.480
talvez seja para fazer algo assim.

02:19:49.480 --> 02:19:53.340
Deixe-me rolar de volta para minha tag de script e talvez um pouco mais

02:19:53.340 --> 02:19:57.910
mova-o explicitamente para a ordem em que desejo que seja executado.

02:19:57.910 --> 02:20:00.780
Então eu vou abaixo da minha forma e dentro do meu corpo, que

02:20:00.780 --> 02:20:04.320
está realmente OK para JavaScript aqui e apenas use o mesmo código.

02:20:04.320 --> 02:20:07.530
E assumindo que não cometi nenhum erro de digitação, vamos voltar ao navegador.

02:20:07.530 --> 02:20:09.630
Clique em recarregar novamente para obter o mais recente.

02:20:09.630 --> 02:20:12.750
Digite meu nome novamente usando essa solução puramente JavaScript.

02:20:12.750 --> 02:20:16.470
E a única mudança que fiz foi mover o código daqui de cima para cá de baixo.

02:20:16.470 --> 02:20:17.760
Clicando em Cumprimentar agora.

02:20:17.760 --> 02:20:19.290
E uau, agora está de volta.

02:20:19.290 --> 02:20:21.970
Recebemos o alerta com olá vírgula David.

02:20:21.970 --> 02:20:24.133
Esses tipos de coisas, esses tipos de princípios

02:20:24.133 --> 02:20:26.050
importa, pelo menos, quando estamos de volta a este mundo.

02:20:26.050 --> 02:20:27.390
Mas há outras soluções também.

02:20:27.390 --> 02:20:30.640
E só para você ver, porque é uma convenção comum em bibliotecas

02:20:30.640 --> 02:20:35.520
também, deixe-me desfazer essa alteração e colocar essa tag de script de volta na cabeça

02:20:35.520 --> 02:20:38.190
ou realmente em qualquer outro lugar na página onde possa estar.

02:20:38.190 --> 02:20:41.400
E deixe-me propor que há outra maneira de resolver este problema

02:20:41.400 --> 02:20:45.210
para adiar esse código nas linhas 7 a 11

02:20:45.210 --> 02:20:49.780
sendo executado até que todo o DOM, a árvore, esteja pronto para funcionar.

02:20:49.780 --> 02:20:52.480
E a sintaxe para isso pode ser a seguinte.

02:20:52.480 --> 02:20:56.010
Eu posso fazer documento e posso adicionar ao documento

02:20:56.010 --> 02:20:59.213
um ouvinte de evento que vai ouvir algo um pouco especial.

02:20:59.213 --> 02:21:01.380
E eu sempre tenho que procurar isso sozinho para lembrar

02:21:01.380 --> 02:21:02.880
a ortografia e a capitalização.

02:21:02.880 --> 02:21:04.740
Mas acontece que o próprio navegador,

02:21:04.740 --> 02:21:07.630
assim que terminar de carregar todo o seu HTML de cima para baixo,

02:21:07.630 --> 02:21:14.100
da esquerda para a direita, gerará um evento chamado conteúdo DOM carregado, capitalizado

02:21:14.100 --> 02:21:15.460
exatamente como tal.

02:21:15.460 --> 02:21:17.760
E se você quiser chamar alguma função, e eu nem

02:21:17.760 --> 02:21:22.380
precisa de um argumento de evento neste caso, você pode abrir chaves como antes

02:21:22.380 --> 02:21:24.990
e coloque dentro dessas chaves o código

02:21:24.990 --> 02:21:29.160
que você deseja executar apenas quando o conteúdo do DOM for carregado

02:21:29.160 --> 02:21:29.880
para baixo.

02:21:29.880 --> 02:21:32.820
E agora deixe-me terminar meu pensamento com uma chave fechada,

02:21:32.820 --> 02:21:34.783
fechar parênteses e ponto e vírgula.

02:21:34.783 --> 02:21:37.200
Fica um pouco irritante alinhar visualmente tudo isso,

02:21:37.200 --> 02:21:38.370
mas acho que ainda estou bem.

02:21:38.370 --> 02:21:42.270
E agora, embora esse código esteja no topo do meu arquivo

02:21:42.270 --> 02:21:46.620
ou realmente acima da própria tag de formulário, acho que estamos bem.

02:21:46.620 --> 02:21:48.300
Então, vamos voltar para o navegador aqui.

02:21:48.300 --> 02:21:49.440
Recarregue a página.

02:21:49.440 --> 02:21:54.550
Digite DAVID e clique em Cumprimentar e ainda obteremos o mesmo comportamento correto.

02:21:54.550 --> 02:21:57.900
E este é apenas um paradigma muito comum para usar esses tipos de eventos

02:21:57.900 --> 02:22:00.820
para ouvir e ouvir e ouvir para que algo aconteça

02:22:00.820 --> 02:22:04.808
e só faça algo depois que essa coisa tiver acontecido.

02:22:04.808 --> 02:22:07.350
Tudo bem, vamos dar mais um passo com o código JavaScript

02:22:07.350 --> 02:22:09.933
antes de darmos uma olhada no que é realmente divertido sobre esse idioma

02:22:09.933 --> 02:22:12.360
e o que você pode fazer com navegadores em particular

02:22:12.360 --> 02:22:14.670
apenas limpando as coisas um pouco mais.

02:22:14.670 --> 02:22:17.010
Vou voltar para o código aqui e estou realmente

02:22:17.010 --> 02:22:23.640
vai remover ou cortar todo esse código do próprio arquivo hello.html.

02:22:23.640 --> 02:22:26.160
E eu vou mudar minha tag de script para não ter nada

02:22:26.160 --> 02:22:28.710
entre a tag aberta e fechada, mas eu

02:22:28.710 --> 02:22:30.600
vou dar-lhe um atributo de origem.

02:22:30.600 --> 02:22:34.560
E vamos chamar isso, por exemplo, de hello.js.

02:22:34.560 --> 02:22:37.920
Portanto, .js seria a convenção para a extensão de arquivo de um arquivo JavaScript.

02:22:37.920 --> 02:22:40.830
E mesmo que seja um pouco estranho termos a tag script

02:22:40.830 --> 02:22:44.790
e um atributo de origem, nada entre as tags de abertura e fechamento,

02:22:44.790 --> 02:22:47.700
esta é realmente a convenção quando você deseja colocar todo o seu código

02:22:47.700 --> 02:22:49.107
em um arquivo separado.

02:22:49.107 --> 02:22:50.440
E deixe-me ir em frente e fazer isso.

02:22:50.440 --> 02:22:52.440
Deixe-me ir em frente e abrir a janela do meu terminal.

02:22:52.440 --> 02:22:55.620
Crie um novo arquivo chamado hello.js.

02:22:55.620 --> 02:22:59.190
E então, nesse arquivo, vou apenas colar o próprio código que acabei de

02:22:59.190 --> 02:23:00.660
recorte do arquivo anterior.

02:23:00.660 --> 02:23:02.310
Portanto, não há alterações no código.

02:23:02.310 --> 02:23:03.870
Tudo o que estou fazendo é fatorar.

02:23:03.870 --> 02:23:07.480
E agora estou fazendo algo como nossa fatoração CSS antes,

02:23:07.480 --> 02:23:09.210
que usou confusamente a tag de link.

02:23:09.210 --> 02:23:10.680
Isso usa a tag de script.

02:23:10.680 --> 02:23:13.975
Isso só agora me permite colaborar com alguém como Carter ou alguém

02:23:13.975 --> 02:23:15.850
else para que eles possam fazer o código JavaScript,

02:23:15.850 --> 02:23:18.570
Eu posso fazer o HTML, talvez uma terceira pessoa possa fazer o CSS.

02:23:18.570 --> 02:23:21.420
E, de fato, talvez possamos construir coisas ainda maiores

02:23:21.420 --> 02:23:25.030
projetando as coisas dessa maneira.

02:23:25.030 --> 02:23:25.530
Tudo bem.

02:23:25.530 --> 02:23:28.080
Bem, deixe-me voltar ao meu navegador novamente.

02:23:28.080 --> 02:23:29.280
Recarregue a página.

02:23:29.280 --> 02:23:33.030
Não devo ver nenhuma mudança visual, mas se eu digitar meu nome novamente, David,

02:23:33.030 --> 02:23:36.102
e clique em Cumprimentar, isso ainda funciona.

02:23:36.102 --> 02:23:38.310
E o que meu navegador acabou de fazer sob o capô

02:23:38.310 --> 02:23:44.070
não é só baixar o arquivo hello.html como sempre, porque agora tem

02:23:44.070 --> 02:23:46.830
esta tag de script que está referenciando a fonte de outro arquivo,

02:23:46.830 --> 02:23:49.740
assim como uma tag de imagem pode referenciar a fonte de uma imagem,

02:23:49.740 --> 02:23:54.840
o navegador está me ajudando automaticamente carregando isso em sua memória

02:23:54.840 --> 02:23:56.080
também.

02:23:56.080 --> 02:23:57.862
E agora, que tal um exemplo final?

02:23:57.862 --> 02:23:59.820
E para este, eu vou em frente e não

02:23:59.820 --> 02:24:02.700
escreva-o ao vivo, mas abra-o conforme preparado com antecedência

02:24:02.700 --> 02:24:05.400
apenas para mostrar o que você pode fazer ouvindo alguns

02:24:05.400 --> 02:24:08.923
desses outros eventos também, como a chave para cima, o dedo para baixo,

02:24:08.923 --> 02:24:12.090
o dedo subindo e ouvindo exatamente isso enquanto o usuário está digitando

02:24:12.090 --> 02:24:14.950
algo que você pode fazer algo interessante também.

02:24:14.950 --> 02:24:17.500
Vou voltar para minha listagem de diretórios aqui.

02:24:17.500 --> 02:24:19.680
E eu clico nesta fonte, um diretório que

02:24:19.680 --> 02:24:22.240
tem todos os exemplos que escrevi aqui com antecedência.

02:24:22.240 --> 02:24:26.580
E vou rolar para baixo até um chamado hello5.html.

02:24:26.580 --> 02:24:29.190
E no hello5 agora nos livramos do botão

02:24:29.190 --> 02:24:31.170
e temos apenas esta caixa de texto.

02:24:31.170 --> 02:24:37.710
Mas observe agora o que acontece se eu começar a digitar meu nome como DAVID.

02:24:37.710 --> 02:24:39.402
Não estou digitando Enter.

02:24:39.402 --> 02:24:41.610
E de fato, se eu começar a deletar e mudar de ideia

02:24:41.610 --> 02:24:43.920
e comece a digitar o nome de Carter, observe agora

02:24:43.920 --> 02:24:47.070
que a página web, o DOM dentro da memória do computador,

02:24:47.070 --> 02:24:49.530
agora está se atualizando automaticamente.

02:24:49.530 --> 02:24:51.280
Então nem está ouvindo, ao que parece,

02:24:51.280 --> 02:24:56.320
para um evento de envio, mas talvez para um evento de ativação.

02:24:56.320 --> 02:24:58.380
Então, deixe-me voltar ao VS Code aqui.

02:24:58.380 --> 02:24:59.730
Abra a janela do meu terminal.

02:24:59.730 --> 02:25:05.010
E no meu diretório de origem, deixe-me abrir hello5.html.

02:25:05.010 --> 02:25:07.260
Dentro da tag script, você verá algum código

02:25:07.260 --> 02:25:09.450
isso é semelhante em espírito a antes, pelo qual

02:25:09.450 --> 02:25:12.720
Estou adicionando um ouvinte de evento ao documento aguardando todos os DOMs

02:25:12.720 --> 02:25:13.830
conteúdo a ser carregado.

02:25:13.830 --> 02:25:17.490
Mas dentro dessa função, agora estou fazendo isso.

02:25:17.490 --> 02:25:21.270
Estou criando uma variável chamada input e selecionando

02:25:21.270 --> 02:25:25.410
do documento, a única tag de entrada que vimos há pouco.

02:25:25.410 --> 02:25:28.530
Em seguida, estou adicionando na linha 11 no ouvinte de evento

02:25:28.530 --> 02:25:32.323
para chave para cima, que é exatamente esse gesto para que eu possa executar

02:25:32.323 --> 02:25:35.490
algum código adicional sempre que o humano levantar o dedo do teclado

02:25:35.490 --> 02:25:36.690
após digitar uma tecla.

02:25:36.690 --> 02:25:38.050
O que eu faço então?

02:25:38.050 --> 02:25:41.190
Bem, eu vou em frente, ao que parece, e declarar outra variável chamada

02:25:41.190 --> 02:25:41.800
nome.

02:25:41.800 --> 02:25:44.440
E vou apenas selecionar alguma tag p na página.

02:25:44.440 --> 02:25:48.060
E agora não vimos realmente a tag ap, então acho que é hora de olhar para o HTML.

02:25:48.060 --> 02:25:51.990
Se eu rolar até a parte inferior da página onde está meu HTML real,

02:25:51.990 --> 02:25:55.650
você verá que há apenas uma tag de formulário e nenhum manipulador de envio mais,

02:25:55.650 --> 02:25:56.310
como antes.

02:25:56.310 --> 02:25:59.430
Há apenas uma tag de entrada e nenhum botão,

02:25:59.430 --> 02:26:03.038
mas há na linha 29 aqui uma tag p aberta e fechada

02:26:03.038 --> 02:26:05.580
apenas para que eu tenha um espaço reservado vazio para colocar algo

02:26:05.580 --> 02:26:08.040
como olá David ou olá Carter.

02:26:08.040 --> 02:26:12.000
É por isso que agora na linha 12 posso definir uma variável chamada nome

02:26:12.000 --> 02:26:16.180
e posso selecionar essa tag p para que o que eu queira fazer?

02:26:16.180 --> 02:26:19.180
Bem, se dentro da entrada houver um valor,

02:26:19.180 --> 02:26:22.900
portanto, isso é essencialmente a verificação de nulo ou a ausência de uma string.

02:26:22.900 --> 02:26:26.160
Portanto, se input.value não for igual a nada,

02:26:26.160 --> 02:26:30.840
ou seja, há um valor nessa caixa de texto, bem, essa sintaxe aqui na linha 14

02:26:30.840 --> 02:26:33.220
é uma maneira muito inteligente de fazer o seguinte.

02:26:33.220 --> 02:26:35.640
Entre nessa etiqueta de nome.

02:26:35.640 --> 02:26:38.010
Ou seja, o parágrafo vazio.

02:26:38.010 --> 02:26:42.720
Mude o HTML interno dele, o HTML dentro dele, para ser literalmente isso.

02:26:42.720 --> 02:26:44.670
Olá vírgula.

02:26:44.670 --> 02:26:47.430
E então, só para você ver uma parte adicional da sintaxe,

02:26:47.430 --> 02:26:50.237
isso é semelhante às strings f do Python, a sintaxe

02:26:50.237 --> 02:26:51.570
é um pouco estranho em JavaScript.

02:26:51.570 --> 02:26:54.957
Na verdade, você não usa aspas simples, nem aspas duplas, mas aspas invertidas,

02:26:54.957 --> 02:26:57.540
que em um teclado inglês dos EUA são normalmente a mão superior esquerda

02:26:57.540 --> 02:26:59.700
tecla do seu teclado ou algo próximo.

02:26:59.700 --> 02:27:05.670
E usando chaves de cifrão como as chaves sozinhas em Python

02:27:05.670 --> 02:27:08.740
nos permite conectar qualquer que seja o valor dessa entrada.

02:27:08.740 --> 02:27:12.750
No entanto, se não houver valor ali, parece que vou apenas dizer olá

02:27:12.750 --> 02:27:13.890
quem quer que você seja.

02:27:13.890 --> 02:27:16.370
E, de fato, podemos ver esse comportamento agora enquanto excluo,

02:27:16.370 --> 02:27:19.710
excluir, excluir, excluir, excluir, excluir, excluir e nada está lá.

02:27:19.710 --> 02:27:24.210
Agora que a condição if não é mais verdadeira e vemos esse valor padrão

02:27:24.210 --> 02:27:24.760
em vez de.

02:27:24.760 --> 02:27:28.740
Portanto, isso é apenas para dizer que, ao aproveitar esses vários eventos que

02:27:28.740 --> 02:27:32.430
estão acontecendo constantemente em quase todas as páginas da web, agora podemos registrar o código

02:27:32.430 --> 02:27:36.210
assim como fizemos no Scratch para realmente ouvir esses eventos

02:27:36.210 --> 02:27:38.370
e fazer algo com eles.

02:27:38.370 --> 02:27:41.640
Agora, descobrimos que podemos fazer algumas coisas interessantes mesmo usando

02:27:41.640 --> 02:27:42.540
código de terceiros.

02:27:42.540 --> 02:27:46.020
E assim como usamos bootstrap um pouco atrás para deixar nossa mesa mais bonita,

02:27:46.020 --> 02:27:50.460
permita-me propor que também demos uma olhada nesta versão dos favoritos

02:27:50.460 --> 02:27:51.100
também.

02:27:51.100 --> 02:27:53.100
Deixe-me voltar ao meu diretório source 8

02:27:53.100 --> 02:27:56.940
e abrir favoritos2, que fiz com antecedência, que parece quase o mesmo,

02:27:56.940 --> 02:27:58.540
embora eu tenha ampliado um pouco aqui.

02:27:58.540 --> 02:28:04.960
Mas você notará sutilmente sobre a coluna mais à esquerda nesta tabela,

02:28:04.960 --> 02:28:08.640
você verá agora esta seta em cinza apontando para cima e apontando para baixo.

02:28:08.640 --> 02:28:10.020
Anteriormente, esses não estavam lá.

02:28:10.020 --> 02:28:12.720
Tudo o que eu tinha era uma tabela HTML estática com todos

02:28:12.720 --> 02:28:14.970
desses dados classificados em qualquer ordem

02:28:14.970 --> 02:28:17.160
inserido no outro dia nesse formulário.

02:28:17.160 --> 02:28:19.260
Mas agora observe o que posso fazer.

02:28:19.260 --> 02:28:23.970
Se eu quiser classificar em uma ordem, posso clicar nesta seta ou na outra ordem,

02:28:23.970 --> 02:28:25.050
Eu posso classificar nesta seta.

02:28:25.050 --> 02:28:28.190
Então, essencialmente, fazendo isso cronologicamente para frente ou para trás.

02:28:28.190 --> 02:28:29.900
Agora, como essa classificação está acontecendo?

02:28:29.900 --> 02:28:32.810
É presumivelmente baseado em todos os timestamps que

02:28:32.810 --> 02:28:37.610
foram registrados quando enviamos aquele formulário do Google há pouco, quando

02:28:37.610 --> 02:28:38.480
foi ao vivo.

02:28:38.480 --> 02:28:42.530
Mas agora usando JavaScript, descobrimos que podemos usar alguma lógica de alguma forma

02:28:42.530 --> 02:28:44.580
e classificar esses dados pelo mesmo.

02:28:44.580 --> 02:28:47.900
E você não consegue isso automaticamente apenas usando HTML sozinho.

02:28:47.900 --> 02:28:49.440
Agora, como eu consegui isso?

02:28:49.440 --> 02:28:52.370
Bem, acontece que se eu for em frente e fechar esses arquivos de saudação.

02:28:52.370 --> 02:28:57.380
E no VS Code vamos abrir favorites2.html.

02:28:57.380 --> 02:29:00.350
Você verá que todo o HTML é realmente o mesmo se eu

02:29:00.350 --> 02:29:02.150
rolar para baixo e para baixo através deste arquivo.

02:29:02.150 --> 02:29:05.060
Mas eu adicionei algo interessante no topo.

02:29:05.060 --> 02:29:08.420
Copiei e colei os URLs e tags HTML apropriados

02:29:08.420 --> 02:29:10.370
da documentação do bootstrap.

02:29:10.370 --> 02:29:14.840
E você verá aqui que eu tenho um arquivo chamado não apenas bootstrap.min.css

02:29:14.840 --> 02:29:19.220
mas também bootstrap.bundle.min.js, bem como algumas outras coisas

02:29:19.220 --> 02:29:22.640
bem que me permite, em última análise, usar terceiros

02:29:22.640 --> 02:29:27.560
bibliotecas para adicionar alguns atributos HTML especiais que essas bibliotecas disseram

02:29:27.560 --> 02:29:28.430
eu para adicionar.

02:29:28.430 --> 02:29:31.820
E assim que essas bibliotecas detectarem a presença desses atributos

02:29:31.820 --> 02:29:36.080
agora em meus próprios dados brutos, eles fazem o que querem e JavaScriptify,

02:29:36.080 --> 02:29:38.600
não é um termo técnico, a tabela inteira e agora

02:29:38.600 --> 02:29:40.640
torná-lo interativo e não estático.

02:29:40.640 --> 02:29:43.190
Então você vai ver aqui que a estética da mesa

02:29:43.190 --> 02:29:45.290
são como antes, mesa e mesa listrada.

02:29:45.290 --> 02:29:47.900
Mas estou adicionando agora outro atributo HTML chamado

02:29:47.900 --> 02:29:50.130
alternância de dados cujo valor é tabela.

02:29:50.130 --> 02:29:53.030
E eu sei que só pela documentação dessas bibliotecas

02:29:53.030 --> 02:29:57.230
indicando que é assim que agora posso ativar esta tabela para ser interativa

02:29:57.230 --> 02:30:01.370
como eu também posso adicionando dados sortabls="true"

02:30:01.370 --> 02:30:04.070
especificamente na coluna timestamp.

02:30:04.070 --> 02:30:08.120
E a única coisa desconhecida aqui talvez seja que estou usando TH para Table

02:30:08.120 --> 02:30:10.940
Indo em oposição ao TD, como faço em outros lugares.

02:30:10.940 --> 02:30:14.090
Mas isso é tudo o que é preciso agora para focar nos dados brutos

02:30:14.090 --> 02:30:17.330
você deseja apresentar e deixar que outra pessoa faça o trabalho pesado de realmente

02:30:17.330 --> 02:30:18.920
implementando a lógica.

02:30:18.920 --> 02:30:23.450
Bem, vamos terminar com apenas uma olhada no que mais você pode fazer com JavaScript

02:30:23.450 --> 02:30:25.580
e quão poderoso é quando você combina

02:30:25.580 --> 02:30:30.620
uma linguagem como esta com os dados e a interface do usuário que você deseja transmitir.

02:30:30.620 --> 02:30:33.740
Vamos em frente e abrir dentro do diretório source 8

02:30:33.740 --> 02:30:35.990
algo chamado background.html.

02:30:35.990 --> 02:30:38.010
Agora essa interface aqui é bem simples.

02:30:38.010 --> 02:30:41.420
Ele tem apenas três botões, R, G e B. E o plano de fundo, é claro,

02:30:41.420 --> 02:30:43.100
aviso por padrão, é apenas branco.

02:30:43.100 --> 02:30:45.950
Mas quando clico no R, o fundo fica vermelho.

02:30:45.950 --> 02:30:47.750
Quando clico no G, ele fica verde.

02:30:47.750 --> 02:30:48.980
E o azul, fica azul.

02:30:48.980 --> 02:30:50.610
E de novo e de novo.

02:30:50.610 --> 02:30:52.250
Então, como isso está funcionando?

02:30:52.250 --> 02:30:54.560
Bem, se você pensar novamente nos eventos disponíveis,

02:30:54.560 --> 02:30:57.800
talvez eu esteja apenas ouvindo um clique nesses botões

02:30:57.800 --> 02:31:01.040
e então fazer algo com talvez o CSS da página

02:31:01.040 --> 02:31:03.720
para me permitir ver essas cores diferentes.

02:31:03.720 --> 02:31:08.720
Na verdade, vamos voltar ao VS Code aqui e abrir background.html.

02:31:08.720 --> 02:31:12.050
E aqui, você verá um HTML simples no topo.

02:31:12.050 --> 02:31:13.070
Apenas três botões.

02:31:13.070 --> 02:31:17.210
Mas dei a cada um um ID exclusivo para poder fazer referência a ele no código.

02:31:17.210 --> 02:31:19.640
E então dentro de uma tag de script aqui abaixo,

02:31:19.640 --> 02:31:24.180
porque eu não me incomodei com o evento de conteúdo DOM carregado aqui,

02:31:24.180 --> 02:31:25.970
observe que estou fazendo o seguinte.

02:31:25.970 --> 02:31:29.510
Estou criando uma variável chamada body que me permite selecionar a tag body.

02:31:29.510 --> 02:31:32.810
Eu então tenho nessas três linhas algum código que lida com vermelho.

02:31:32.810 --> 02:31:33.860
O que eu estou fazendo?

02:31:33.860 --> 02:31:39.120
Bem, estou selecionando no documento qualquer tag HTML que tenha ID exclusivo de vermelho.

02:31:39.120 --> 02:31:42.290
E então estou adicionando um ouvinte de evento para qualquer clique nesse botão.

02:31:42.290 --> 02:31:44.810
E sempre que alguém clicar no botão vermelho,

02:31:44.810 --> 02:31:46.920
Eu chamo essa função anonimamente.

02:31:46.920 --> 02:31:48.620
Não tem nem precisa de nome.

02:31:48.620 --> 02:31:51.860
E essa sintaxe aqui é poderosa, porque agora em JavaScript eu

02:31:51.860 --> 02:31:56.930
posso alterar o CSS da minha página fazendo body, que é a tag que selecionei

02:31:56.930 --> 02:32:01.670
duas linhas atrás, acessando seu estilo, acessando sua cor de fundo

02:32:01.670 --> 02:32:04.640
e definindo-a igual a aspas red.

02:32:04.640 --> 02:32:06.380
E eu faço o mesmo abaixo para o verde.

02:32:06.380 --> 02:32:07.820
Eu faço o mesmo abaixo para o azul.

02:32:07.820 --> 02:32:10.610
E a única coisa que vale a pena notar aqui é que em CSS,

02:32:10.610 --> 02:32:14.330
acontece que a propriedade CSS para o plano de fundo

02:32:14.330 --> 02:32:18.680
a cor de uma página é, na verdade, a cor de fundo em letras minúsculas

02:32:18.680 --> 02:32:20.210
com um hífen no meio.

02:32:20.210 --> 02:32:22.190
Infelizmente, no mundo do JavaScript,

02:32:22.190 --> 02:32:25.760
um hífen seria confundido com subtração, como plano de fundo

02:32:25.760 --> 02:32:27.320
menos cor, o que seria errado.

02:32:27.320 --> 02:32:31.220
Portanto, a convenção em JavaScript é quando você está tentando manipular CSS,

02:32:31.220 --> 02:32:36.080
você pega qualquer que seja o nome da propriedade, tamanho da fonte, cor de fundo,

02:32:36.080 --> 02:32:38.570
e você o transforma no chamado estojo de camelo aqui.

02:32:38.570 --> 02:32:41.570
Você se livra do hífen e coloca as palavras subsequentes em maiúsculas

02:32:41.570 --> 02:32:43.860
como cor neste caso aqui.

02:32:43.860 --> 02:32:44.360
Tudo bem.

02:32:44.360 --> 02:32:45.140
Que tal outro?

02:32:45.140 --> 02:32:47.670
Bem, acontece que antigamente, na minha época,

02:32:47.670 --> 02:32:51.650
havia uma tag HTML que realmente permitia que você fizesse isso.

02:32:51.650 --> 02:32:53.960
Crie texto piscando em uma tela.

02:32:53.960 --> 02:32:56.180
É bastante desagradável a este ritmo certamente.

02:32:56.180 --> 02:32:57.510
Mas como isso pode funcionar?

02:32:57.510 --> 02:33:02.030
Bem, acontece em JavaScript se dermos uma olhada no arquivo blink.html

02:33:02.030 --> 02:33:07.700
aqui, veremos que você pode em seu HTML fazer algo literalmente tão simples

02:33:07.700 --> 02:33:09.320
como olá mundo no corpo.

02:33:09.320 --> 02:33:11.730
Mas então você pode chamar esta função aqui.

02:33:11.730 --> 02:33:15.035
Acontece que, como document, há outra variável especial global

02:33:15.035 --> 02:33:16.910
você pode usar em JavaScript e navegadores chamados

02:33:16.910 --> 02:33:20.390
janela, que se refere a todas as coisas relacionadas à própria janela.

02:33:20.390 --> 02:33:22.590
A janela vem com uma função de intervalo definido,

02:33:22.590 --> 02:33:24.050
que permite que você faça exatamente isso.

02:33:24.050 --> 02:33:26.360
Defina um intervalo em milissegundos.

02:33:26.360 --> 02:33:28.740
E após cada expiração desse intervalo,

02:33:28.740 --> 02:33:31.090
alguma função será chamada para você.

02:33:31.090 --> 02:33:33.960
Então, neste caso, está dizendo a cada 50 milissegundos.

02:33:33.960 --> 02:33:37.770
Mas vamos diminuir isso agora para 500 milissegundos ou meio segundo.

02:33:37.770 --> 02:33:39.840
Chame uma função chamada blink.

02:33:39.840 --> 02:33:42.630
Observe que não tenho parênteses após o nome do blink

02:33:42.630 --> 02:33:44.490
porque não quero chamar o blink agora.

02:33:44.490 --> 02:33:47.400
Eu quero dizer ao JavaScript para chamar a função chamada

02:33:47.400 --> 02:33:49.043
piscar a cada 500 milissegundos.

02:33:49.043 --> 02:33:51.210
Agora veremos em um momento como esse código se parece,

02:33:51.210 --> 02:33:53.130
mas vamos voltar para a página e recarregar.

02:33:53.130 --> 02:33:55.800
E você vai ver agora que é um piscar de olhos mais gostoso,

02:33:55.800 --> 02:33:58.950
se for esse o caso, a cada meio segundo porque agora estou

02:33:58.950 --> 02:34:03.930
disparando esse evento, ou seja, estou chamando essa função agora, a cada 500

02:34:03.930 --> 02:34:05.260
milissegundos em vez disso.

02:34:05.260 --> 02:34:06.460
Como estou fazendo isso?

02:34:06.460 --> 02:34:10.210
Bem, nessa mesma tag de script, inventei minha própria função de piscar.

02:34:10.210 --> 02:34:13.800
Isso tem a distinção de ser realmente uma tag HTML

02:34:13.800 --> 02:34:17.730
e entre as poucas tags que o mundo removeu e se livrou

02:34:17.730 --> 02:34:21.120
para que não seja mais usado porque não é tão fácil de usar.

02:34:21.120 --> 02:34:22.630
Mas aqui embaixo o que estou fazendo?

02:34:22.630 --> 02:34:26.370
Estou obtendo o corpo do próprio documento com esta variável

02:34:26.370 --> 02:34:30.070
e, em seguida, estou verificando duas propriedades CSS sobre as quais não falamos antes,

02:34:30.070 --> 02:34:33.750
mas acontece que você pode verificar e definir a visibilidade de um elemento

02:34:33.750 --> 02:34:37.560
em JavaScript acessando essa tag, verificando seu estilo,

02:34:37.560 --> 02:34:40.350
e obtendo sua visibilidade em uma propriedade.

02:34:40.350 --> 02:34:44.730
E se acontecer de ficar oculto, a próxima linha de código aqui, 13,

02:34:44.730 --> 02:34:46.920
define igual a visível em vez disso.

02:34:46.920 --> 02:34:49.710
Caso contrário, se não estiver oculto, já deve estar visível.

02:34:49.710 --> 02:34:53.520
E então a linha 17 vira para o outro lado e muda para oculto.

02:34:53.520 --> 02:34:56.010
Aqui mão esquerda, mão direita claramente não falando.

02:34:56.010 --> 02:34:59.490
Não faço ideia de por que o oposto de visível não é invisível.

02:34:59.490 --> 02:35:01.618
É de fato visível e oculto.

02:35:01.618 --> 02:35:03.660
Mas isso apenas permite que você toda vez que essa função

02:35:03.660 --> 02:35:06.570
é chamado para alterar a propriedade de um valor

02:35:06.570 --> 02:35:08.735
para outro, conseguindo aquele efeito piscante.

02:35:08.735 --> 02:35:10.860
Você pode fazer coisas ainda mais poderosas que você e eu

02:35:10.860 --> 02:35:12.280
tomar como certo todos os dias.

02:35:12.280 --> 02:35:15.750
Vamos para a fonte 8 e vamos para autocomplete.html,

02:35:15.750 --> 02:35:16.800
que escrevi com antecedência.

02:35:16.800 --> 02:35:22.260
E esta é uma página que também carrega na memória um dicionário muito grande

02:35:22.260 --> 02:35:24.450
que você deve se lembrar do conjunto de problemas cinco.

02:35:24.450 --> 02:35:28.680
E se eu for em frente e digitar algo como CAT,

02:35:28.680 --> 02:35:32.400
você notará dinamicamente uma lista de marcadores não ordenada

02:35:32.400 --> 02:35:34.800
aparecendo abaixo da caixa de texto que mostra

02:35:34.800 --> 02:35:38.790
todas as palavras naquele dicionário de p conjunto cinco que começam com C

02:35:38.790 --> 02:35:41.940
e depois CA e depois T assim como o preenchimento automático

02:35:41.940 --> 02:35:45.390
você vê todos os dias no seu telefone e no Google ou em sites semelhantes.

02:35:45.390 --> 02:35:46.500
Como isso funciona?

02:35:46.500 --> 02:35:49.560
Bem, provavelmente estou ouvindo o pressionamento de tecla subindo.

02:35:49.560 --> 02:35:51.930
Assim que essa tecla for pressionada, provavelmente

02:35:51.930 --> 02:35:55.560
pesquisando em uma grande variedade de todas essas palavras,

02:35:55.560 --> 02:35:59.080
talvez usando pesquisa linear, talvez pesquisa binária se mais rápido do que isso.

02:35:59.080 --> 02:36:02.160
E, em seguida, procurando por qualquer string nesse array que

02:36:02.160 --> 02:36:06.900
começa com C ou CA ou CAT. E então estou gerando automaticamente

02:36:06.900 --> 02:36:08.460
o HTML, portanto.

02:36:08.460 --> 02:36:11.490
Mas talvez o mais familiar hoje em dia seja o quanto

02:36:11.490 --> 02:36:13.680
seu telefone e seu laptop sabem sobre você.

02:36:13.680 --> 02:36:20.250
E deixe-me entrar em um exemplo final aqui na fonte 8 chamado geolocation.html,

02:36:20.250 --> 02:36:23.310
que é um termo artístico que se refere apenas a descobrir sua geografia.

02:36:23.310 --> 02:36:25.170
Por exemplo, suas coordenadas de GPS.

02:36:25.170 --> 02:36:27.960
Agora aqui temos uma terceira e última variável global

02:36:27.960 --> 02:36:30.510
que seu navegador fornece, chamado navigator.

02:36:30.510 --> 02:36:32.670
E no navegador, há um objeto especial

02:36:32.670 --> 02:36:36.910
chamada geolocalização que vem com uma função chamada obter a posição atual.

02:36:36.910 --> 02:36:41.430
Então, se você chamar navigator.geolocation.getCurrentPosition

02:36:41.430 --> 02:36:44.830
e, em seguida, passe uma função própria que não precise de um nome

02:36:44.830 --> 02:36:47.580
mas leva um argumento, neste caso eu chamei de posição,

02:36:47.580 --> 02:36:50.970
assim que o navegador ou assim que o telefone descobrir

02:36:50.970 --> 02:36:55.080
em que lugar do mundo esse usuário está com esse navegador em alguma latitude

02:36:55.080 --> 02:36:57.570
e longitude, o navegador automaticamente

02:36:57.570 --> 02:36:59.400
chame essa função para você.

02:36:59.400 --> 02:37:02.250
E você pode fazer o que quiser com a posição que voltar,

02:37:02.250 --> 02:37:04.068
a latitude e a longitude, respectivamente.

02:37:04.068 --> 02:37:06.610
Vou usar uma função que não costuma ser tão útil,

02:37:06.610 --> 02:37:10.080
mas para nossos propósitos hoje, ele apenas escreverá no próprio documento

02:37:10.080 --> 02:37:13.690
para minha grande região retangular qualquer que seja a latitude, então uma vírgula,

02:37:13.690 --> 02:37:15.910
e depois a longitude também.

02:37:15.910 --> 02:37:20.070
Então, se voltarmos com este floreio final para a fonte 8,

02:37:20.070 --> 02:37:24.210
abra geolocation.html, você verá que meu navegador primeiro

02:37:24.210 --> 02:37:28.570
quer minha permissão para permitir que este site saiba minha localização.

02:37:28.570 --> 02:37:30.300
Vou seguir em frente e clicar em Permitir.

02:37:30.300 --> 02:37:31.890
Cruzando os dedos, porque pode demorar

02:37:31.890 --> 02:37:34.140
um momento para o telefone ou o laptop descobrir.

02:37:34.140 --> 02:37:36.690
E parece que de acordo com o Google, eu sou

02:37:36.690 --> 02:37:41.820
neste momento com meu Mac na latitude longitude 42.375 vírgula

02:37:41.820 --> 02:37:43.590
negativo 71,11.

02:37:43.590 --> 02:37:45.760
Vamos em frente e destacar e copiar isso.

02:37:45.760 --> 02:37:48.540
Vamos a um site como googlemaps.com.

02:37:48.540 --> 02:37:49.420
Cruzando os dedos.

02:37:49.420 --> 02:37:52.170
Se você nunca fez isso, também pode pesquisar por coordenadas de GPS.

02:37:52.170 --> 02:37:53.160
Vamos apertar Enter.

02:37:53.160 --> 02:37:56.040
E incrível.

02:37:56.040 --> 02:37:59.550
Estamos de fato no Sanders Theatre, mais ou menos lá,

02:37:59.550 --> 02:38:02.250
de pé neste palco no Halloween.

02:38:02.250 --> 02:38:03.810
E então é a oitava semana.

02:38:03.810 --> 02:38:05.580
Nos vemos na próxima vez.

02:38:05.580 --> 02:38:06.480
Feliz Dia das Bruxas.

02:38:06.480 --> 02:38:07.206
[APLAUSOS]

02:38:07.206 --> 02:38:07.873
[REPRODUÇÃO DE VÍDEO]

02:38:07.873 --> 02:38:09.600
- Pode ir.

02:38:09.600 --> 02:38:10.230
Carregando.

02:38:10.230 --> 02:38:12.420
OK.

02:38:12.420 --> 02:38:15.400
Josh, legal.

02:38:15.400 --> 02:38:15.900
Helena.

02:38:15.900 --> 02:38:17.220
Oh.

02:38:17.220 --> 02:38:18.651
[RISOS]

02:38:21.040 --> 02:38:22.070
Dinheiro

02:38:22.070 --> 02:38:22.910
Oh não, espere.

02:38:28.952 --> 02:38:29.910
Isso foi incrível, Josh.

02:38:34.590 --> 02:38:35.090
Sofia.

02:38:38.360 --> 02:38:40.340
[RISOS]

02:38:42.320 --> 02:38:44.810
Incrível.

02:38:44.810 --> 02:38:47.465
Isso foi perfeito.

02:38:47.465 --> 02:38:48.435
Dinheiro

02:38:48.435 --> 02:38:50.380
[RISOS]

02:38:50.380 --> 02:38:55.890
Acho que... para Yoel.

02:38:55.890 --> 02:38:56.390
Cara.

02:39:01.070 --> 02:39:02.210
Isso foi incrível.

02:39:02.210 --> 02:39:03.030
Obrigado a todos.

02:39:03.030 --> 02:39:03.530
- Tão bom.

02:39:06.530 --> 02:39:07.430
[TERMINAR REPRODUÇÃO]

02:39:07.430 --> 02:39:10.480
[MÚSICA, TOCANDO]